// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tests {

namespace {

const ::google::protobuf::Descriptor* Type1Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type1Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type2Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type2Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type3Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type3Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type4Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type4Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type5Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type5Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type6Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type6Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type7Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type7Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type8Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type8Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type9Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type9Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* SimpleClientMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SimpleClientMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type10Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type10Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type11Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type11Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type12Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type12Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type13Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type13Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type14Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type14Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type15Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type15Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type16Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type16Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type17Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type17Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type18Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type18Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type19Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type19Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type20Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type20Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type21Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type21Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type22Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type22Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type23Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type23Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type24Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type24Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type25Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type25Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type26Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type26Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type27Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type27Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type28Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type28Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type29Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type29Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type30Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type30Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type31Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type31Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type32Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type32Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type33Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type33Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type34Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type34Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type35Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type35Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type36Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type36Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type37Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type37Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type38Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type38Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type39Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type39Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type40Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type40Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type41Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type41Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type42Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type42Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type43Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type43Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type44Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type44Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type45Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type45Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type46Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type46Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type47Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type47Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type48Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type48Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type49Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type49Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type50Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type50Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type51Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type51Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type52Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type52Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type53Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type53Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type54Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type54Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type55Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type55Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type56Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type56Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type57Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type57Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type58Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type58Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type59Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type59Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type60Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type60Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type61Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type61Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type62Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type62Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type63Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type63Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type64Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type64Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type65Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type65Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type66Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type66Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type67Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type67Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type68Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type68Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type69Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type69Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type70Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type70Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type71Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type71Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type72Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type72Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type73Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type73Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type74Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type74Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type75Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type75Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type76Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type76Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type77Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type77Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type78Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type78Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type79Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type79Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type80Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type80Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type81Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type81Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type82Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type82Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type83Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type83Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type84Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type84Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type85Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type85Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type86Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type86Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type87Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type87Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type88Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type88Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type89Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type89Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type90Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type90Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type91Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type91Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type92Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type92Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type93Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type93Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type94Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type94Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type95Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type95Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type96Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type96Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type97Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type97Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type98Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type98Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type99Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type99Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type100Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type100Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type101Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type101Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type102Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type102Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type103Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type103Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type104Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type104Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type105Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type105Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type106Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type106Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type107Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type107Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type108Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type108Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type109Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type109Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type110Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type110Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type111Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type111Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type112Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type112Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type113Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type113Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type114Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type114Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type115Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type115Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type116Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type116Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type117Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type117Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type118Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type118Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type119Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type119Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type120Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type120Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type121Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type121Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type122Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type122Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type123Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type123Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type124Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type124Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type125Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type125Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type126Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type126Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type127Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type127Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type128Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type128Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type129Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type129Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type130Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type130Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type131Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type131Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type132Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type132Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type133Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type133Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type134Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type134Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type135Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type135Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type136Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type136Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type137Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type137Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type138Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type138Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type139Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type139Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type140Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type140Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type141Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type141Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type142Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type142Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type143Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type143Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type144Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type144Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type145Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type145Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type146Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type146Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type147Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type147Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type148Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type148Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type149Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type149Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type150Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type150Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type151Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type151Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type152Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type152Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type153Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type153Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type154Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type154Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type155Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type155Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type156Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type156Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type157Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type157Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type158Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type158Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type159Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type159Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type160Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type160Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type161Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type161Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type162Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type162Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type163Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type163Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type164Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type164Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type165Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type165Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type166Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type166Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type167Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type167Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type168Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type168Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type169Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type169Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type170Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type170Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type171Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type171Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type172Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type172Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type173Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type173Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type174Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type174Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type175Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type175Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type176Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type176Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type177Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type177Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type178Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type178Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type179Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type179Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type180Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type180Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type181Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type181Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type182Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type182Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type183Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type183Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type184Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type184Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type185Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type185Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type186Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type186Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type187Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type187Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type188Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type188Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type189Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type189Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type190Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type190Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type191Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type191Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type192Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type192Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type193Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type193Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type194Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type194Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type195Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type195Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type196Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type196Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type197Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type197Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type198Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type198Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type199Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type199Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type200Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type200Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type201Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type201Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type202Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type202Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type203Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type203Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type204Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type204Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type205Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type205Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type206Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type206Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type207Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type207Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type208Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type208Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type209Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type209Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type210Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type210Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type211Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type211Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type212Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type212Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type213Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type213Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type214Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type214Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type215Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type215Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type216Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type216Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type217Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type217Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type218Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type218Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type219Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type219Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type220Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type220Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type221Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type221Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type222Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type222Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type223Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type223Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type224Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type224Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type225Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type225Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type226Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type226Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type227Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type227Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type228Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type228Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type229Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type229Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type230Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type230Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type231Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type231Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type232Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type232Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type233Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type233Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type234Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type234Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type235Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type235Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type236Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type236Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type237Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type237Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type238Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type238Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type239Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type239Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type240Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type240Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type241Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type241Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type242Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type242Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type243Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type243Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type244Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type244Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type245Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type245Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type246Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type246Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type247Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type247Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type248Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type248Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type249Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type249Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type250Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type250Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type251Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type251Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type252Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type252Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type253Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type253Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type254Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type254Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type255Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type255Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type256Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type256Message_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messages_2eproto() {
  protobuf_AddDesc_messages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages.proto");
  GOOGLE_CHECK(file != NULL);
  Type1Message_descriptor_ = file->message_type(0);
  static const int Type1Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type1Message, data_),
  };
  Type1Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type1Message_descriptor_,
      Type1Message::default_instance_,
      Type1Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type1Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type1Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type1Message, _internal_metadata_),
      -1);
  Type2Message_descriptor_ = file->message_type(1);
  static const int Type2Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type2Message, data_),
  };
  Type2Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type2Message_descriptor_,
      Type2Message::default_instance_,
      Type2Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type2Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type2Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type2Message, _internal_metadata_),
      -1);
  Type3Message_descriptor_ = file->message_type(2);
  static const int Type3Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type3Message, data_),
  };
  Type3Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type3Message_descriptor_,
      Type3Message::default_instance_,
      Type3Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type3Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type3Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type3Message, _internal_metadata_),
      -1);
  Type4Message_descriptor_ = file->message_type(3);
  static const int Type4Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type4Message, data_),
  };
  Type4Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type4Message_descriptor_,
      Type4Message::default_instance_,
      Type4Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type4Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type4Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type4Message, _internal_metadata_),
      -1);
  Type5Message_descriptor_ = file->message_type(4);
  static const int Type5Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type5Message, data_),
  };
  Type5Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type5Message_descriptor_,
      Type5Message::default_instance_,
      Type5Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type5Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type5Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type5Message, _internal_metadata_),
      -1);
  Type6Message_descriptor_ = file->message_type(5);
  static const int Type6Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type6Message, data_),
  };
  Type6Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type6Message_descriptor_,
      Type6Message::default_instance_,
      Type6Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type6Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type6Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type6Message, _internal_metadata_),
      -1);
  Type7Message_descriptor_ = file->message_type(6);
  static const int Type7Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type7Message, data_),
  };
  Type7Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type7Message_descriptor_,
      Type7Message::default_instance_,
      Type7Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type7Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type7Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type7Message, _internal_metadata_),
      -1);
  Type8Message_descriptor_ = file->message_type(7);
  static const int Type8Message_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type8Message, data1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type8Message, data2_),
  };
  Type8Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type8Message_descriptor_,
      Type8Message::default_instance_,
      Type8Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type8Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type8Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type8Message, _internal_metadata_),
      -1);
  Type9Message_descriptor_ = file->message_type(8);
  static const int Type9Message_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type9Message, data1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type9Message, data2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type9Message, data3_),
  };
  Type9Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type9Message_descriptor_,
      Type9Message::default_instance_,
      Type9Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type9Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type9Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type9Message, _internal_metadata_),
      -1);
  SimpleClientMessage_descriptor_ = file->message_type(9);
  static const int SimpleClientMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleClientMessage, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleClientMessage, payload_),
  };
  SimpleClientMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SimpleClientMessage_descriptor_,
      SimpleClientMessage::default_instance_,
      SimpleClientMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleClientMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(SimpleClientMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleClientMessage, _internal_metadata_),
      -1);
  Type10Message_descriptor_ = file->message_type(10);
  static const int Type10Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type10Message, data_),
  };
  Type10Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type10Message_descriptor_,
      Type10Message::default_instance_,
      Type10Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type10Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type10Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type10Message, _internal_metadata_),
      -1);
  Type11Message_descriptor_ = file->message_type(11);
  static const int Type11Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type11Message, data_),
  };
  Type11Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type11Message_descriptor_,
      Type11Message::default_instance_,
      Type11Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type11Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type11Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type11Message, _internal_metadata_),
      -1);
  Type12Message_descriptor_ = file->message_type(12);
  static const int Type12Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type12Message, data_),
  };
  Type12Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type12Message_descriptor_,
      Type12Message::default_instance_,
      Type12Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type12Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type12Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type12Message, _internal_metadata_),
      -1);
  Type13Message_descriptor_ = file->message_type(13);
  static const int Type13Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type13Message, data_),
  };
  Type13Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type13Message_descriptor_,
      Type13Message::default_instance_,
      Type13Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type13Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type13Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type13Message, _internal_metadata_),
      -1);
  Type14Message_descriptor_ = file->message_type(14);
  static const int Type14Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type14Message, data_),
  };
  Type14Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type14Message_descriptor_,
      Type14Message::default_instance_,
      Type14Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type14Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type14Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type14Message, _internal_metadata_),
      -1);
  Type15Message_descriptor_ = file->message_type(15);
  static const int Type15Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type15Message, data_),
  };
  Type15Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type15Message_descriptor_,
      Type15Message::default_instance_,
      Type15Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type15Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type15Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type15Message, _internal_metadata_),
      -1);
  Type16Message_descriptor_ = file->message_type(16);
  static const int Type16Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type16Message, data_),
  };
  Type16Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type16Message_descriptor_,
      Type16Message::default_instance_,
      Type16Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type16Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type16Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type16Message, _internal_metadata_),
      -1);
  Type17Message_descriptor_ = file->message_type(17);
  static const int Type17Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type17Message, data_),
  };
  Type17Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type17Message_descriptor_,
      Type17Message::default_instance_,
      Type17Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type17Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type17Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type17Message, _internal_metadata_),
      -1);
  Type18Message_descriptor_ = file->message_type(18);
  static const int Type18Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type18Message, data_),
  };
  Type18Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type18Message_descriptor_,
      Type18Message::default_instance_,
      Type18Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type18Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type18Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type18Message, _internal_metadata_),
      -1);
  Type19Message_descriptor_ = file->message_type(19);
  static const int Type19Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type19Message, data_),
  };
  Type19Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type19Message_descriptor_,
      Type19Message::default_instance_,
      Type19Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type19Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type19Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type19Message, _internal_metadata_),
      -1);
  Type20Message_descriptor_ = file->message_type(20);
  static const int Type20Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type20Message, data_),
  };
  Type20Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type20Message_descriptor_,
      Type20Message::default_instance_,
      Type20Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type20Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type20Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type20Message, _internal_metadata_),
      -1);
  Type21Message_descriptor_ = file->message_type(21);
  static const int Type21Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type21Message, data_),
  };
  Type21Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type21Message_descriptor_,
      Type21Message::default_instance_,
      Type21Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type21Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type21Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type21Message, _internal_metadata_),
      -1);
  Type22Message_descriptor_ = file->message_type(22);
  static const int Type22Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type22Message, data_),
  };
  Type22Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type22Message_descriptor_,
      Type22Message::default_instance_,
      Type22Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type22Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type22Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type22Message, _internal_metadata_),
      -1);
  Type23Message_descriptor_ = file->message_type(23);
  static const int Type23Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type23Message, data_),
  };
  Type23Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type23Message_descriptor_,
      Type23Message::default_instance_,
      Type23Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type23Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type23Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type23Message, _internal_metadata_),
      -1);
  Type24Message_descriptor_ = file->message_type(24);
  static const int Type24Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type24Message, data_),
  };
  Type24Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type24Message_descriptor_,
      Type24Message::default_instance_,
      Type24Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type24Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type24Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type24Message, _internal_metadata_),
      -1);
  Type25Message_descriptor_ = file->message_type(25);
  static const int Type25Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type25Message, data_),
  };
  Type25Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type25Message_descriptor_,
      Type25Message::default_instance_,
      Type25Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type25Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type25Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type25Message, _internal_metadata_),
      -1);
  Type26Message_descriptor_ = file->message_type(26);
  static const int Type26Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type26Message, data_),
  };
  Type26Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type26Message_descriptor_,
      Type26Message::default_instance_,
      Type26Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type26Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type26Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type26Message, _internal_metadata_),
      -1);
  Type27Message_descriptor_ = file->message_type(27);
  static const int Type27Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type27Message, data_),
  };
  Type27Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type27Message_descriptor_,
      Type27Message::default_instance_,
      Type27Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type27Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type27Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type27Message, _internal_metadata_),
      -1);
  Type28Message_descriptor_ = file->message_type(28);
  static const int Type28Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type28Message, data_),
  };
  Type28Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type28Message_descriptor_,
      Type28Message::default_instance_,
      Type28Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type28Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type28Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type28Message, _internal_metadata_),
      -1);
  Type29Message_descriptor_ = file->message_type(29);
  static const int Type29Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type29Message, data_),
  };
  Type29Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type29Message_descriptor_,
      Type29Message::default_instance_,
      Type29Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type29Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type29Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type29Message, _internal_metadata_),
      -1);
  Type30Message_descriptor_ = file->message_type(30);
  static const int Type30Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type30Message, data_),
  };
  Type30Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type30Message_descriptor_,
      Type30Message::default_instance_,
      Type30Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type30Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type30Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type30Message, _internal_metadata_),
      -1);
  Type31Message_descriptor_ = file->message_type(31);
  static const int Type31Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type31Message, data_),
  };
  Type31Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type31Message_descriptor_,
      Type31Message::default_instance_,
      Type31Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type31Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type31Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type31Message, _internal_metadata_),
      -1);
  Type32Message_descriptor_ = file->message_type(32);
  static const int Type32Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type32Message, data_),
  };
  Type32Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type32Message_descriptor_,
      Type32Message::default_instance_,
      Type32Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type32Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type32Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type32Message, _internal_metadata_),
      -1);
  Type33Message_descriptor_ = file->message_type(33);
  static const int Type33Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type33Message, data_),
  };
  Type33Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type33Message_descriptor_,
      Type33Message::default_instance_,
      Type33Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type33Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type33Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type33Message, _internal_metadata_),
      -1);
  Type34Message_descriptor_ = file->message_type(34);
  static const int Type34Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type34Message, data_),
  };
  Type34Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type34Message_descriptor_,
      Type34Message::default_instance_,
      Type34Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type34Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type34Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type34Message, _internal_metadata_),
      -1);
  Type35Message_descriptor_ = file->message_type(35);
  static const int Type35Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type35Message, data_),
  };
  Type35Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type35Message_descriptor_,
      Type35Message::default_instance_,
      Type35Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type35Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type35Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type35Message, _internal_metadata_),
      -1);
  Type36Message_descriptor_ = file->message_type(36);
  static const int Type36Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type36Message, data_),
  };
  Type36Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type36Message_descriptor_,
      Type36Message::default_instance_,
      Type36Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type36Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type36Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type36Message, _internal_metadata_),
      -1);
  Type37Message_descriptor_ = file->message_type(37);
  static const int Type37Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type37Message, data_),
  };
  Type37Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type37Message_descriptor_,
      Type37Message::default_instance_,
      Type37Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type37Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type37Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type37Message, _internal_metadata_),
      -1);
  Type38Message_descriptor_ = file->message_type(38);
  static const int Type38Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type38Message, data_),
  };
  Type38Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type38Message_descriptor_,
      Type38Message::default_instance_,
      Type38Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type38Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type38Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type38Message, _internal_metadata_),
      -1);
  Type39Message_descriptor_ = file->message_type(39);
  static const int Type39Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type39Message, data_),
  };
  Type39Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type39Message_descriptor_,
      Type39Message::default_instance_,
      Type39Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type39Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type39Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type39Message, _internal_metadata_),
      -1);
  Type40Message_descriptor_ = file->message_type(40);
  static const int Type40Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type40Message, data_),
  };
  Type40Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type40Message_descriptor_,
      Type40Message::default_instance_,
      Type40Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type40Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type40Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type40Message, _internal_metadata_),
      -1);
  Type41Message_descriptor_ = file->message_type(41);
  static const int Type41Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type41Message, data_),
  };
  Type41Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type41Message_descriptor_,
      Type41Message::default_instance_,
      Type41Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type41Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type41Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type41Message, _internal_metadata_),
      -1);
  Type42Message_descriptor_ = file->message_type(42);
  static const int Type42Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type42Message, data_),
  };
  Type42Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type42Message_descriptor_,
      Type42Message::default_instance_,
      Type42Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type42Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type42Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type42Message, _internal_metadata_),
      -1);
  Type43Message_descriptor_ = file->message_type(43);
  static const int Type43Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type43Message, data_),
  };
  Type43Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type43Message_descriptor_,
      Type43Message::default_instance_,
      Type43Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type43Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type43Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type43Message, _internal_metadata_),
      -1);
  Type44Message_descriptor_ = file->message_type(44);
  static const int Type44Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type44Message, data_),
  };
  Type44Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type44Message_descriptor_,
      Type44Message::default_instance_,
      Type44Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type44Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type44Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type44Message, _internal_metadata_),
      -1);
  Type45Message_descriptor_ = file->message_type(45);
  static const int Type45Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type45Message, data_),
  };
  Type45Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type45Message_descriptor_,
      Type45Message::default_instance_,
      Type45Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type45Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type45Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type45Message, _internal_metadata_),
      -1);
  Type46Message_descriptor_ = file->message_type(46);
  static const int Type46Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type46Message, data_),
  };
  Type46Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type46Message_descriptor_,
      Type46Message::default_instance_,
      Type46Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type46Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type46Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type46Message, _internal_metadata_),
      -1);
  Type47Message_descriptor_ = file->message_type(47);
  static const int Type47Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type47Message, data_),
  };
  Type47Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type47Message_descriptor_,
      Type47Message::default_instance_,
      Type47Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type47Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type47Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type47Message, _internal_metadata_),
      -1);
  Type48Message_descriptor_ = file->message_type(48);
  static const int Type48Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type48Message, data_),
  };
  Type48Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type48Message_descriptor_,
      Type48Message::default_instance_,
      Type48Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type48Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type48Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type48Message, _internal_metadata_),
      -1);
  Type49Message_descriptor_ = file->message_type(49);
  static const int Type49Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type49Message, data_),
  };
  Type49Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type49Message_descriptor_,
      Type49Message::default_instance_,
      Type49Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type49Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type49Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type49Message, _internal_metadata_),
      -1);
  Type50Message_descriptor_ = file->message_type(50);
  static const int Type50Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type50Message, data_),
  };
  Type50Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type50Message_descriptor_,
      Type50Message::default_instance_,
      Type50Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type50Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type50Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type50Message, _internal_metadata_),
      -1);
  Type51Message_descriptor_ = file->message_type(51);
  static const int Type51Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type51Message, data_),
  };
  Type51Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type51Message_descriptor_,
      Type51Message::default_instance_,
      Type51Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type51Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type51Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type51Message, _internal_metadata_),
      -1);
  Type52Message_descriptor_ = file->message_type(52);
  static const int Type52Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type52Message, data_),
  };
  Type52Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type52Message_descriptor_,
      Type52Message::default_instance_,
      Type52Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type52Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type52Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type52Message, _internal_metadata_),
      -1);
  Type53Message_descriptor_ = file->message_type(53);
  static const int Type53Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type53Message, data_),
  };
  Type53Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type53Message_descriptor_,
      Type53Message::default_instance_,
      Type53Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type53Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type53Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type53Message, _internal_metadata_),
      -1);
  Type54Message_descriptor_ = file->message_type(54);
  static const int Type54Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type54Message, data_),
  };
  Type54Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type54Message_descriptor_,
      Type54Message::default_instance_,
      Type54Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type54Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type54Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type54Message, _internal_metadata_),
      -1);
  Type55Message_descriptor_ = file->message_type(55);
  static const int Type55Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type55Message, data_),
  };
  Type55Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type55Message_descriptor_,
      Type55Message::default_instance_,
      Type55Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type55Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type55Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type55Message, _internal_metadata_),
      -1);
  Type56Message_descriptor_ = file->message_type(56);
  static const int Type56Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type56Message, data_),
  };
  Type56Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type56Message_descriptor_,
      Type56Message::default_instance_,
      Type56Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type56Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type56Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type56Message, _internal_metadata_),
      -1);
  Type57Message_descriptor_ = file->message_type(57);
  static const int Type57Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type57Message, data_),
  };
  Type57Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type57Message_descriptor_,
      Type57Message::default_instance_,
      Type57Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type57Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type57Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type57Message, _internal_metadata_),
      -1);
  Type58Message_descriptor_ = file->message_type(58);
  static const int Type58Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type58Message, data_),
  };
  Type58Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type58Message_descriptor_,
      Type58Message::default_instance_,
      Type58Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type58Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type58Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type58Message, _internal_metadata_),
      -1);
  Type59Message_descriptor_ = file->message_type(59);
  static const int Type59Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type59Message, data_),
  };
  Type59Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type59Message_descriptor_,
      Type59Message::default_instance_,
      Type59Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type59Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type59Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type59Message, _internal_metadata_),
      -1);
  Type60Message_descriptor_ = file->message_type(60);
  static const int Type60Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type60Message, data_),
  };
  Type60Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type60Message_descriptor_,
      Type60Message::default_instance_,
      Type60Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type60Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type60Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type60Message, _internal_metadata_),
      -1);
  Type61Message_descriptor_ = file->message_type(61);
  static const int Type61Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type61Message, data_),
  };
  Type61Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type61Message_descriptor_,
      Type61Message::default_instance_,
      Type61Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type61Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type61Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type61Message, _internal_metadata_),
      -1);
  Type62Message_descriptor_ = file->message_type(62);
  static const int Type62Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type62Message, data_),
  };
  Type62Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type62Message_descriptor_,
      Type62Message::default_instance_,
      Type62Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type62Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type62Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type62Message, _internal_metadata_),
      -1);
  Type63Message_descriptor_ = file->message_type(63);
  static const int Type63Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type63Message, data_),
  };
  Type63Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type63Message_descriptor_,
      Type63Message::default_instance_,
      Type63Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type63Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type63Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type63Message, _internal_metadata_),
      -1);
  Type64Message_descriptor_ = file->message_type(64);
  static const int Type64Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type64Message, data_),
  };
  Type64Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type64Message_descriptor_,
      Type64Message::default_instance_,
      Type64Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type64Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type64Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type64Message, _internal_metadata_),
      -1);
  Type65Message_descriptor_ = file->message_type(65);
  static const int Type65Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type65Message, data_),
  };
  Type65Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type65Message_descriptor_,
      Type65Message::default_instance_,
      Type65Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type65Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type65Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type65Message, _internal_metadata_),
      -1);
  Type66Message_descriptor_ = file->message_type(66);
  static const int Type66Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type66Message, data_),
  };
  Type66Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type66Message_descriptor_,
      Type66Message::default_instance_,
      Type66Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type66Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type66Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type66Message, _internal_metadata_),
      -1);
  Type67Message_descriptor_ = file->message_type(67);
  static const int Type67Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type67Message, data_),
  };
  Type67Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type67Message_descriptor_,
      Type67Message::default_instance_,
      Type67Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type67Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type67Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type67Message, _internal_metadata_),
      -1);
  Type68Message_descriptor_ = file->message_type(68);
  static const int Type68Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type68Message, data_),
  };
  Type68Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type68Message_descriptor_,
      Type68Message::default_instance_,
      Type68Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type68Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type68Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type68Message, _internal_metadata_),
      -1);
  Type69Message_descriptor_ = file->message_type(69);
  static const int Type69Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type69Message, data_),
  };
  Type69Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type69Message_descriptor_,
      Type69Message::default_instance_,
      Type69Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type69Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type69Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type69Message, _internal_metadata_),
      -1);
  Type70Message_descriptor_ = file->message_type(70);
  static const int Type70Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type70Message, data_),
  };
  Type70Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type70Message_descriptor_,
      Type70Message::default_instance_,
      Type70Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type70Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type70Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type70Message, _internal_metadata_),
      -1);
  Type71Message_descriptor_ = file->message_type(71);
  static const int Type71Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type71Message, data_),
  };
  Type71Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type71Message_descriptor_,
      Type71Message::default_instance_,
      Type71Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type71Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type71Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type71Message, _internal_metadata_),
      -1);
  Type72Message_descriptor_ = file->message_type(72);
  static const int Type72Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type72Message, data_),
  };
  Type72Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type72Message_descriptor_,
      Type72Message::default_instance_,
      Type72Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type72Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type72Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type72Message, _internal_metadata_),
      -1);
  Type73Message_descriptor_ = file->message_type(73);
  static const int Type73Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type73Message, data_),
  };
  Type73Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type73Message_descriptor_,
      Type73Message::default_instance_,
      Type73Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type73Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type73Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type73Message, _internal_metadata_),
      -1);
  Type74Message_descriptor_ = file->message_type(74);
  static const int Type74Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type74Message, data_),
  };
  Type74Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type74Message_descriptor_,
      Type74Message::default_instance_,
      Type74Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type74Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type74Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type74Message, _internal_metadata_),
      -1);
  Type75Message_descriptor_ = file->message_type(75);
  static const int Type75Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type75Message, data_),
  };
  Type75Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type75Message_descriptor_,
      Type75Message::default_instance_,
      Type75Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type75Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type75Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type75Message, _internal_metadata_),
      -1);
  Type76Message_descriptor_ = file->message_type(76);
  static const int Type76Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type76Message, data_),
  };
  Type76Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type76Message_descriptor_,
      Type76Message::default_instance_,
      Type76Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type76Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type76Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type76Message, _internal_metadata_),
      -1);
  Type77Message_descriptor_ = file->message_type(77);
  static const int Type77Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type77Message, data_),
  };
  Type77Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type77Message_descriptor_,
      Type77Message::default_instance_,
      Type77Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type77Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type77Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type77Message, _internal_metadata_),
      -1);
  Type78Message_descriptor_ = file->message_type(78);
  static const int Type78Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type78Message, data_),
  };
  Type78Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type78Message_descriptor_,
      Type78Message::default_instance_,
      Type78Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type78Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type78Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type78Message, _internal_metadata_),
      -1);
  Type79Message_descriptor_ = file->message_type(79);
  static const int Type79Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type79Message, data_),
  };
  Type79Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type79Message_descriptor_,
      Type79Message::default_instance_,
      Type79Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type79Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type79Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type79Message, _internal_metadata_),
      -1);
  Type80Message_descriptor_ = file->message_type(80);
  static const int Type80Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type80Message, data_),
  };
  Type80Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type80Message_descriptor_,
      Type80Message::default_instance_,
      Type80Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type80Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type80Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type80Message, _internal_metadata_),
      -1);
  Type81Message_descriptor_ = file->message_type(81);
  static const int Type81Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type81Message, data_),
  };
  Type81Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type81Message_descriptor_,
      Type81Message::default_instance_,
      Type81Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type81Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type81Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type81Message, _internal_metadata_),
      -1);
  Type82Message_descriptor_ = file->message_type(82);
  static const int Type82Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type82Message, data_),
  };
  Type82Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type82Message_descriptor_,
      Type82Message::default_instance_,
      Type82Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type82Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type82Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type82Message, _internal_metadata_),
      -1);
  Type83Message_descriptor_ = file->message_type(83);
  static const int Type83Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type83Message, data_),
  };
  Type83Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type83Message_descriptor_,
      Type83Message::default_instance_,
      Type83Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type83Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type83Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type83Message, _internal_metadata_),
      -1);
  Type84Message_descriptor_ = file->message_type(84);
  static const int Type84Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type84Message, data_),
  };
  Type84Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type84Message_descriptor_,
      Type84Message::default_instance_,
      Type84Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type84Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type84Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type84Message, _internal_metadata_),
      -1);
  Type85Message_descriptor_ = file->message_type(85);
  static const int Type85Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type85Message, data_),
  };
  Type85Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type85Message_descriptor_,
      Type85Message::default_instance_,
      Type85Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type85Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type85Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type85Message, _internal_metadata_),
      -1);
  Type86Message_descriptor_ = file->message_type(86);
  static const int Type86Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type86Message, data_),
  };
  Type86Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type86Message_descriptor_,
      Type86Message::default_instance_,
      Type86Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type86Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type86Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type86Message, _internal_metadata_),
      -1);
  Type87Message_descriptor_ = file->message_type(87);
  static const int Type87Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type87Message, data_),
  };
  Type87Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type87Message_descriptor_,
      Type87Message::default_instance_,
      Type87Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type87Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type87Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type87Message, _internal_metadata_),
      -1);
  Type88Message_descriptor_ = file->message_type(88);
  static const int Type88Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type88Message, data_),
  };
  Type88Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type88Message_descriptor_,
      Type88Message::default_instance_,
      Type88Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type88Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type88Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type88Message, _internal_metadata_),
      -1);
  Type89Message_descriptor_ = file->message_type(89);
  static const int Type89Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type89Message, data_),
  };
  Type89Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type89Message_descriptor_,
      Type89Message::default_instance_,
      Type89Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type89Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type89Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type89Message, _internal_metadata_),
      -1);
  Type90Message_descriptor_ = file->message_type(90);
  static const int Type90Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type90Message, data_),
  };
  Type90Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type90Message_descriptor_,
      Type90Message::default_instance_,
      Type90Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type90Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type90Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type90Message, _internal_metadata_),
      -1);
  Type91Message_descriptor_ = file->message_type(91);
  static const int Type91Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type91Message, data_),
  };
  Type91Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type91Message_descriptor_,
      Type91Message::default_instance_,
      Type91Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type91Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type91Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type91Message, _internal_metadata_),
      -1);
  Type92Message_descriptor_ = file->message_type(92);
  static const int Type92Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type92Message, data_),
  };
  Type92Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type92Message_descriptor_,
      Type92Message::default_instance_,
      Type92Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type92Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type92Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type92Message, _internal_metadata_),
      -1);
  Type93Message_descriptor_ = file->message_type(93);
  static const int Type93Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type93Message, data_),
  };
  Type93Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type93Message_descriptor_,
      Type93Message::default_instance_,
      Type93Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type93Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type93Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type93Message, _internal_metadata_),
      -1);
  Type94Message_descriptor_ = file->message_type(94);
  static const int Type94Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type94Message, data_),
  };
  Type94Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type94Message_descriptor_,
      Type94Message::default_instance_,
      Type94Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type94Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type94Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type94Message, _internal_metadata_),
      -1);
  Type95Message_descriptor_ = file->message_type(95);
  static const int Type95Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type95Message, data_),
  };
  Type95Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type95Message_descriptor_,
      Type95Message::default_instance_,
      Type95Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type95Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type95Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type95Message, _internal_metadata_),
      -1);
  Type96Message_descriptor_ = file->message_type(96);
  static const int Type96Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type96Message, data_),
  };
  Type96Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type96Message_descriptor_,
      Type96Message::default_instance_,
      Type96Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type96Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type96Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type96Message, _internal_metadata_),
      -1);
  Type97Message_descriptor_ = file->message_type(97);
  static const int Type97Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type97Message, data_),
  };
  Type97Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type97Message_descriptor_,
      Type97Message::default_instance_,
      Type97Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type97Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type97Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type97Message, _internal_metadata_),
      -1);
  Type98Message_descriptor_ = file->message_type(98);
  static const int Type98Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type98Message, data_),
  };
  Type98Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type98Message_descriptor_,
      Type98Message::default_instance_,
      Type98Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type98Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type98Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type98Message, _internal_metadata_),
      -1);
  Type99Message_descriptor_ = file->message_type(99);
  static const int Type99Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type99Message, data_),
  };
  Type99Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type99Message_descriptor_,
      Type99Message::default_instance_,
      Type99Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type99Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type99Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type99Message, _internal_metadata_),
      -1);
  Type100Message_descriptor_ = file->message_type(100);
  static const int Type100Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type100Message, data_),
  };
  Type100Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type100Message_descriptor_,
      Type100Message::default_instance_,
      Type100Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type100Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type100Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type100Message, _internal_metadata_),
      -1);
  Type101Message_descriptor_ = file->message_type(101);
  static const int Type101Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type101Message, data_),
  };
  Type101Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type101Message_descriptor_,
      Type101Message::default_instance_,
      Type101Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type101Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type101Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type101Message, _internal_metadata_),
      -1);
  Type102Message_descriptor_ = file->message_type(102);
  static const int Type102Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type102Message, data_),
  };
  Type102Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type102Message_descriptor_,
      Type102Message::default_instance_,
      Type102Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type102Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type102Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type102Message, _internal_metadata_),
      -1);
  Type103Message_descriptor_ = file->message_type(103);
  static const int Type103Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type103Message, data_),
  };
  Type103Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type103Message_descriptor_,
      Type103Message::default_instance_,
      Type103Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type103Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type103Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type103Message, _internal_metadata_),
      -1);
  Type104Message_descriptor_ = file->message_type(104);
  static const int Type104Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type104Message, data_),
  };
  Type104Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type104Message_descriptor_,
      Type104Message::default_instance_,
      Type104Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type104Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type104Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type104Message, _internal_metadata_),
      -1);
  Type105Message_descriptor_ = file->message_type(105);
  static const int Type105Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type105Message, data_),
  };
  Type105Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type105Message_descriptor_,
      Type105Message::default_instance_,
      Type105Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type105Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type105Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type105Message, _internal_metadata_),
      -1);
  Type106Message_descriptor_ = file->message_type(106);
  static const int Type106Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type106Message, data_),
  };
  Type106Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type106Message_descriptor_,
      Type106Message::default_instance_,
      Type106Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type106Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type106Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type106Message, _internal_metadata_),
      -1);
  Type107Message_descriptor_ = file->message_type(107);
  static const int Type107Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type107Message, data_),
  };
  Type107Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type107Message_descriptor_,
      Type107Message::default_instance_,
      Type107Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type107Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type107Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type107Message, _internal_metadata_),
      -1);
  Type108Message_descriptor_ = file->message_type(108);
  static const int Type108Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type108Message, data_),
  };
  Type108Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type108Message_descriptor_,
      Type108Message::default_instance_,
      Type108Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type108Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type108Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type108Message, _internal_metadata_),
      -1);
  Type109Message_descriptor_ = file->message_type(109);
  static const int Type109Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type109Message, data_),
  };
  Type109Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type109Message_descriptor_,
      Type109Message::default_instance_,
      Type109Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type109Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type109Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type109Message, _internal_metadata_),
      -1);
  Type110Message_descriptor_ = file->message_type(110);
  static const int Type110Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type110Message, data_),
  };
  Type110Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type110Message_descriptor_,
      Type110Message::default_instance_,
      Type110Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type110Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type110Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type110Message, _internal_metadata_),
      -1);
  Type111Message_descriptor_ = file->message_type(111);
  static const int Type111Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type111Message, data_),
  };
  Type111Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type111Message_descriptor_,
      Type111Message::default_instance_,
      Type111Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type111Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type111Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type111Message, _internal_metadata_),
      -1);
  Type112Message_descriptor_ = file->message_type(112);
  static const int Type112Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type112Message, data_),
  };
  Type112Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type112Message_descriptor_,
      Type112Message::default_instance_,
      Type112Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type112Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type112Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type112Message, _internal_metadata_),
      -1);
  Type113Message_descriptor_ = file->message_type(113);
  static const int Type113Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type113Message, data_),
  };
  Type113Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type113Message_descriptor_,
      Type113Message::default_instance_,
      Type113Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type113Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type113Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type113Message, _internal_metadata_),
      -1);
  Type114Message_descriptor_ = file->message_type(114);
  static const int Type114Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type114Message, data_),
  };
  Type114Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type114Message_descriptor_,
      Type114Message::default_instance_,
      Type114Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type114Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type114Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type114Message, _internal_metadata_),
      -1);
  Type115Message_descriptor_ = file->message_type(115);
  static const int Type115Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type115Message, data_),
  };
  Type115Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type115Message_descriptor_,
      Type115Message::default_instance_,
      Type115Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type115Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type115Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type115Message, _internal_metadata_),
      -1);
  Type116Message_descriptor_ = file->message_type(116);
  static const int Type116Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type116Message, data_),
  };
  Type116Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type116Message_descriptor_,
      Type116Message::default_instance_,
      Type116Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type116Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type116Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type116Message, _internal_metadata_),
      -1);
  Type117Message_descriptor_ = file->message_type(117);
  static const int Type117Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type117Message, data_),
  };
  Type117Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type117Message_descriptor_,
      Type117Message::default_instance_,
      Type117Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type117Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type117Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type117Message, _internal_metadata_),
      -1);
  Type118Message_descriptor_ = file->message_type(118);
  static const int Type118Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type118Message, data_),
  };
  Type118Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type118Message_descriptor_,
      Type118Message::default_instance_,
      Type118Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type118Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type118Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type118Message, _internal_metadata_),
      -1);
  Type119Message_descriptor_ = file->message_type(119);
  static const int Type119Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type119Message, data_),
  };
  Type119Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type119Message_descriptor_,
      Type119Message::default_instance_,
      Type119Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type119Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type119Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type119Message, _internal_metadata_),
      -1);
  Type120Message_descriptor_ = file->message_type(120);
  static const int Type120Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type120Message, data_),
  };
  Type120Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type120Message_descriptor_,
      Type120Message::default_instance_,
      Type120Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type120Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type120Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type120Message, _internal_metadata_),
      -1);
  Type121Message_descriptor_ = file->message_type(121);
  static const int Type121Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type121Message, data_),
  };
  Type121Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type121Message_descriptor_,
      Type121Message::default_instance_,
      Type121Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type121Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type121Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type121Message, _internal_metadata_),
      -1);
  Type122Message_descriptor_ = file->message_type(122);
  static const int Type122Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type122Message, data_),
  };
  Type122Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type122Message_descriptor_,
      Type122Message::default_instance_,
      Type122Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type122Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type122Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type122Message, _internal_metadata_),
      -1);
  Type123Message_descriptor_ = file->message_type(123);
  static const int Type123Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type123Message, data_),
  };
  Type123Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type123Message_descriptor_,
      Type123Message::default_instance_,
      Type123Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type123Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type123Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type123Message, _internal_metadata_),
      -1);
  Type124Message_descriptor_ = file->message_type(124);
  static const int Type124Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type124Message, data_),
  };
  Type124Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type124Message_descriptor_,
      Type124Message::default_instance_,
      Type124Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type124Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type124Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type124Message, _internal_metadata_),
      -1);
  Type125Message_descriptor_ = file->message_type(125);
  static const int Type125Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type125Message, data_),
  };
  Type125Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type125Message_descriptor_,
      Type125Message::default_instance_,
      Type125Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type125Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type125Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type125Message, _internal_metadata_),
      -1);
  Type126Message_descriptor_ = file->message_type(126);
  static const int Type126Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type126Message, data_),
  };
  Type126Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type126Message_descriptor_,
      Type126Message::default_instance_,
      Type126Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type126Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type126Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type126Message, _internal_metadata_),
      -1);
  Type127Message_descriptor_ = file->message_type(127);
  static const int Type127Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type127Message, data_),
  };
  Type127Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type127Message_descriptor_,
      Type127Message::default_instance_,
      Type127Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type127Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type127Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type127Message, _internal_metadata_),
      -1);
  Type128Message_descriptor_ = file->message_type(128);
  static const int Type128Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type128Message, data_),
  };
  Type128Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type128Message_descriptor_,
      Type128Message::default_instance_,
      Type128Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type128Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type128Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type128Message, _internal_metadata_),
      -1);
  Type129Message_descriptor_ = file->message_type(129);
  static const int Type129Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type129Message, data_),
  };
  Type129Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type129Message_descriptor_,
      Type129Message::default_instance_,
      Type129Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type129Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type129Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type129Message, _internal_metadata_),
      -1);
  Type130Message_descriptor_ = file->message_type(130);
  static const int Type130Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type130Message, data_),
  };
  Type130Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type130Message_descriptor_,
      Type130Message::default_instance_,
      Type130Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type130Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type130Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type130Message, _internal_metadata_),
      -1);
  Type131Message_descriptor_ = file->message_type(131);
  static const int Type131Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type131Message, data_),
  };
  Type131Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type131Message_descriptor_,
      Type131Message::default_instance_,
      Type131Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type131Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type131Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type131Message, _internal_metadata_),
      -1);
  Type132Message_descriptor_ = file->message_type(132);
  static const int Type132Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type132Message, data_),
  };
  Type132Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type132Message_descriptor_,
      Type132Message::default_instance_,
      Type132Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type132Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type132Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type132Message, _internal_metadata_),
      -1);
  Type133Message_descriptor_ = file->message_type(133);
  static const int Type133Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type133Message, data_),
  };
  Type133Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type133Message_descriptor_,
      Type133Message::default_instance_,
      Type133Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type133Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type133Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type133Message, _internal_metadata_),
      -1);
  Type134Message_descriptor_ = file->message_type(134);
  static const int Type134Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type134Message, data_),
  };
  Type134Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type134Message_descriptor_,
      Type134Message::default_instance_,
      Type134Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type134Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type134Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type134Message, _internal_metadata_),
      -1);
  Type135Message_descriptor_ = file->message_type(135);
  static const int Type135Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type135Message, data_),
  };
  Type135Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type135Message_descriptor_,
      Type135Message::default_instance_,
      Type135Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type135Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type135Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type135Message, _internal_metadata_),
      -1);
  Type136Message_descriptor_ = file->message_type(136);
  static const int Type136Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type136Message, data_),
  };
  Type136Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type136Message_descriptor_,
      Type136Message::default_instance_,
      Type136Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type136Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type136Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type136Message, _internal_metadata_),
      -1);
  Type137Message_descriptor_ = file->message_type(137);
  static const int Type137Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type137Message, data_),
  };
  Type137Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type137Message_descriptor_,
      Type137Message::default_instance_,
      Type137Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type137Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type137Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type137Message, _internal_metadata_),
      -1);
  Type138Message_descriptor_ = file->message_type(138);
  static const int Type138Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type138Message, data_),
  };
  Type138Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type138Message_descriptor_,
      Type138Message::default_instance_,
      Type138Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type138Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type138Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type138Message, _internal_metadata_),
      -1);
  Type139Message_descriptor_ = file->message_type(139);
  static const int Type139Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type139Message, data_),
  };
  Type139Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type139Message_descriptor_,
      Type139Message::default_instance_,
      Type139Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type139Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type139Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type139Message, _internal_metadata_),
      -1);
  Type140Message_descriptor_ = file->message_type(140);
  static const int Type140Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type140Message, data_),
  };
  Type140Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type140Message_descriptor_,
      Type140Message::default_instance_,
      Type140Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type140Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type140Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type140Message, _internal_metadata_),
      -1);
  Type141Message_descriptor_ = file->message_type(141);
  static const int Type141Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type141Message, data_),
  };
  Type141Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type141Message_descriptor_,
      Type141Message::default_instance_,
      Type141Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type141Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type141Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type141Message, _internal_metadata_),
      -1);
  Type142Message_descriptor_ = file->message_type(142);
  static const int Type142Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type142Message, data_),
  };
  Type142Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type142Message_descriptor_,
      Type142Message::default_instance_,
      Type142Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type142Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type142Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type142Message, _internal_metadata_),
      -1);
  Type143Message_descriptor_ = file->message_type(143);
  static const int Type143Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type143Message, data_),
  };
  Type143Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type143Message_descriptor_,
      Type143Message::default_instance_,
      Type143Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type143Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type143Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type143Message, _internal_metadata_),
      -1);
  Type144Message_descriptor_ = file->message_type(144);
  static const int Type144Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type144Message, data_),
  };
  Type144Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type144Message_descriptor_,
      Type144Message::default_instance_,
      Type144Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type144Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type144Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type144Message, _internal_metadata_),
      -1);
  Type145Message_descriptor_ = file->message_type(145);
  static const int Type145Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type145Message, data_),
  };
  Type145Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type145Message_descriptor_,
      Type145Message::default_instance_,
      Type145Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type145Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type145Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type145Message, _internal_metadata_),
      -1);
  Type146Message_descriptor_ = file->message_type(146);
  static const int Type146Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type146Message, data_),
  };
  Type146Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type146Message_descriptor_,
      Type146Message::default_instance_,
      Type146Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type146Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type146Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type146Message, _internal_metadata_),
      -1);
  Type147Message_descriptor_ = file->message_type(147);
  static const int Type147Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type147Message, data_),
  };
  Type147Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type147Message_descriptor_,
      Type147Message::default_instance_,
      Type147Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type147Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type147Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type147Message, _internal_metadata_),
      -1);
  Type148Message_descriptor_ = file->message_type(148);
  static const int Type148Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type148Message, data_),
  };
  Type148Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type148Message_descriptor_,
      Type148Message::default_instance_,
      Type148Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type148Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type148Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type148Message, _internal_metadata_),
      -1);
  Type149Message_descriptor_ = file->message_type(149);
  static const int Type149Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type149Message, data_),
  };
  Type149Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type149Message_descriptor_,
      Type149Message::default_instance_,
      Type149Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type149Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type149Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type149Message, _internal_metadata_),
      -1);
  Type150Message_descriptor_ = file->message_type(150);
  static const int Type150Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type150Message, data_),
  };
  Type150Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type150Message_descriptor_,
      Type150Message::default_instance_,
      Type150Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type150Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type150Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type150Message, _internal_metadata_),
      -1);
  Type151Message_descriptor_ = file->message_type(151);
  static const int Type151Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type151Message, data_),
  };
  Type151Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type151Message_descriptor_,
      Type151Message::default_instance_,
      Type151Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type151Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type151Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type151Message, _internal_metadata_),
      -1);
  Type152Message_descriptor_ = file->message_type(152);
  static const int Type152Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type152Message, data_),
  };
  Type152Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type152Message_descriptor_,
      Type152Message::default_instance_,
      Type152Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type152Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type152Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type152Message, _internal_metadata_),
      -1);
  Type153Message_descriptor_ = file->message_type(153);
  static const int Type153Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type153Message, data_),
  };
  Type153Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type153Message_descriptor_,
      Type153Message::default_instance_,
      Type153Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type153Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type153Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type153Message, _internal_metadata_),
      -1);
  Type154Message_descriptor_ = file->message_type(154);
  static const int Type154Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type154Message, data_),
  };
  Type154Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type154Message_descriptor_,
      Type154Message::default_instance_,
      Type154Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type154Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type154Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type154Message, _internal_metadata_),
      -1);
  Type155Message_descriptor_ = file->message_type(155);
  static const int Type155Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type155Message, data_),
  };
  Type155Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type155Message_descriptor_,
      Type155Message::default_instance_,
      Type155Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type155Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type155Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type155Message, _internal_metadata_),
      -1);
  Type156Message_descriptor_ = file->message_type(156);
  static const int Type156Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type156Message, data_),
  };
  Type156Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type156Message_descriptor_,
      Type156Message::default_instance_,
      Type156Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type156Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type156Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type156Message, _internal_metadata_),
      -1);
  Type157Message_descriptor_ = file->message_type(157);
  static const int Type157Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type157Message, data_),
  };
  Type157Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type157Message_descriptor_,
      Type157Message::default_instance_,
      Type157Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type157Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type157Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type157Message, _internal_metadata_),
      -1);
  Type158Message_descriptor_ = file->message_type(158);
  static const int Type158Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type158Message, data_),
  };
  Type158Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type158Message_descriptor_,
      Type158Message::default_instance_,
      Type158Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type158Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type158Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type158Message, _internal_metadata_),
      -1);
  Type159Message_descriptor_ = file->message_type(159);
  static const int Type159Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type159Message, data_),
  };
  Type159Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type159Message_descriptor_,
      Type159Message::default_instance_,
      Type159Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type159Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type159Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type159Message, _internal_metadata_),
      -1);
  Type160Message_descriptor_ = file->message_type(160);
  static const int Type160Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type160Message, data_),
  };
  Type160Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type160Message_descriptor_,
      Type160Message::default_instance_,
      Type160Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type160Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type160Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type160Message, _internal_metadata_),
      -1);
  Type161Message_descriptor_ = file->message_type(161);
  static const int Type161Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type161Message, data_),
  };
  Type161Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type161Message_descriptor_,
      Type161Message::default_instance_,
      Type161Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type161Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type161Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type161Message, _internal_metadata_),
      -1);
  Type162Message_descriptor_ = file->message_type(162);
  static const int Type162Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type162Message, data_),
  };
  Type162Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type162Message_descriptor_,
      Type162Message::default_instance_,
      Type162Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type162Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type162Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type162Message, _internal_metadata_),
      -1);
  Type163Message_descriptor_ = file->message_type(163);
  static const int Type163Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type163Message, data_),
  };
  Type163Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type163Message_descriptor_,
      Type163Message::default_instance_,
      Type163Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type163Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type163Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type163Message, _internal_metadata_),
      -1);
  Type164Message_descriptor_ = file->message_type(164);
  static const int Type164Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type164Message, data_),
  };
  Type164Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type164Message_descriptor_,
      Type164Message::default_instance_,
      Type164Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type164Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type164Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type164Message, _internal_metadata_),
      -1);
  Type165Message_descriptor_ = file->message_type(165);
  static const int Type165Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type165Message, data_),
  };
  Type165Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type165Message_descriptor_,
      Type165Message::default_instance_,
      Type165Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type165Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type165Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type165Message, _internal_metadata_),
      -1);
  Type166Message_descriptor_ = file->message_type(166);
  static const int Type166Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type166Message, data_),
  };
  Type166Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type166Message_descriptor_,
      Type166Message::default_instance_,
      Type166Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type166Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type166Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type166Message, _internal_metadata_),
      -1);
  Type167Message_descriptor_ = file->message_type(167);
  static const int Type167Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type167Message, data_),
  };
  Type167Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type167Message_descriptor_,
      Type167Message::default_instance_,
      Type167Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type167Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type167Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type167Message, _internal_metadata_),
      -1);
  Type168Message_descriptor_ = file->message_type(168);
  static const int Type168Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type168Message, data_),
  };
  Type168Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type168Message_descriptor_,
      Type168Message::default_instance_,
      Type168Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type168Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type168Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type168Message, _internal_metadata_),
      -1);
  Type169Message_descriptor_ = file->message_type(169);
  static const int Type169Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type169Message, data_),
  };
  Type169Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type169Message_descriptor_,
      Type169Message::default_instance_,
      Type169Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type169Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type169Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type169Message, _internal_metadata_),
      -1);
  Type170Message_descriptor_ = file->message_type(170);
  static const int Type170Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type170Message, data_),
  };
  Type170Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type170Message_descriptor_,
      Type170Message::default_instance_,
      Type170Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type170Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type170Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type170Message, _internal_metadata_),
      -1);
  Type171Message_descriptor_ = file->message_type(171);
  static const int Type171Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type171Message, data_),
  };
  Type171Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type171Message_descriptor_,
      Type171Message::default_instance_,
      Type171Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type171Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type171Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type171Message, _internal_metadata_),
      -1);
  Type172Message_descriptor_ = file->message_type(172);
  static const int Type172Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type172Message, data_),
  };
  Type172Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type172Message_descriptor_,
      Type172Message::default_instance_,
      Type172Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type172Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type172Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type172Message, _internal_metadata_),
      -1);
  Type173Message_descriptor_ = file->message_type(173);
  static const int Type173Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type173Message, data_),
  };
  Type173Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type173Message_descriptor_,
      Type173Message::default_instance_,
      Type173Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type173Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type173Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type173Message, _internal_metadata_),
      -1);
  Type174Message_descriptor_ = file->message_type(174);
  static const int Type174Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type174Message, data_),
  };
  Type174Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type174Message_descriptor_,
      Type174Message::default_instance_,
      Type174Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type174Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type174Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type174Message, _internal_metadata_),
      -1);
  Type175Message_descriptor_ = file->message_type(175);
  static const int Type175Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type175Message, data_),
  };
  Type175Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type175Message_descriptor_,
      Type175Message::default_instance_,
      Type175Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type175Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type175Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type175Message, _internal_metadata_),
      -1);
  Type176Message_descriptor_ = file->message_type(176);
  static const int Type176Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type176Message, data_),
  };
  Type176Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type176Message_descriptor_,
      Type176Message::default_instance_,
      Type176Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type176Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type176Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type176Message, _internal_metadata_),
      -1);
  Type177Message_descriptor_ = file->message_type(177);
  static const int Type177Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type177Message, data_),
  };
  Type177Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type177Message_descriptor_,
      Type177Message::default_instance_,
      Type177Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type177Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type177Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type177Message, _internal_metadata_),
      -1);
  Type178Message_descriptor_ = file->message_type(178);
  static const int Type178Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type178Message, data_),
  };
  Type178Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type178Message_descriptor_,
      Type178Message::default_instance_,
      Type178Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type178Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type178Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type178Message, _internal_metadata_),
      -1);
  Type179Message_descriptor_ = file->message_type(179);
  static const int Type179Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type179Message, data_),
  };
  Type179Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type179Message_descriptor_,
      Type179Message::default_instance_,
      Type179Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type179Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type179Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type179Message, _internal_metadata_),
      -1);
  Type180Message_descriptor_ = file->message_type(180);
  static const int Type180Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type180Message, data_),
  };
  Type180Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type180Message_descriptor_,
      Type180Message::default_instance_,
      Type180Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type180Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type180Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type180Message, _internal_metadata_),
      -1);
  Type181Message_descriptor_ = file->message_type(181);
  static const int Type181Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type181Message, data_),
  };
  Type181Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type181Message_descriptor_,
      Type181Message::default_instance_,
      Type181Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type181Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type181Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type181Message, _internal_metadata_),
      -1);
  Type182Message_descriptor_ = file->message_type(182);
  static const int Type182Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type182Message, data_),
  };
  Type182Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type182Message_descriptor_,
      Type182Message::default_instance_,
      Type182Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type182Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type182Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type182Message, _internal_metadata_),
      -1);
  Type183Message_descriptor_ = file->message_type(183);
  static const int Type183Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type183Message, data_),
  };
  Type183Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type183Message_descriptor_,
      Type183Message::default_instance_,
      Type183Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type183Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type183Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type183Message, _internal_metadata_),
      -1);
  Type184Message_descriptor_ = file->message_type(184);
  static const int Type184Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type184Message, data_),
  };
  Type184Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type184Message_descriptor_,
      Type184Message::default_instance_,
      Type184Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type184Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type184Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type184Message, _internal_metadata_),
      -1);
  Type185Message_descriptor_ = file->message_type(185);
  static const int Type185Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type185Message, data_),
  };
  Type185Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type185Message_descriptor_,
      Type185Message::default_instance_,
      Type185Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type185Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type185Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type185Message, _internal_metadata_),
      -1);
  Type186Message_descriptor_ = file->message_type(186);
  static const int Type186Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type186Message, data_),
  };
  Type186Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type186Message_descriptor_,
      Type186Message::default_instance_,
      Type186Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type186Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type186Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type186Message, _internal_metadata_),
      -1);
  Type187Message_descriptor_ = file->message_type(187);
  static const int Type187Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type187Message, data_),
  };
  Type187Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type187Message_descriptor_,
      Type187Message::default_instance_,
      Type187Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type187Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type187Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type187Message, _internal_metadata_),
      -1);
  Type188Message_descriptor_ = file->message_type(188);
  static const int Type188Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type188Message, data_),
  };
  Type188Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type188Message_descriptor_,
      Type188Message::default_instance_,
      Type188Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type188Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type188Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type188Message, _internal_metadata_),
      -1);
  Type189Message_descriptor_ = file->message_type(189);
  static const int Type189Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type189Message, data_),
  };
  Type189Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type189Message_descriptor_,
      Type189Message::default_instance_,
      Type189Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type189Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type189Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type189Message, _internal_metadata_),
      -1);
  Type190Message_descriptor_ = file->message_type(190);
  static const int Type190Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type190Message, data_),
  };
  Type190Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type190Message_descriptor_,
      Type190Message::default_instance_,
      Type190Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type190Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type190Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type190Message, _internal_metadata_),
      -1);
  Type191Message_descriptor_ = file->message_type(191);
  static const int Type191Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type191Message, data_),
  };
  Type191Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type191Message_descriptor_,
      Type191Message::default_instance_,
      Type191Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type191Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type191Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type191Message, _internal_metadata_),
      -1);
  Type192Message_descriptor_ = file->message_type(192);
  static const int Type192Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type192Message, data_),
  };
  Type192Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type192Message_descriptor_,
      Type192Message::default_instance_,
      Type192Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type192Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type192Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type192Message, _internal_metadata_),
      -1);
  Type193Message_descriptor_ = file->message_type(193);
  static const int Type193Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type193Message, data_),
  };
  Type193Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type193Message_descriptor_,
      Type193Message::default_instance_,
      Type193Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type193Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type193Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type193Message, _internal_metadata_),
      -1);
  Type194Message_descriptor_ = file->message_type(194);
  static const int Type194Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type194Message, data_),
  };
  Type194Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type194Message_descriptor_,
      Type194Message::default_instance_,
      Type194Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type194Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type194Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type194Message, _internal_metadata_),
      -1);
  Type195Message_descriptor_ = file->message_type(195);
  static const int Type195Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type195Message, data_),
  };
  Type195Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type195Message_descriptor_,
      Type195Message::default_instance_,
      Type195Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type195Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type195Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type195Message, _internal_metadata_),
      -1);
  Type196Message_descriptor_ = file->message_type(196);
  static const int Type196Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type196Message, data_),
  };
  Type196Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type196Message_descriptor_,
      Type196Message::default_instance_,
      Type196Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type196Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type196Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type196Message, _internal_metadata_),
      -1);
  Type197Message_descriptor_ = file->message_type(197);
  static const int Type197Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type197Message, data_),
  };
  Type197Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type197Message_descriptor_,
      Type197Message::default_instance_,
      Type197Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type197Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type197Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type197Message, _internal_metadata_),
      -1);
  Type198Message_descriptor_ = file->message_type(198);
  static const int Type198Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type198Message, data_),
  };
  Type198Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type198Message_descriptor_,
      Type198Message::default_instance_,
      Type198Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type198Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type198Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type198Message, _internal_metadata_),
      -1);
  Type199Message_descriptor_ = file->message_type(199);
  static const int Type199Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type199Message, data_),
  };
  Type199Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type199Message_descriptor_,
      Type199Message::default_instance_,
      Type199Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type199Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type199Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type199Message, _internal_metadata_),
      -1);
  Type200Message_descriptor_ = file->message_type(200);
  static const int Type200Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type200Message, data_),
  };
  Type200Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type200Message_descriptor_,
      Type200Message::default_instance_,
      Type200Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type200Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type200Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type200Message, _internal_metadata_),
      -1);
  Type201Message_descriptor_ = file->message_type(201);
  static const int Type201Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type201Message, data_),
  };
  Type201Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type201Message_descriptor_,
      Type201Message::default_instance_,
      Type201Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type201Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type201Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type201Message, _internal_metadata_),
      -1);
  Type202Message_descriptor_ = file->message_type(202);
  static const int Type202Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type202Message, data_),
  };
  Type202Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type202Message_descriptor_,
      Type202Message::default_instance_,
      Type202Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type202Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type202Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type202Message, _internal_metadata_),
      -1);
  Type203Message_descriptor_ = file->message_type(203);
  static const int Type203Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type203Message, data_),
  };
  Type203Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type203Message_descriptor_,
      Type203Message::default_instance_,
      Type203Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type203Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type203Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type203Message, _internal_metadata_),
      -1);
  Type204Message_descriptor_ = file->message_type(204);
  static const int Type204Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type204Message, data_),
  };
  Type204Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type204Message_descriptor_,
      Type204Message::default_instance_,
      Type204Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type204Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type204Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type204Message, _internal_metadata_),
      -1);
  Type205Message_descriptor_ = file->message_type(205);
  static const int Type205Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type205Message, data_),
  };
  Type205Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type205Message_descriptor_,
      Type205Message::default_instance_,
      Type205Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type205Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type205Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type205Message, _internal_metadata_),
      -1);
  Type206Message_descriptor_ = file->message_type(206);
  static const int Type206Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type206Message, data_),
  };
  Type206Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type206Message_descriptor_,
      Type206Message::default_instance_,
      Type206Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type206Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type206Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type206Message, _internal_metadata_),
      -1);
  Type207Message_descriptor_ = file->message_type(207);
  static const int Type207Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type207Message, data_),
  };
  Type207Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type207Message_descriptor_,
      Type207Message::default_instance_,
      Type207Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type207Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type207Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type207Message, _internal_metadata_),
      -1);
  Type208Message_descriptor_ = file->message_type(208);
  static const int Type208Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type208Message, data_),
  };
  Type208Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type208Message_descriptor_,
      Type208Message::default_instance_,
      Type208Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type208Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type208Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type208Message, _internal_metadata_),
      -1);
  Type209Message_descriptor_ = file->message_type(209);
  static const int Type209Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type209Message, data_),
  };
  Type209Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type209Message_descriptor_,
      Type209Message::default_instance_,
      Type209Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type209Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type209Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type209Message, _internal_metadata_),
      -1);
  Type210Message_descriptor_ = file->message_type(210);
  static const int Type210Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type210Message, data_),
  };
  Type210Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type210Message_descriptor_,
      Type210Message::default_instance_,
      Type210Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type210Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type210Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type210Message, _internal_metadata_),
      -1);
  Type211Message_descriptor_ = file->message_type(211);
  static const int Type211Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type211Message, data_),
  };
  Type211Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type211Message_descriptor_,
      Type211Message::default_instance_,
      Type211Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type211Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type211Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type211Message, _internal_metadata_),
      -1);
  Type212Message_descriptor_ = file->message_type(212);
  static const int Type212Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type212Message, data_),
  };
  Type212Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type212Message_descriptor_,
      Type212Message::default_instance_,
      Type212Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type212Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type212Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type212Message, _internal_metadata_),
      -1);
  Type213Message_descriptor_ = file->message_type(213);
  static const int Type213Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type213Message, data_),
  };
  Type213Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type213Message_descriptor_,
      Type213Message::default_instance_,
      Type213Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type213Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type213Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type213Message, _internal_metadata_),
      -1);
  Type214Message_descriptor_ = file->message_type(214);
  static const int Type214Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type214Message, data_),
  };
  Type214Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type214Message_descriptor_,
      Type214Message::default_instance_,
      Type214Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type214Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type214Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type214Message, _internal_metadata_),
      -1);
  Type215Message_descriptor_ = file->message_type(215);
  static const int Type215Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type215Message, data_),
  };
  Type215Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type215Message_descriptor_,
      Type215Message::default_instance_,
      Type215Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type215Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type215Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type215Message, _internal_metadata_),
      -1);
  Type216Message_descriptor_ = file->message_type(216);
  static const int Type216Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type216Message, data_),
  };
  Type216Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type216Message_descriptor_,
      Type216Message::default_instance_,
      Type216Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type216Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type216Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type216Message, _internal_metadata_),
      -1);
  Type217Message_descriptor_ = file->message_type(217);
  static const int Type217Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type217Message, data_),
  };
  Type217Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type217Message_descriptor_,
      Type217Message::default_instance_,
      Type217Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type217Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type217Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type217Message, _internal_metadata_),
      -1);
  Type218Message_descriptor_ = file->message_type(218);
  static const int Type218Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type218Message, data_),
  };
  Type218Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type218Message_descriptor_,
      Type218Message::default_instance_,
      Type218Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type218Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type218Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type218Message, _internal_metadata_),
      -1);
  Type219Message_descriptor_ = file->message_type(219);
  static const int Type219Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type219Message, data_),
  };
  Type219Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type219Message_descriptor_,
      Type219Message::default_instance_,
      Type219Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type219Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type219Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type219Message, _internal_metadata_),
      -1);
  Type220Message_descriptor_ = file->message_type(220);
  static const int Type220Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type220Message, data_),
  };
  Type220Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type220Message_descriptor_,
      Type220Message::default_instance_,
      Type220Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type220Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type220Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type220Message, _internal_metadata_),
      -1);
  Type221Message_descriptor_ = file->message_type(221);
  static const int Type221Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type221Message, data_),
  };
  Type221Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type221Message_descriptor_,
      Type221Message::default_instance_,
      Type221Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type221Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type221Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type221Message, _internal_metadata_),
      -1);
  Type222Message_descriptor_ = file->message_type(222);
  static const int Type222Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type222Message, data_),
  };
  Type222Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type222Message_descriptor_,
      Type222Message::default_instance_,
      Type222Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type222Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type222Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type222Message, _internal_metadata_),
      -1);
  Type223Message_descriptor_ = file->message_type(223);
  static const int Type223Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type223Message, data_),
  };
  Type223Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type223Message_descriptor_,
      Type223Message::default_instance_,
      Type223Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type223Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type223Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type223Message, _internal_metadata_),
      -1);
  Type224Message_descriptor_ = file->message_type(224);
  static const int Type224Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type224Message, data_),
  };
  Type224Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type224Message_descriptor_,
      Type224Message::default_instance_,
      Type224Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type224Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type224Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type224Message, _internal_metadata_),
      -1);
  Type225Message_descriptor_ = file->message_type(225);
  static const int Type225Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type225Message, data_),
  };
  Type225Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type225Message_descriptor_,
      Type225Message::default_instance_,
      Type225Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type225Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type225Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type225Message, _internal_metadata_),
      -1);
  Type226Message_descriptor_ = file->message_type(226);
  static const int Type226Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type226Message, data_),
  };
  Type226Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type226Message_descriptor_,
      Type226Message::default_instance_,
      Type226Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type226Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type226Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type226Message, _internal_metadata_),
      -1);
  Type227Message_descriptor_ = file->message_type(227);
  static const int Type227Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type227Message, data_),
  };
  Type227Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type227Message_descriptor_,
      Type227Message::default_instance_,
      Type227Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type227Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type227Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type227Message, _internal_metadata_),
      -1);
  Type228Message_descriptor_ = file->message_type(228);
  static const int Type228Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type228Message, data_),
  };
  Type228Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type228Message_descriptor_,
      Type228Message::default_instance_,
      Type228Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type228Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type228Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type228Message, _internal_metadata_),
      -1);
  Type229Message_descriptor_ = file->message_type(229);
  static const int Type229Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type229Message, data_),
  };
  Type229Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type229Message_descriptor_,
      Type229Message::default_instance_,
      Type229Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type229Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type229Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type229Message, _internal_metadata_),
      -1);
  Type230Message_descriptor_ = file->message_type(230);
  static const int Type230Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type230Message, data_),
  };
  Type230Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type230Message_descriptor_,
      Type230Message::default_instance_,
      Type230Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type230Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type230Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type230Message, _internal_metadata_),
      -1);
  Type231Message_descriptor_ = file->message_type(231);
  static const int Type231Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type231Message, data_),
  };
  Type231Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type231Message_descriptor_,
      Type231Message::default_instance_,
      Type231Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type231Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type231Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type231Message, _internal_metadata_),
      -1);
  Type232Message_descriptor_ = file->message_type(232);
  static const int Type232Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type232Message, data_),
  };
  Type232Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type232Message_descriptor_,
      Type232Message::default_instance_,
      Type232Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type232Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type232Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type232Message, _internal_metadata_),
      -1);
  Type233Message_descriptor_ = file->message_type(233);
  static const int Type233Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type233Message, data_),
  };
  Type233Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type233Message_descriptor_,
      Type233Message::default_instance_,
      Type233Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type233Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type233Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type233Message, _internal_metadata_),
      -1);
  Type234Message_descriptor_ = file->message_type(234);
  static const int Type234Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type234Message, data_),
  };
  Type234Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type234Message_descriptor_,
      Type234Message::default_instance_,
      Type234Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type234Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type234Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type234Message, _internal_metadata_),
      -1);
  Type235Message_descriptor_ = file->message_type(235);
  static const int Type235Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type235Message, data_),
  };
  Type235Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type235Message_descriptor_,
      Type235Message::default_instance_,
      Type235Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type235Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type235Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type235Message, _internal_metadata_),
      -1);
  Type236Message_descriptor_ = file->message_type(236);
  static const int Type236Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type236Message, data_),
  };
  Type236Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type236Message_descriptor_,
      Type236Message::default_instance_,
      Type236Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type236Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type236Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type236Message, _internal_metadata_),
      -1);
  Type237Message_descriptor_ = file->message_type(237);
  static const int Type237Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type237Message, data_),
  };
  Type237Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type237Message_descriptor_,
      Type237Message::default_instance_,
      Type237Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type237Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type237Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type237Message, _internal_metadata_),
      -1);
  Type238Message_descriptor_ = file->message_type(238);
  static const int Type238Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type238Message, data_),
  };
  Type238Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type238Message_descriptor_,
      Type238Message::default_instance_,
      Type238Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type238Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type238Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type238Message, _internal_metadata_),
      -1);
  Type239Message_descriptor_ = file->message_type(239);
  static const int Type239Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type239Message, data_),
  };
  Type239Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type239Message_descriptor_,
      Type239Message::default_instance_,
      Type239Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type239Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type239Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type239Message, _internal_metadata_),
      -1);
  Type240Message_descriptor_ = file->message_type(240);
  static const int Type240Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type240Message, data_),
  };
  Type240Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type240Message_descriptor_,
      Type240Message::default_instance_,
      Type240Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type240Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type240Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type240Message, _internal_metadata_),
      -1);
  Type241Message_descriptor_ = file->message_type(241);
  static const int Type241Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type241Message, data_),
  };
  Type241Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type241Message_descriptor_,
      Type241Message::default_instance_,
      Type241Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type241Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type241Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type241Message, _internal_metadata_),
      -1);
  Type242Message_descriptor_ = file->message_type(242);
  static const int Type242Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type242Message, data_),
  };
  Type242Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type242Message_descriptor_,
      Type242Message::default_instance_,
      Type242Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type242Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type242Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type242Message, _internal_metadata_),
      -1);
  Type243Message_descriptor_ = file->message_type(243);
  static const int Type243Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type243Message, data_),
  };
  Type243Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type243Message_descriptor_,
      Type243Message::default_instance_,
      Type243Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type243Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type243Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type243Message, _internal_metadata_),
      -1);
  Type244Message_descriptor_ = file->message_type(244);
  static const int Type244Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type244Message, data_),
  };
  Type244Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type244Message_descriptor_,
      Type244Message::default_instance_,
      Type244Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type244Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type244Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type244Message, _internal_metadata_),
      -1);
  Type245Message_descriptor_ = file->message_type(245);
  static const int Type245Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type245Message, data_),
  };
  Type245Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type245Message_descriptor_,
      Type245Message::default_instance_,
      Type245Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type245Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type245Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type245Message, _internal_metadata_),
      -1);
  Type246Message_descriptor_ = file->message_type(246);
  static const int Type246Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type246Message, data_),
  };
  Type246Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type246Message_descriptor_,
      Type246Message::default_instance_,
      Type246Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type246Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type246Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type246Message, _internal_metadata_),
      -1);
  Type247Message_descriptor_ = file->message_type(247);
  static const int Type247Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type247Message, data_),
  };
  Type247Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type247Message_descriptor_,
      Type247Message::default_instance_,
      Type247Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type247Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type247Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type247Message, _internal_metadata_),
      -1);
  Type248Message_descriptor_ = file->message_type(248);
  static const int Type248Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type248Message, data_),
  };
  Type248Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type248Message_descriptor_,
      Type248Message::default_instance_,
      Type248Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type248Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type248Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type248Message, _internal_metadata_),
      -1);
  Type249Message_descriptor_ = file->message_type(249);
  static const int Type249Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type249Message, data_),
  };
  Type249Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type249Message_descriptor_,
      Type249Message::default_instance_,
      Type249Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type249Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type249Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type249Message, _internal_metadata_),
      -1);
  Type250Message_descriptor_ = file->message_type(250);
  static const int Type250Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type250Message, data_),
  };
  Type250Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type250Message_descriptor_,
      Type250Message::default_instance_,
      Type250Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type250Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type250Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type250Message, _internal_metadata_),
      -1);
  Type251Message_descriptor_ = file->message_type(251);
  static const int Type251Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type251Message, data_),
  };
  Type251Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type251Message_descriptor_,
      Type251Message::default_instance_,
      Type251Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type251Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type251Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type251Message, _internal_metadata_),
      -1);
  Type252Message_descriptor_ = file->message_type(252);
  static const int Type252Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type252Message, data_),
  };
  Type252Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type252Message_descriptor_,
      Type252Message::default_instance_,
      Type252Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type252Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type252Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type252Message, _internal_metadata_),
      -1);
  Type253Message_descriptor_ = file->message_type(253);
  static const int Type253Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type253Message, data_),
  };
  Type253Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type253Message_descriptor_,
      Type253Message::default_instance_,
      Type253Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type253Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type253Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type253Message, _internal_metadata_),
      -1);
  Type254Message_descriptor_ = file->message_type(254);
  static const int Type254Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type254Message, data_),
  };
  Type254Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type254Message_descriptor_,
      Type254Message::default_instance_,
      Type254Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type254Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type254Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type254Message, _internal_metadata_),
      -1);
  Type255Message_descriptor_ = file->message_type(255);
  static const int Type255Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type255Message, data_),
  };
  Type255Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type255Message_descriptor_,
      Type255Message::default_instance_,
      Type255Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type255Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type255Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type255Message, _internal_metadata_),
      -1);
  Type256Message_descriptor_ = file->message_type(256);
  static const int Type256Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type256Message, data_),
  };
  Type256Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type256Message_descriptor_,
      Type256Message::default_instance_,
      Type256Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type256Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type256Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type256Message, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type1Message_descriptor_, &Type1Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type2Message_descriptor_, &Type2Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type3Message_descriptor_, &Type3Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type4Message_descriptor_, &Type4Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type5Message_descriptor_, &Type5Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type6Message_descriptor_, &Type6Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type7Message_descriptor_, &Type7Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type8Message_descriptor_, &Type8Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type9Message_descriptor_, &Type9Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SimpleClientMessage_descriptor_, &SimpleClientMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type10Message_descriptor_, &Type10Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type11Message_descriptor_, &Type11Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type12Message_descriptor_, &Type12Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type13Message_descriptor_, &Type13Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type14Message_descriptor_, &Type14Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type15Message_descriptor_, &Type15Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type16Message_descriptor_, &Type16Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type17Message_descriptor_, &Type17Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type18Message_descriptor_, &Type18Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type19Message_descriptor_, &Type19Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type20Message_descriptor_, &Type20Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type21Message_descriptor_, &Type21Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type22Message_descriptor_, &Type22Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type23Message_descriptor_, &Type23Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type24Message_descriptor_, &Type24Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type25Message_descriptor_, &Type25Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type26Message_descriptor_, &Type26Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type27Message_descriptor_, &Type27Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type28Message_descriptor_, &Type28Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type29Message_descriptor_, &Type29Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type30Message_descriptor_, &Type30Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type31Message_descriptor_, &Type31Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type32Message_descriptor_, &Type32Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type33Message_descriptor_, &Type33Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type34Message_descriptor_, &Type34Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type35Message_descriptor_, &Type35Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type36Message_descriptor_, &Type36Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type37Message_descriptor_, &Type37Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type38Message_descriptor_, &Type38Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type39Message_descriptor_, &Type39Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type40Message_descriptor_, &Type40Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type41Message_descriptor_, &Type41Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type42Message_descriptor_, &Type42Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type43Message_descriptor_, &Type43Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type44Message_descriptor_, &Type44Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type45Message_descriptor_, &Type45Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type46Message_descriptor_, &Type46Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type47Message_descriptor_, &Type47Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type48Message_descriptor_, &Type48Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type49Message_descriptor_, &Type49Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type50Message_descriptor_, &Type50Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type51Message_descriptor_, &Type51Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type52Message_descriptor_, &Type52Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type53Message_descriptor_, &Type53Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type54Message_descriptor_, &Type54Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type55Message_descriptor_, &Type55Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type56Message_descriptor_, &Type56Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type57Message_descriptor_, &Type57Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type58Message_descriptor_, &Type58Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type59Message_descriptor_, &Type59Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type60Message_descriptor_, &Type60Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type61Message_descriptor_, &Type61Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type62Message_descriptor_, &Type62Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type63Message_descriptor_, &Type63Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type64Message_descriptor_, &Type64Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type65Message_descriptor_, &Type65Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type66Message_descriptor_, &Type66Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type67Message_descriptor_, &Type67Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type68Message_descriptor_, &Type68Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type69Message_descriptor_, &Type69Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type70Message_descriptor_, &Type70Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type71Message_descriptor_, &Type71Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type72Message_descriptor_, &Type72Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type73Message_descriptor_, &Type73Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type74Message_descriptor_, &Type74Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type75Message_descriptor_, &Type75Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type76Message_descriptor_, &Type76Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type77Message_descriptor_, &Type77Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type78Message_descriptor_, &Type78Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type79Message_descriptor_, &Type79Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type80Message_descriptor_, &Type80Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type81Message_descriptor_, &Type81Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type82Message_descriptor_, &Type82Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type83Message_descriptor_, &Type83Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type84Message_descriptor_, &Type84Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type85Message_descriptor_, &Type85Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type86Message_descriptor_, &Type86Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type87Message_descriptor_, &Type87Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type88Message_descriptor_, &Type88Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type89Message_descriptor_, &Type89Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type90Message_descriptor_, &Type90Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type91Message_descriptor_, &Type91Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type92Message_descriptor_, &Type92Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type93Message_descriptor_, &Type93Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type94Message_descriptor_, &Type94Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type95Message_descriptor_, &Type95Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type96Message_descriptor_, &Type96Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type97Message_descriptor_, &Type97Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type98Message_descriptor_, &Type98Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type99Message_descriptor_, &Type99Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type100Message_descriptor_, &Type100Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type101Message_descriptor_, &Type101Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type102Message_descriptor_, &Type102Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type103Message_descriptor_, &Type103Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type104Message_descriptor_, &Type104Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type105Message_descriptor_, &Type105Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type106Message_descriptor_, &Type106Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type107Message_descriptor_, &Type107Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type108Message_descriptor_, &Type108Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type109Message_descriptor_, &Type109Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type110Message_descriptor_, &Type110Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type111Message_descriptor_, &Type111Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type112Message_descriptor_, &Type112Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type113Message_descriptor_, &Type113Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type114Message_descriptor_, &Type114Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type115Message_descriptor_, &Type115Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type116Message_descriptor_, &Type116Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type117Message_descriptor_, &Type117Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type118Message_descriptor_, &Type118Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type119Message_descriptor_, &Type119Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type120Message_descriptor_, &Type120Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type121Message_descriptor_, &Type121Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type122Message_descriptor_, &Type122Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type123Message_descriptor_, &Type123Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type124Message_descriptor_, &Type124Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type125Message_descriptor_, &Type125Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type126Message_descriptor_, &Type126Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type127Message_descriptor_, &Type127Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type128Message_descriptor_, &Type128Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type129Message_descriptor_, &Type129Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type130Message_descriptor_, &Type130Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type131Message_descriptor_, &Type131Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type132Message_descriptor_, &Type132Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type133Message_descriptor_, &Type133Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type134Message_descriptor_, &Type134Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type135Message_descriptor_, &Type135Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type136Message_descriptor_, &Type136Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type137Message_descriptor_, &Type137Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type138Message_descriptor_, &Type138Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type139Message_descriptor_, &Type139Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type140Message_descriptor_, &Type140Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type141Message_descriptor_, &Type141Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type142Message_descriptor_, &Type142Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type143Message_descriptor_, &Type143Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type144Message_descriptor_, &Type144Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type145Message_descriptor_, &Type145Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type146Message_descriptor_, &Type146Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type147Message_descriptor_, &Type147Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type148Message_descriptor_, &Type148Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type149Message_descriptor_, &Type149Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type150Message_descriptor_, &Type150Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type151Message_descriptor_, &Type151Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type152Message_descriptor_, &Type152Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type153Message_descriptor_, &Type153Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type154Message_descriptor_, &Type154Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type155Message_descriptor_, &Type155Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type156Message_descriptor_, &Type156Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type157Message_descriptor_, &Type157Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type158Message_descriptor_, &Type158Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type159Message_descriptor_, &Type159Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type160Message_descriptor_, &Type160Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type161Message_descriptor_, &Type161Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type162Message_descriptor_, &Type162Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type163Message_descriptor_, &Type163Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type164Message_descriptor_, &Type164Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type165Message_descriptor_, &Type165Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type166Message_descriptor_, &Type166Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type167Message_descriptor_, &Type167Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type168Message_descriptor_, &Type168Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type169Message_descriptor_, &Type169Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type170Message_descriptor_, &Type170Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type171Message_descriptor_, &Type171Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type172Message_descriptor_, &Type172Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type173Message_descriptor_, &Type173Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type174Message_descriptor_, &Type174Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type175Message_descriptor_, &Type175Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type176Message_descriptor_, &Type176Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type177Message_descriptor_, &Type177Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type178Message_descriptor_, &Type178Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type179Message_descriptor_, &Type179Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type180Message_descriptor_, &Type180Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type181Message_descriptor_, &Type181Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type182Message_descriptor_, &Type182Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type183Message_descriptor_, &Type183Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type184Message_descriptor_, &Type184Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type185Message_descriptor_, &Type185Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type186Message_descriptor_, &Type186Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type187Message_descriptor_, &Type187Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type188Message_descriptor_, &Type188Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type189Message_descriptor_, &Type189Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type190Message_descriptor_, &Type190Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type191Message_descriptor_, &Type191Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type192Message_descriptor_, &Type192Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type193Message_descriptor_, &Type193Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type194Message_descriptor_, &Type194Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type195Message_descriptor_, &Type195Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type196Message_descriptor_, &Type196Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type197Message_descriptor_, &Type197Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type198Message_descriptor_, &Type198Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type199Message_descriptor_, &Type199Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type200Message_descriptor_, &Type200Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type201Message_descriptor_, &Type201Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type202Message_descriptor_, &Type202Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type203Message_descriptor_, &Type203Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type204Message_descriptor_, &Type204Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type205Message_descriptor_, &Type205Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type206Message_descriptor_, &Type206Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type207Message_descriptor_, &Type207Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type208Message_descriptor_, &Type208Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type209Message_descriptor_, &Type209Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type210Message_descriptor_, &Type210Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type211Message_descriptor_, &Type211Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type212Message_descriptor_, &Type212Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type213Message_descriptor_, &Type213Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type214Message_descriptor_, &Type214Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type215Message_descriptor_, &Type215Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type216Message_descriptor_, &Type216Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type217Message_descriptor_, &Type217Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type218Message_descriptor_, &Type218Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type219Message_descriptor_, &Type219Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type220Message_descriptor_, &Type220Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type221Message_descriptor_, &Type221Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type222Message_descriptor_, &Type222Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type223Message_descriptor_, &Type223Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type224Message_descriptor_, &Type224Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type225Message_descriptor_, &Type225Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type226Message_descriptor_, &Type226Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type227Message_descriptor_, &Type227Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type228Message_descriptor_, &Type228Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type229Message_descriptor_, &Type229Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type230Message_descriptor_, &Type230Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type231Message_descriptor_, &Type231Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type232Message_descriptor_, &Type232Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type233Message_descriptor_, &Type233Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type234Message_descriptor_, &Type234Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type235Message_descriptor_, &Type235Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type236Message_descriptor_, &Type236Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type237Message_descriptor_, &Type237Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type238Message_descriptor_, &Type238Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type239Message_descriptor_, &Type239Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type240Message_descriptor_, &Type240Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type241Message_descriptor_, &Type241Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type242Message_descriptor_, &Type242Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type243Message_descriptor_, &Type243Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type244Message_descriptor_, &Type244Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type245Message_descriptor_, &Type245Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type246Message_descriptor_, &Type246Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type247Message_descriptor_, &Type247Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type248Message_descriptor_, &Type248Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type249Message_descriptor_, &Type249Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type250Message_descriptor_, &Type250Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type251Message_descriptor_, &Type251Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type252Message_descriptor_, &Type252Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type253Message_descriptor_, &Type253Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type254Message_descriptor_, &Type254Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type255Message_descriptor_, &Type255Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type256Message_descriptor_, &Type256Message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_2eproto() {
  delete Type1Message::default_instance_;
  delete Type1Message_reflection_;
  delete Type2Message::default_instance_;
  delete Type2Message_reflection_;
  delete Type3Message::default_instance_;
  delete Type3Message_reflection_;
  delete Type4Message::default_instance_;
  delete Type4Message_reflection_;
  delete Type5Message::default_instance_;
  delete Type5Message_reflection_;
  delete Type6Message::default_instance_;
  delete Type6Message_reflection_;
  delete Type7Message::default_instance_;
  delete Type7Message_reflection_;
  delete Type8Message::default_instance_;
  delete Type8Message_reflection_;
  delete Type9Message::default_instance_;
  delete Type9Message_reflection_;
  delete SimpleClientMessage::default_instance_;
  delete SimpleClientMessage_reflection_;
  delete Type10Message::default_instance_;
  delete Type10Message_reflection_;
  delete Type11Message::default_instance_;
  delete Type11Message_reflection_;
  delete Type12Message::default_instance_;
  delete Type12Message_reflection_;
  delete Type13Message::default_instance_;
  delete Type13Message_reflection_;
  delete Type14Message::default_instance_;
  delete Type14Message_reflection_;
  delete Type15Message::default_instance_;
  delete Type15Message_reflection_;
  delete Type16Message::default_instance_;
  delete Type16Message_reflection_;
  delete Type17Message::default_instance_;
  delete Type17Message_reflection_;
  delete Type18Message::default_instance_;
  delete Type18Message_reflection_;
  delete Type19Message::default_instance_;
  delete Type19Message_reflection_;
  delete Type20Message::default_instance_;
  delete Type20Message_reflection_;
  delete Type21Message::default_instance_;
  delete Type21Message_reflection_;
  delete Type22Message::default_instance_;
  delete Type22Message_reflection_;
  delete Type23Message::default_instance_;
  delete Type23Message_reflection_;
  delete Type24Message::default_instance_;
  delete Type24Message_reflection_;
  delete Type25Message::default_instance_;
  delete Type25Message_reflection_;
  delete Type26Message::default_instance_;
  delete Type26Message_reflection_;
  delete Type27Message::default_instance_;
  delete Type27Message_reflection_;
  delete Type28Message::default_instance_;
  delete Type28Message_reflection_;
  delete Type29Message::default_instance_;
  delete Type29Message_reflection_;
  delete Type30Message::default_instance_;
  delete Type30Message_reflection_;
  delete Type31Message::default_instance_;
  delete Type31Message_reflection_;
  delete Type32Message::default_instance_;
  delete Type32Message_reflection_;
  delete Type33Message::default_instance_;
  delete Type33Message_reflection_;
  delete Type34Message::default_instance_;
  delete Type34Message_reflection_;
  delete Type35Message::default_instance_;
  delete Type35Message_reflection_;
  delete Type36Message::default_instance_;
  delete Type36Message_reflection_;
  delete Type37Message::default_instance_;
  delete Type37Message_reflection_;
  delete Type38Message::default_instance_;
  delete Type38Message_reflection_;
  delete Type39Message::default_instance_;
  delete Type39Message_reflection_;
  delete Type40Message::default_instance_;
  delete Type40Message_reflection_;
  delete Type41Message::default_instance_;
  delete Type41Message_reflection_;
  delete Type42Message::default_instance_;
  delete Type42Message_reflection_;
  delete Type43Message::default_instance_;
  delete Type43Message_reflection_;
  delete Type44Message::default_instance_;
  delete Type44Message_reflection_;
  delete Type45Message::default_instance_;
  delete Type45Message_reflection_;
  delete Type46Message::default_instance_;
  delete Type46Message_reflection_;
  delete Type47Message::default_instance_;
  delete Type47Message_reflection_;
  delete Type48Message::default_instance_;
  delete Type48Message_reflection_;
  delete Type49Message::default_instance_;
  delete Type49Message_reflection_;
  delete Type50Message::default_instance_;
  delete Type50Message_reflection_;
  delete Type51Message::default_instance_;
  delete Type51Message_reflection_;
  delete Type52Message::default_instance_;
  delete Type52Message_reflection_;
  delete Type53Message::default_instance_;
  delete Type53Message_reflection_;
  delete Type54Message::default_instance_;
  delete Type54Message_reflection_;
  delete Type55Message::default_instance_;
  delete Type55Message_reflection_;
  delete Type56Message::default_instance_;
  delete Type56Message_reflection_;
  delete Type57Message::default_instance_;
  delete Type57Message_reflection_;
  delete Type58Message::default_instance_;
  delete Type58Message_reflection_;
  delete Type59Message::default_instance_;
  delete Type59Message_reflection_;
  delete Type60Message::default_instance_;
  delete Type60Message_reflection_;
  delete Type61Message::default_instance_;
  delete Type61Message_reflection_;
  delete Type62Message::default_instance_;
  delete Type62Message_reflection_;
  delete Type63Message::default_instance_;
  delete Type63Message_reflection_;
  delete Type64Message::default_instance_;
  delete Type64Message_reflection_;
  delete Type65Message::default_instance_;
  delete Type65Message_reflection_;
  delete Type66Message::default_instance_;
  delete Type66Message_reflection_;
  delete Type67Message::default_instance_;
  delete Type67Message_reflection_;
  delete Type68Message::default_instance_;
  delete Type68Message_reflection_;
  delete Type69Message::default_instance_;
  delete Type69Message_reflection_;
  delete Type70Message::default_instance_;
  delete Type70Message_reflection_;
  delete Type71Message::default_instance_;
  delete Type71Message_reflection_;
  delete Type72Message::default_instance_;
  delete Type72Message_reflection_;
  delete Type73Message::default_instance_;
  delete Type73Message_reflection_;
  delete Type74Message::default_instance_;
  delete Type74Message_reflection_;
  delete Type75Message::default_instance_;
  delete Type75Message_reflection_;
  delete Type76Message::default_instance_;
  delete Type76Message_reflection_;
  delete Type77Message::default_instance_;
  delete Type77Message_reflection_;
  delete Type78Message::default_instance_;
  delete Type78Message_reflection_;
  delete Type79Message::default_instance_;
  delete Type79Message_reflection_;
  delete Type80Message::default_instance_;
  delete Type80Message_reflection_;
  delete Type81Message::default_instance_;
  delete Type81Message_reflection_;
  delete Type82Message::default_instance_;
  delete Type82Message_reflection_;
  delete Type83Message::default_instance_;
  delete Type83Message_reflection_;
  delete Type84Message::default_instance_;
  delete Type84Message_reflection_;
  delete Type85Message::default_instance_;
  delete Type85Message_reflection_;
  delete Type86Message::default_instance_;
  delete Type86Message_reflection_;
  delete Type87Message::default_instance_;
  delete Type87Message_reflection_;
  delete Type88Message::default_instance_;
  delete Type88Message_reflection_;
  delete Type89Message::default_instance_;
  delete Type89Message_reflection_;
  delete Type90Message::default_instance_;
  delete Type90Message_reflection_;
  delete Type91Message::default_instance_;
  delete Type91Message_reflection_;
  delete Type92Message::default_instance_;
  delete Type92Message_reflection_;
  delete Type93Message::default_instance_;
  delete Type93Message_reflection_;
  delete Type94Message::default_instance_;
  delete Type94Message_reflection_;
  delete Type95Message::default_instance_;
  delete Type95Message_reflection_;
  delete Type96Message::default_instance_;
  delete Type96Message_reflection_;
  delete Type97Message::default_instance_;
  delete Type97Message_reflection_;
  delete Type98Message::default_instance_;
  delete Type98Message_reflection_;
  delete Type99Message::default_instance_;
  delete Type99Message_reflection_;
  delete Type100Message::default_instance_;
  delete Type100Message_reflection_;
  delete Type101Message::default_instance_;
  delete Type101Message_reflection_;
  delete Type102Message::default_instance_;
  delete Type102Message_reflection_;
  delete Type103Message::default_instance_;
  delete Type103Message_reflection_;
  delete Type104Message::default_instance_;
  delete Type104Message_reflection_;
  delete Type105Message::default_instance_;
  delete Type105Message_reflection_;
  delete Type106Message::default_instance_;
  delete Type106Message_reflection_;
  delete Type107Message::default_instance_;
  delete Type107Message_reflection_;
  delete Type108Message::default_instance_;
  delete Type108Message_reflection_;
  delete Type109Message::default_instance_;
  delete Type109Message_reflection_;
  delete Type110Message::default_instance_;
  delete Type110Message_reflection_;
  delete Type111Message::default_instance_;
  delete Type111Message_reflection_;
  delete Type112Message::default_instance_;
  delete Type112Message_reflection_;
  delete Type113Message::default_instance_;
  delete Type113Message_reflection_;
  delete Type114Message::default_instance_;
  delete Type114Message_reflection_;
  delete Type115Message::default_instance_;
  delete Type115Message_reflection_;
  delete Type116Message::default_instance_;
  delete Type116Message_reflection_;
  delete Type117Message::default_instance_;
  delete Type117Message_reflection_;
  delete Type118Message::default_instance_;
  delete Type118Message_reflection_;
  delete Type119Message::default_instance_;
  delete Type119Message_reflection_;
  delete Type120Message::default_instance_;
  delete Type120Message_reflection_;
  delete Type121Message::default_instance_;
  delete Type121Message_reflection_;
  delete Type122Message::default_instance_;
  delete Type122Message_reflection_;
  delete Type123Message::default_instance_;
  delete Type123Message_reflection_;
  delete Type124Message::default_instance_;
  delete Type124Message_reflection_;
  delete Type125Message::default_instance_;
  delete Type125Message_reflection_;
  delete Type126Message::default_instance_;
  delete Type126Message_reflection_;
  delete Type127Message::default_instance_;
  delete Type127Message_reflection_;
  delete Type128Message::default_instance_;
  delete Type128Message_reflection_;
  delete Type129Message::default_instance_;
  delete Type129Message_reflection_;
  delete Type130Message::default_instance_;
  delete Type130Message_reflection_;
  delete Type131Message::default_instance_;
  delete Type131Message_reflection_;
  delete Type132Message::default_instance_;
  delete Type132Message_reflection_;
  delete Type133Message::default_instance_;
  delete Type133Message_reflection_;
  delete Type134Message::default_instance_;
  delete Type134Message_reflection_;
  delete Type135Message::default_instance_;
  delete Type135Message_reflection_;
  delete Type136Message::default_instance_;
  delete Type136Message_reflection_;
  delete Type137Message::default_instance_;
  delete Type137Message_reflection_;
  delete Type138Message::default_instance_;
  delete Type138Message_reflection_;
  delete Type139Message::default_instance_;
  delete Type139Message_reflection_;
  delete Type140Message::default_instance_;
  delete Type140Message_reflection_;
  delete Type141Message::default_instance_;
  delete Type141Message_reflection_;
  delete Type142Message::default_instance_;
  delete Type142Message_reflection_;
  delete Type143Message::default_instance_;
  delete Type143Message_reflection_;
  delete Type144Message::default_instance_;
  delete Type144Message_reflection_;
  delete Type145Message::default_instance_;
  delete Type145Message_reflection_;
  delete Type146Message::default_instance_;
  delete Type146Message_reflection_;
  delete Type147Message::default_instance_;
  delete Type147Message_reflection_;
  delete Type148Message::default_instance_;
  delete Type148Message_reflection_;
  delete Type149Message::default_instance_;
  delete Type149Message_reflection_;
  delete Type150Message::default_instance_;
  delete Type150Message_reflection_;
  delete Type151Message::default_instance_;
  delete Type151Message_reflection_;
  delete Type152Message::default_instance_;
  delete Type152Message_reflection_;
  delete Type153Message::default_instance_;
  delete Type153Message_reflection_;
  delete Type154Message::default_instance_;
  delete Type154Message_reflection_;
  delete Type155Message::default_instance_;
  delete Type155Message_reflection_;
  delete Type156Message::default_instance_;
  delete Type156Message_reflection_;
  delete Type157Message::default_instance_;
  delete Type157Message_reflection_;
  delete Type158Message::default_instance_;
  delete Type158Message_reflection_;
  delete Type159Message::default_instance_;
  delete Type159Message_reflection_;
  delete Type160Message::default_instance_;
  delete Type160Message_reflection_;
  delete Type161Message::default_instance_;
  delete Type161Message_reflection_;
  delete Type162Message::default_instance_;
  delete Type162Message_reflection_;
  delete Type163Message::default_instance_;
  delete Type163Message_reflection_;
  delete Type164Message::default_instance_;
  delete Type164Message_reflection_;
  delete Type165Message::default_instance_;
  delete Type165Message_reflection_;
  delete Type166Message::default_instance_;
  delete Type166Message_reflection_;
  delete Type167Message::default_instance_;
  delete Type167Message_reflection_;
  delete Type168Message::default_instance_;
  delete Type168Message_reflection_;
  delete Type169Message::default_instance_;
  delete Type169Message_reflection_;
  delete Type170Message::default_instance_;
  delete Type170Message_reflection_;
  delete Type171Message::default_instance_;
  delete Type171Message_reflection_;
  delete Type172Message::default_instance_;
  delete Type172Message_reflection_;
  delete Type173Message::default_instance_;
  delete Type173Message_reflection_;
  delete Type174Message::default_instance_;
  delete Type174Message_reflection_;
  delete Type175Message::default_instance_;
  delete Type175Message_reflection_;
  delete Type176Message::default_instance_;
  delete Type176Message_reflection_;
  delete Type177Message::default_instance_;
  delete Type177Message_reflection_;
  delete Type178Message::default_instance_;
  delete Type178Message_reflection_;
  delete Type179Message::default_instance_;
  delete Type179Message_reflection_;
  delete Type180Message::default_instance_;
  delete Type180Message_reflection_;
  delete Type181Message::default_instance_;
  delete Type181Message_reflection_;
  delete Type182Message::default_instance_;
  delete Type182Message_reflection_;
  delete Type183Message::default_instance_;
  delete Type183Message_reflection_;
  delete Type184Message::default_instance_;
  delete Type184Message_reflection_;
  delete Type185Message::default_instance_;
  delete Type185Message_reflection_;
  delete Type186Message::default_instance_;
  delete Type186Message_reflection_;
  delete Type187Message::default_instance_;
  delete Type187Message_reflection_;
  delete Type188Message::default_instance_;
  delete Type188Message_reflection_;
  delete Type189Message::default_instance_;
  delete Type189Message_reflection_;
  delete Type190Message::default_instance_;
  delete Type190Message_reflection_;
  delete Type191Message::default_instance_;
  delete Type191Message_reflection_;
  delete Type192Message::default_instance_;
  delete Type192Message_reflection_;
  delete Type193Message::default_instance_;
  delete Type193Message_reflection_;
  delete Type194Message::default_instance_;
  delete Type194Message_reflection_;
  delete Type195Message::default_instance_;
  delete Type195Message_reflection_;
  delete Type196Message::default_instance_;
  delete Type196Message_reflection_;
  delete Type197Message::default_instance_;
  delete Type197Message_reflection_;
  delete Type198Message::default_instance_;
  delete Type198Message_reflection_;
  delete Type199Message::default_instance_;
  delete Type199Message_reflection_;
  delete Type200Message::default_instance_;
  delete Type200Message_reflection_;
  delete Type201Message::default_instance_;
  delete Type201Message_reflection_;
  delete Type202Message::default_instance_;
  delete Type202Message_reflection_;
  delete Type203Message::default_instance_;
  delete Type203Message_reflection_;
  delete Type204Message::default_instance_;
  delete Type204Message_reflection_;
  delete Type205Message::default_instance_;
  delete Type205Message_reflection_;
  delete Type206Message::default_instance_;
  delete Type206Message_reflection_;
  delete Type207Message::default_instance_;
  delete Type207Message_reflection_;
  delete Type208Message::default_instance_;
  delete Type208Message_reflection_;
  delete Type209Message::default_instance_;
  delete Type209Message_reflection_;
  delete Type210Message::default_instance_;
  delete Type210Message_reflection_;
  delete Type211Message::default_instance_;
  delete Type211Message_reflection_;
  delete Type212Message::default_instance_;
  delete Type212Message_reflection_;
  delete Type213Message::default_instance_;
  delete Type213Message_reflection_;
  delete Type214Message::default_instance_;
  delete Type214Message_reflection_;
  delete Type215Message::default_instance_;
  delete Type215Message_reflection_;
  delete Type216Message::default_instance_;
  delete Type216Message_reflection_;
  delete Type217Message::default_instance_;
  delete Type217Message_reflection_;
  delete Type218Message::default_instance_;
  delete Type218Message_reflection_;
  delete Type219Message::default_instance_;
  delete Type219Message_reflection_;
  delete Type220Message::default_instance_;
  delete Type220Message_reflection_;
  delete Type221Message::default_instance_;
  delete Type221Message_reflection_;
  delete Type222Message::default_instance_;
  delete Type222Message_reflection_;
  delete Type223Message::default_instance_;
  delete Type223Message_reflection_;
  delete Type224Message::default_instance_;
  delete Type224Message_reflection_;
  delete Type225Message::default_instance_;
  delete Type225Message_reflection_;
  delete Type226Message::default_instance_;
  delete Type226Message_reflection_;
  delete Type227Message::default_instance_;
  delete Type227Message_reflection_;
  delete Type228Message::default_instance_;
  delete Type228Message_reflection_;
  delete Type229Message::default_instance_;
  delete Type229Message_reflection_;
  delete Type230Message::default_instance_;
  delete Type230Message_reflection_;
  delete Type231Message::default_instance_;
  delete Type231Message_reflection_;
  delete Type232Message::default_instance_;
  delete Type232Message_reflection_;
  delete Type233Message::default_instance_;
  delete Type233Message_reflection_;
  delete Type234Message::default_instance_;
  delete Type234Message_reflection_;
  delete Type235Message::default_instance_;
  delete Type235Message_reflection_;
  delete Type236Message::default_instance_;
  delete Type236Message_reflection_;
  delete Type237Message::default_instance_;
  delete Type237Message_reflection_;
  delete Type238Message::default_instance_;
  delete Type238Message_reflection_;
  delete Type239Message::default_instance_;
  delete Type239Message_reflection_;
  delete Type240Message::default_instance_;
  delete Type240Message_reflection_;
  delete Type241Message::default_instance_;
  delete Type241Message_reflection_;
  delete Type242Message::default_instance_;
  delete Type242Message_reflection_;
  delete Type243Message::default_instance_;
  delete Type243Message_reflection_;
  delete Type244Message::default_instance_;
  delete Type244Message_reflection_;
  delete Type245Message::default_instance_;
  delete Type245Message_reflection_;
  delete Type246Message::default_instance_;
  delete Type246Message_reflection_;
  delete Type247Message::default_instance_;
  delete Type247Message_reflection_;
  delete Type248Message::default_instance_;
  delete Type248Message_reflection_;
  delete Type249Message::default_instance_;
  delete Type249Message_reflection_;
  delete Type250Message::default_instance_;
  delete Type250Message_reflection_;
  delete Type251Message::default_instance_;
  delete Type251Message_reflection_;
  delete Type252Message::default_instance_;
  delete Type252Message_reflection_;
  delete Type253Message::default_instance_;
  delete Type253Message_reflection_;
  delete Type254Message::default_instance_;
  delete Type254Message_reflection_;
  delete Type255Message::default_instance_;
  delete Type255Message_reflection_;
  delete Type256Message::default_instance_;
  delete Type256Message_reflection_;
}

void protobuf_AddDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016messages.proto\022\005tests\"\034\n\014Type1Message\022"
    "\014\n\004data\030\001 \001(\005\"\034\n\014Type2Message\022\014\n\004data\030\001 "
    "\001(\003\"\034\n\014Type3Message\022\014\n\004data\030\001 \001(\010\"\034\n\014Typ"
    "e4Message\022\014\n\004data\030\001 \001(\002\"\034\n\014Type5Message\022"
    "\014\n\004data\030\001 \001(\001\"\034\n\014Type6Message\022\014\n\004data\030\001 "
    "\001(\014\"\034\n\014Type7Message\022\014\n\004data\030\001 \001(\t\",\n\014Typ"
    "e8Message\022\r\n\005data1\030\001 \001(\005\022\r\n\005data2\030\002 \001(\003\""
    ";\n\014Type9Message\022\r\n\005data1\030\001 \001(\005\022\r\n\005data2\030"
    "\002 \001(\005\022\r\n\005data3\030\003 \001(\005\"9\n\023SimpleClientMess"
    "age\022\021\n\ttimestamp\030\001 \002(\005\022\017\n\007payload\030\002 \001(\t\""
    "\035\n\rType10Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType11"
    "Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType12Message\022\014"
    "\n\004data\030\001 \001(\t\"\035\n\rType13Message\022\014\n\004data\030\001 "
    "\001(\t\"\035\n\rType14Message\022\014\n\004data\030\001 \001(\t\"\035\n\rTy"
    "pe15Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType16Messa"
    "ge\022\014\n\004data\030\001 \001(\t\"\035\n\rType17Message\022\014\n\004dat"
    "a\030\001 \001(\t\"\035\n\rType18Message\022\014\n\004data\030\001 \001(\t\"\035"
    "\n\rType19Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType20M"
    "essage\022\014\n\004data\030\001 \001(\t\"\035\n\rType21Message\022\014\n"
    "\004data\030\001 \001(\t\"\035\n\rType22Message\022\014\n\004data\030\001 \001"
    "(\t\"\035\n\rType23Message\022\014\n\004data\030\001 \001(\t\"\035\n\rTyp"
    "e24Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType25Messag"
    "e\022\014\n\004data\030\001 \001(\t\"\035\n\rType26Message\022\014\n\004data"
    "\030\001 \001(\t\"\035\n\rType27Message\022\014\n\004data\030\001 \001(\t\"\035\n"
    "\rType28Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType29Me"
    "ssage\022\014\n\004data\030\001 \001(\t\"\035\n\rType30Message\022\014\n\004"
    "data\030\001 \001(\t\"\035\n\rType31Message\022\014\n\004data\030\001 \001("
    "\t\"\035\n\rType32Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType"
    "33Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType34Message"
    "\022\014\n\004data\030\001 \001(\t\"\035\n\rType35Message\022\014\n\004data\030"
    "\001 \001(\t\"\035\n\rType36Message\022\014\n\004data\030\001 \001(\t\"\035\n\r"
    "Type37Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType38Mes"
    "sage\022\014\n\004data\030\001 \001(\t\"\035\n\rType39Message\022\014\n\004d"
    "ata\030\001 \001(\t\"\035\n\rType40Message\022\014\n\004data\030\001 \001(\t"
    "\"\035\n\rType41Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType4"
    "2Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType43Message\022"
    "\014\n\004data\030\001 \001(\t\"\035\n\rType44Message\022\014\n\004data\030\001"
    " \001(\t\"\035\n\rType45Message\022\014\n\004data\030\001 \001(\t\"\035\n\rT"
    "ype46Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType47Mess"
    "age\022\014\n\004data\030\001 \001(\t\"\035\n\rType48Message\022\014\n\004da"
    "ta\030\001 \001(\t\"\035\n\rType49Message\022\014\n\004data\030\001 \001(\t\""
    "\035\n\rType50Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType51"
    "Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType52Message\022\014"
    "\n\004data\030\001 \001(\t\"\035\n\rType53Message\022\014\n\004data\030\001 "
    "\001(\t\"\035\n\rType54Message\022\014\n\004data\030\001 \001(\t\"\035\n\rTy"
    "pe55Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType56Messa"
    "ge\022\014\n\004data\030\001 \001(\t\"\035\n\rType57Message\022\014\n\004dat"
    "a\030\001 \001(\t\"\035\n\rType58Message\022\014\n\004data\030\001 \001(\t\"\035"
    "\n\rType59Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType60M"
    "essage\022\014\n\004data\030\001 \001(\t\"\035\n\rType61Message\022\014\n"
    "\004data\030\001 \001(\t\"\035\n\rType62Message\022\014\n\004data\030\001 \001"
    "(\t\"\035\n\rType63Message\022\014\n\004data\030\001 \001(\t\"\035\n\rTyp"
    "e64Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType65Messag"
    "e\022\014\n\004data\030\001 \001(\t\"\035\n\rType66Message\022\014\n\004data"
    "\030\001 \001(\t\"\035\n\rType67Message\022\014\n\004data\030\001 \001(\t\"\035\n"
    "\rType68Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType69Me"
    "ssage\022\014\n\004data\030\001 \001(\t\"\035\n\rType70Message\022\014\n\004"
    "data\030\001 \001(\t\"\035\n\rType71Message\022\014\n\004data\030\001 \001("
    "\t\"\035\n\rType72Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType"
    "73Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType74Message"
    "\022\014\n\004data\030\001 \001(\t\"\035\n\rType75Message\022\014\n\004data\030"
    "\001 \001(\t\"\035\n\rType76Message\022\014\n\004data\030\001 \001(\t\"\035\n\r"
    "Type77Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType78Mes"
    "sage\022\014\n\004data\030\001 \001(\t\"\035\n\rType79Message\022\014\n\004d"
    "ata\030\001 \001(\t\"\035\n\rType80Message\022\014\n\004data\030\001 \001(\t"
    "\"\035\n\rType81Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType8"
    "2Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType83Message\022"
    "\014\n\004data\030\001 \001(\t\"\035\n\rType84Message\022\014\n\004data\030\001"
    " \001(\t\"\035\n\rType85Message\022\014\n\004data\030\001 \001(\t\"\035\n\rT"
    "ype86Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType87Mess"
    "age\022\014\n\004data\030\001 \001(\t\"\035\n\rType88Message\022\014\n\004da"
    "ta\030\001 \001(\t\"\035\n\rType89Message\022\014\n\004data\030\001 \001(\t\""
    "\035\n\rType90Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType91"
    "Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType92Message\022\014"
    "\n\004data\030\001 \001(\t\"\035\n\rType93Message\022\014\n\004data\030\001 "
    "\001(\t\"\035\n\rType94Message\022\014\n\004data\030\001 \001(\t\"\035\n\rTy"
    "pe95Message\022\014\n\004data\030\001 \001(\t\"\035\n\rType96Messa"
    "ge\022\014\n\004data\030\001 \001(\t\"\035\n\rType97Message\022\014\n\004dat"
    "a\030\001 \001(\t\"\035\n\rType98Message\022\014\n\004data\030\001 \001(\t\"\035"
    "\n\rType99Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type100"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type101Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type102Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type103Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type104Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type105"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type106Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type107Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type108Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type109Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type110"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type111Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type112Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type113Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type114Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type115"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type116Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type117Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type118Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type119Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type120"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type121Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type122Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type123Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type124Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type125"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type126Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type127Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type128Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type129Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type130"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type131Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type132Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type133Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type134Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type135"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type136Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type137Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type138Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type139Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type140"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type141Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type142Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type143Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type144Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type145"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type146Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type147Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type148Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type149Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type150"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type151Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type152Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type153Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type154Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type155"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type156Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type157Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type158Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type159Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type160"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type161Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type162Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type163Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type164Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type165"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type166Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type167Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type168Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type169Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type170"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type171Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type172Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type173Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type174Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type175"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type176Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type177Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type178Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type179Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type180"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type181Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type182Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type183Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type184Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type185"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type186Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type187Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type188Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type189Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type190"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type191Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type192Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type193Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type194Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type195"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type196Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type197Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type198Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type199Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type200"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type201Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type202Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type203Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type204Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type205"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type206Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type207Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type208Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type209Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type210"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type211Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type212Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type213Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type214Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type215"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type216Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type217Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type218Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type219Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type220"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type221Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type222Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type223Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type224Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type225"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type226Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type227Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type228Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type229Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type230"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type231Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type232Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type233Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type234Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type235"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type236Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type237Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type238Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type239Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type240"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type241Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type242Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type243Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type244Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type245"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type246Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type247Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type248Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type249Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type250"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type251Message\022"
    "\014\n\004data\030\001 \001(\t\"\036\n\016Type252Message\022\014\n\004data\030"
    "\001 \001(\t\"\036\n\016Type253Message\022\014\n\004data\030\001 \001(\t\"\036\n"
    "\016Type254Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type255"
    "Message\022\014\n\004data\030\001 \001(\t\"\036\n\016Type256Message\022"
    "\014\n\004data\030\001 \001(\t", 8213);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  Type1Message::default_instance_ = new Type1Message();
  Type2Message::default_instance_ = new Type2Message();
  Type3Message::default_instance_ = new Type3Message();
  Type4Message::default_instance_ = new Type4Message();
  Type5Message::default_instance_ = new Type5Message();
  Type6Message::default_instance_ = new Type6Message();
  Type7Message::default_instance_ = new Type7Message();
  Type8Message::default_instance_ = new Type8Message();
  Type9Message::default_instance_ = new Type9Message();
  SimpleClientMessage::default_instance_ = new SimpleClientMessage();
  Type10Message::default_instance_ = new Type10Message();
  Type11Message::default_instance_ = new Type11Message();
  Type12Message::default_instance_ = new Type12Message();
  Type13Message::default_instance_ = new Type13Message();
  Type14Message::default_instance_ = new Type14Message();
  Type15Message::default_instance_ = new Type15Message();
  Type16Message::default_instance_ = new Type16Message();
  Type17Message::default_instance_ = new Type17Message();
  Type18Message::default_instance_ = new Type18Message();
  Type19Message::default_instance_ = new Type19Message();
  Type20Message::default_instance_ = new Type20Message();
  Type21Message::default_instance_ = new Type21Message();
  Type22Message::default_instance_ = new Type22Message();
  Type23Message::default_instance_ = new Type23Message();
  Type24Message::default_instance_ = new Type24Message();
  Type25Message::default_instance_ = new Type25Message();
  Type26Message::default_instance_ = new Type26Message();
  Type27Message::default_instance_ = new Type27Message();
  Type28Message::default_instance_ = new Type28Message();
  Type29Message::default_instance_ = new Type29Message();
  Type30Message::default_instance_ = new Type30Message();
  Type31Message::default_instance_ = new Type31Message();
  Type32Message::default_instance_ = new Type32Message();
  Type33Message::default_instance_ = new Type33Message();
  Type34Message::default_instance_ = new Type34Message();
  Type35Message::default_instance_ = new Type35Message();
  Type36Message::default_instance_ = new Type36Message();
  Type37Message::default_instance_ = new Type37Message();
  Type38Message::default_instance_ = new Type38Message();
  Type39Message::default_instance_ = new Type39Message();
  Type40Message::default_instance_ = new Type40Message();
  Type41Message::default_instance_ = new Type41Message();
  Type42Message::default_instance_ = new Type42Message();
  Type43Message::default_instance_ = new Type43Message();
  Type44Message::default_instance_ = new Type44Message();
  Type45Message::default_instance_ = new Type45Message();
  Type46Message::default_instance_ = new Type46Message();
  Type47Message::default_instance_ = new Type47Message();
  Type48Message::default_instance_ = new Type48Message();
  Type49Message::default_instance_ = new Type49Message();
  Type50Message::default_instance_ = new Type50Message();
  Type51Message::default_instance_ = new Type51Message();
  Type52Message::default_instance_ = new Type52Message();
  Type53Message::default_instance_ = new Type53Message();
  Type54Message::default_instance_ = new Type54Message();
  Type55Message::default_instance_ = new Type55Message();
  Type56Message::default_instance_ = new Type56Message();
  Type57Message::default_instance_ = new Type57Message();
  Type58Message::default_instance_ = new Type58Message();
  Type59Message::default_instance_ = new Type59Message();
  Type60Message::default_instance_ = new Type60Message();
  Type61Message::default_instance_ = new Type61Message();
  Type62Message::default_instance_ = new Type62Message();
  Type63Message::default_instance_ = new Type63Message();
  Type64Message::default_instance_ = new Type64Message();
  Type65Message::default_instance_ = new Type65Message();
  Type66Message::default_instance_ = new Type66Message();
  Type67Message::default_instance_ = new Type67Message();
  Type68Message::default_instance_ = new Type68Message();
  Type69Message::default_instance_ = new Type69Message();
  Type70Message::default_instance_ = new Type70Message();
  Type71Message::default_instance_ = new Type71Message();
  Type72Message::default_instance_ = new Type72Message();
  Type73Message::default_instance_ = new Type73Message();
  Type74Message::default_instance_ = new Type74Message();
  Type75Message::default_instance_ = new Type75Message();
  Type76Message::default_instance_ = new Type76Message();
  Type77Message::default_instance_ = new Type77Message();
  Type78Message::default_instance_ = new Type78Message();
  Type79Message::default_instance_ = new Type79Message();
  Type80Message::default_instance_ = new Type80Message();
  Type81Message::default_instance_ = new Type81Message();
  Type82Message::default_instance_ = new Type82Message();
  Type83Message::default_instance_ = new Type83Message();
  Type84Message::default_instance_ = new Type84Message();
  Type85Message::default_instance_ = new Type85Message();
  Type86Message::default_instance_ = new Type86Message();
  Type87Message::default_instance_ = new Type87Message();
  Type88Message::default_instance_ = new Type88Message();
  Type89Message::default_instance_ = new Type89Message();
  Type90Message::default_instance_ = new Type90Message();
  Type91Message::default_instance_ = new Type91Message();
  Type92Message::default_instance_ = new Type92Message();
  Type93Message::default_instance_ = new Type93Message();
  Type94Message::default_instance_ = new Type94Message();
  Type95Message::default_instance_ = new Type95Message();
  Type96Message::default_instance_ = new Type96Message();
  Type97Message::default_instance_ = new Type97Message();
  Type98Message::default_instance_ = new Type98Message();
  Type99Message::default_instance_ = new Type99Message();
  Type100Message::default_instance_ = new Type100Message();
  Type101Message::default_instance_ = new Type101Message();
  Type102Message::default_instance_ = new Type102Message();
  Type103Message::default_instance_ = new Type103Message();
  Type104Message::default_instance_ = new Type104Message();
  Type105Message::default_instance_ = new Type105Message();
  Type106Message::default_instance_ = new Type106Message();
  Type107Message::default_instance_ = new Type107Message();
  Type108Message::default_instance_ = new Type108Message();
  Type109Message::default_instance_ = new Type109Message();
  Type110Message::default_instance_ = new Type110Message();
  Type111Message::default_instance_ = new Type111Message();
  Type112Message::default_instance_ = new Type112Message();
  Type113Message::default_instance_ = new Type113Message();
  Type114Message::default_instance_ = new Type114Message();
  Type115Message::default_instance_ = new Type115Message();
  Type116Message::default_instance_ = new Type116Message();
  Type117Message::default_instance_ = new Type117Message();
  Type118Message::default_instance_ = new Type118Message();
  Type119Message::default_instance_ = new Type119Message();
  Type120Message::default_instance_ = new Type120Message();
  Type121Message::default_instance_ = new Type121Message();
  Type122Message::default_instance_ = new Type122Message();
  Type123Message::default_instance_ = new Type123Message();
  Type124Message::default_instance_ = new Type124Message();
  Type125Message::default_instance_ = new Type125Message();
  Type126Message::default_instance_ = new Type126Message();
  Type127Message::default_instance_ = new Type127Message();
  Type128Message::default_instance_ = new Type128Message();
  Type129Message::default_instance_ = new Type129Message();
  Type130Message::default_instance_ = new Type130Message();
  Type131Message::default_instance_ = new Type131Message();
  Type132Message::default_instance_ = new Type132Message();
  Type133Message::default_instance_ = new Type133Message();
  Type134Message::default_instance_ = new Type134Message();
  Type135Message::default_instance_ = new Type135Message();
  Type136Message::default_instance_ = new Type136Message();
  Type137Message::default_instance_ = new Type137Message();
  Type138Message::default_instance_ = new Type138Message();
  Type139Message::default_instance_ = new Type139Message();
  Type140Message::default_instance_ = new Type140Message();
  Type141Message::default_instance_ = new Type141Message();
  Type142Message::default_instance_ = new Type142Message();
  Type143Message::default_instance_ = new Type143Message();
  Type144Message::default_instance_ = new Type144Message();
  Type145Message::default_instance_ = new Type145Message();
  Type146Message::default_instance_ = new Type146Message();
  Type147Message::default_instance_ = new Type147Message();
  Type148Message::default_instance_ = new Type148Message();
  Type149Message::default_instance_ = new Type149Message();
  Type150Message::default_instance_ = new Type150Message();
  Type151Message::default_instance_ = new Type151Message();
  Type152Message::default_instance_ = new Type152Message();
  Type153Message::default_instance_ = new Type153Message();
  Type154Message::default_instance_ = new Type154Message();
  Type155Message::default_instance_ = new Type155Message();
  Type156Message::default_instance_ = new Type156Message();
  Type157Message::default_instance_ = new Type157Message();
  Type158Message::default_instance_ = new Type158Message();
  Type159Message::default_instance_ = new Type159Message();
  Type160Message::default_instance_ = new Type160Message();
  Type161Message::default_instance_ = new Type161Message();
  Type162Message::default_instance_ = new Type162Message();
  Type163Message::default_instance_ = new Type163Message();
  Type164Message::default_instance_ = new Type164Message();
  Type165Message::default_instance_ = new Type165Message();
  Type166Message::default_instance_ = new Type166Message();
  Type167Message::default_instance_ = new Type167Message();
  Type168Message::default_instance_ = new Type168Message();
  Type169Message::default_instance_ = new Type169Message();
  Type170Message::default_instance_ = new Type170Message();
  Type171Message::default_instance_ = new Type171Message();
  Type172Message::default_instance_ = new Type172Message();
  Type173Message::default_instance_ = new Type173Message();
  Type174Message::default_instance_ = new Type174Message();
  Type175Message::default_instance_ = new Type175Message();
  Type176Message::default_instance_ = new Type176Message();
  Type177Message::default_instance_ = new Type177Message();
  Type178Message::default_instance_ = new Type178Message();
  Type179Message::default_instance_ = new Type179Message();
  Type180Message::default_instance_ = new Type180Message();
  Type181Message::default_instance_ = new Type181Message();
  Type182Message::default_instance_ = new Type182Message();
  Type183Message::default_instance_ = new Type183Message();
  Type184Message::default_instance_ = new Type184Message();
  Type185Message::default_instance_ = new Type185Message();
  Type186Message::default_instance_ = new Type186Message();
  Type187Message::default_instance_ = new Type187Message();
  Type188Message::default_instance_ = new Type188Message();
  Type189Message::default_instance_ = new Type189Message();
  Type190Message::default_instance_ = new Type190Message();
  Type191Message::default_instance_ = new Type191Message();
  Type192Message::default_instance_ = new Type192Message();
  Type193Message::default_instance_ = new Type193Message();
  Type194Message::default_instance_ = new Type194Message();
  Type195Message::default_instance_ = new Type195Message();
  Type196Message::default_instance_ = new Type196Message();
  Type197Message::default_instance_ = new Type197Message();
  Type198Message::default_instance_ = new Type198Message();
  Type199Message::default_instance_ = new Type199Message();
  Type200Message::default_instance_ = new Type200Message();
  Type201Message::default_instance_ = new Type201Message();
  Type202Message::default_instance_ = new Type202Message();
  Type203Message::default_instance_ = new Type203Message();
  Type204Message::default_instance_ = new Type204Message();
  Type205Message::default_instance_ = new Type205Message();
  Type206Message::default_instance_ = new Type206Message();
  Type207Message::default_instance_ = new Type207Message();
  Type208Message::default_instance_ = new Type208Message();
  Type209Message::default_instance_ = new Type209Message();
  Type210Message::default_instance_ = new Type210Message();
  Type211Message::default_instance_ = new Type211Message();
  Type212Message::default_instance_ = new Type212Message();
  Type213Message::default_instance_ = new Type213Message();
  Type214Message::default_instance_ = new Type214Message();
  Type215Message::default_instance_ = new Type215Message();
  Type216Message::default_instance_ = new Type216Message();
  Type217Message::default_instance_ = new Type217Message();
  Type218Message::default_instance_ = new Type218Message();
  Type219Message::default_instance_ = new Type219Message();
  Type220Message::default_instance_ = new Type220Message();
  Type221Message::default_instance_ = new Type221Message();
  Type222Message::default_instance_ = new Type222Message();
  Type223Message::default_instance_ = new Type223Message();
  Type224Message::default_instance_ = new Type224Message();
  Type225Message::default_instance_ = new Type225Message();
  Type226Message::default_instance_ = new Type226Message();
  Type227Message::default_instance_ = new Type227Message();
  Type228Message::default_instance_ = new Type228Message();
  Type229Message::default_instance_ = new Type229Message();
  Type230Message::default_instance_ = new Type230Message();
  Type231Message::default_instance_ = new Type231Message();
  Type232Message::default_instance_ = new Type232Message();
  Type233Message::default_instance_ = new Type233Message();
  Type234Message::default_instance_ = new Type234Message();
  Type235Message::default_instance_ = new Type235Message();
  Type236Message::default_instance_ = new Type236Message();
  Type237Message::default_instance_ = new Type237Message();
  Type238Message::default_instance_ = new Type238Message();
  Type239Message::default_instance_ = new Type239Message();
  Type240Message::default_instance_ = new Type240Message();
  Type241Message::default_instance_ = new Type241Message();
  Type242Message::default_instance_ = new Type242Message();
  Type243Message::default_instance_ = new Type243Message();
  Type244Message::default_instance_ = new Type244Message();
  Type245Message::default_instance_ = new Type245Message();
  Type246Message::default_instance_ = new Type246Message();
  Type247Message::default_instance_ = new Type247Message();
  Type248Message::default_instance_ = new Type248Message();
  Type249Message::default_instance_ = new Type249Message();
  Type250Message::default_instance_ = new Type250Message();
  Type251Message::default_instance_ = new Type251Message();
  Type252Message::default_instance_ = new Type252Message();
  Type253Message::default_instance_ = new Type253Message();
  Type254Message::default_instance_ = new Type254Message();
  Type255Message::default_instance_ = new Type255Message();
  Type256Message::default_instance_ = new Type256Message();
  Type1Message::default_instance_->InitAsDefaultInstance();
  Type2Message::default_instance_->InitAsDefaultInstance();
  Type3Message::default_instance_->InitAsDefaultInstance();
  Type4Message::default_instance_->InitAsDefaultInstance();
  Type5Message::default_instance_->InitAsDefaultInstance();
  Type6Message::default_instance_->InitAsDefaultInstance();
  Type7Message::default_instance_->InitAsDefaultInstance();
  Type8Message::default_instance_->InitAsDefaultInstance();
  Type9Message::default_instance_->InitAsDefaultInstance();
  SimpleClientMessage::default_instance_->InitAsDefaultInstance();
  Type10Message::default_instance_->InitAsDefaultInstance();
  Type11Message::default_instance_->InitAsDefaultInstance();
  Type12Message::default_instance_->InitAsDefaultInstance();
  Type13Message::default_instance_->InitAsDefaultInstance();
  Type14Message::default_instance_->InitAsDefaultInstance();
  Type15Message::default_instance_->InitAsDefaultInstance();
  Type16Message::default_instance_->InitAsDefaultInstance();
  Type17Message::default_instance_->InitAsDefaultInstance();
  Type18Message::default_instance_->InitAsDefaultInstance();
  Type19Message::default_instance_->InitAsDefaultInstance();
  Type20Message::default_instance_->InitAsDefaultInstance();
  Type21Message::default_instance_->InitAsDefaultInstance();
  Type22Message::default_instance_->InitAsDefaultInstance();
  Type23Message::default_instance_->InitAsDefaultInstance();
  Type24Message::default_instance_->InitAsDefaultInstance();
  Type25Message::default_instance_->InitAsDefaultInstance();
  Type26Message::default_instance_->InitAsDefaultInstance();
  Type27Message::default_instance_->InitAsDefaultInstance();
  Type28Message::default_instance_->InitAsDefaultInstance();
  Type29Message::default_instance_->InitAsDefaultInstance();
  Type30Message::default_instance_->InitAsDefaultInstance();
  Type31Message::default_instance_->InitAsDefaultInstance();
  Type32Message::default_instance_->InitAsDefaultInstance();
  Type33Message::default_instance_->InitAsDefaultInstance();
  Type34Message::default_instance_->InitAsDefaultInstance();
  Type35Message::default_instance_->InitAsDefaultInstance();
  Type36Message::default_instance_->InitAsDefaultInstance();
  Type37Message::default_instance_->InitAsDefaultInstance();
  Type38Message::default_instance_->InitAsDefaultInstance();
  Type39Message::default_instance_->InitAsDefaultInstance();
  Type40Message::default_instance_->InitAsDefaultInstance();
  Type41Message::default_instance_->InitAsDefaultInstance();
  Type42Message::default_instance_->InitAsDefaultInstance();
  Type43Message::default_instance_->InitAsDefaultInstance();
  Type44Message::default_instance_->InitAsDefaultInstance();
  Type45Message::default_instance_->InitAsDefaultInstance();
  Type46Message::default_instance_->InitAsDefaultInstance();
  Type47Message::default_instance_->InitAsDefaultInstance();
  Type48Message::default_instance_->InitAsDefaultInstance();
  Type49Message::default_instance_->InitAsDefaultInstance();
  Type50Message::default_instance_->InitAsDefaultInstance();
  Type51Message::default_instance_->InitAsDefaultInstance();
  Type52Message::default_instance_->InitAsDefaultInstance();
  Type53Message::default_instance_->InitAsDefaultInstance();
  Type54Message::default_instance_->InitAsDefaultInstance();
  Type55Message::default_instance_->InitAsDefaultInstance();
  Type56Message::default_instance_->InitAsDefaultInstance();
  Type57Message::default_instance_->InitAsDefaultInstance();
  Type58Message::default_instance_->InitAsDefaultInstance();
  Type59Message::default_instance_->InitAsDefaultInstance();
  Type60Message::default_instance_->InitAsDefaultInstance();
  Type61Message::default_instance_->InitAsDefaultInstance();
  Type62Message::default_instance_->InitAsDefaultInstance();
  Type63Message::default_instance_->InitAsDefaultInstance();
  Type64Message::default_instance_->InitAsDefaultInstance();
  Type65Message::default_instance_->InitAsDefaultInstance();
  Type66Message::default_instance_->InitAsDefaultInstance();
  Type67Message::default_instance_->InitAsDefaultInstance();
  Type68Message::default_instance_->InitAsDefaultInstance();
  Type69Message::default_instance_->InitAsDefaultInstance();
  Type70Message::default_instance_->InitAsDefaultInstance();
  Type71Message::default_instance_->InitAsDefaultInstance();
  Type72Message::default_instance_->InitAsDefaultInstance();
  Type73Message::default_instance_->InitAsDefaultInstance();
  Type74Message::default_instance_->InitAsDefaultInstance();
  Type75Message::default_instance_->InitAsDefaultInstance();
  Type76Message::default_instance_->InitAsDefaultInstance();
  Type77Message::default_instance_->InitAsDefaultInstance();
  Type78Message::default_instance_->InitAsDefaultInstance();
  Type79Message::default_instance_->InitAsDefaultInstance();
  Type80Message::default_instance_->InitAsDefaultInstance();
  Type81Message::default_instance_->InitAsDefaultInstance();
  Type82Message::default_instance_->InitAsDefaultInstance();
  Type83Message::default_instance_->InitAsDefaultInstance();
  Type84Message::default_instance_->InitAsDefaultInstance();
  Type85Message::default_instance_->InitAsDefaultInstance();
  Type86Message::default_instance_->InitAsDefaultInstance();
  Type87Message::default_instance_->InitAsDefaultInstance();
  Type88Message::default_instance_->InitAsDefaultInstance();
  Type89Message::default_instance_->InitAsDefaultInstance();
  Type90Message::default_instance_->InitAsDefaultInstance();
  Type91Message::default_instance_->InitAsDefaultInstance();
  Type92Message::default_instance_->InitAsDefaultInstance();
  Type93Message::default_instance_->InitAsDefaultInstance();
  Type94Message::default_instance_->InitAsDefaultInstance();
  Type95Message::default_instance_->InitAsDefaultInstance();
  Type96Message::default_instance_->InitAsDefaultInstance();
  Type97Message::default_instance_->InitAsDefaultInstance();
  Type98Message::default_instance_->InitAsDefaultInstance();
  Type99Message::default_instance_->InitAsDefaultInstance();
  Type100Message::default_instance_->InitAsDefaultInstance();
  Type101Message::default_instance_->InitAsDefaultInstance();
  Type102Message::default_instance_->InitAsDefaultInstance();
  Type103Message::default_instance_->InitAsDefaultInstance();
  Type104Message::default_instance_->InitAsDefaultInstance();
  Type105Message::default_instance_->InitAsDefaultInstance();
  Type106Message::default_instance_->InitAsDefaultInstance();
  Type107Message::default_instance_->InitAsDefaultInstance();
  Type108Message::default_instance_->InitAsDefaultInstance();
  Type109Message::default_instance_->InitAsDefaultInstance();
  Type110Message::default_instance_->InitAsDefaultInstance();
  Type111Message::default_instance_->InitAsDefaultInstance();
  Type112Message::default_instance_->InitAsDefaultInstance();
  Type113Message::default_instance_->InitAsDefaultInstance();
  Type114Message::default_instance_->InitAsDefaultInstance();
  Type115Message::default_instance_->InitAsDefaultInstance();
  Type116Message::default_instance_->InitAsDefaultInstance();
  Type117Message::default_instance_->InitAsDefaultInstance();
  Type118Message::default_instance_->InitAsDefaultInstance();
  Type119Message::default_instance_->InitAsDefaultInstance();
  Type120Message::default_instance_->InitAsDefaultInstance();
  Type121Message::default_instance_->InitAsDefaultInstance();
  Type122Message::default_instance_->InitAsDefaultInstance();
  Type123Message::default_instance_->InitAsDefaultInstance();
  Type124Message::default_instance_->InitAsDefaultInstance();
  Type125Message::default_instance_->InitAsDefaultInstance();
  Type126Message::default_instance_->InitAsDefaultInstance();
  Type127Message::default_instance_->InitAsDefaultInstance();
  Type128Message::default_instance_->InitAsDefaultInstance();
  Type129Message::default_instance_->InitAsDefaultInstance();
  Type130Message::default_instance_->InitAsDefaultInstance();
  Type131Message::default_instance_->InitAsDefaultInstance();
  Type132Message::default_instance_->InitAsDefaultInstance();
  Type133Message::default_instance_->InitAsDefaultInstance();
  Type134Message::default_instance_->InitAsDefaultInstance();
  Type135Message::default_instance_->InitAsDefaultInstance();
  Type136Message::default_instance_->InitAsDefaultInstance();
  Type137Message::default_instance_->InitAsDefaultInstance();
  Type138Message::default_instance_->InitAsDefaultInstance();
  Type139Message::default_instance_->InitAsDefaultInstance();
  Type140Message::default_instance_->InitAsDefaultInstance();
  Type141Message::default_instance_->InitAsDefaultInstance();
  Type142Message::default_instance_->InitAsDefaultInstance();
  Type143Message::default_instance_->InitAsDefaultInstance();
  Type144Message::default_instance_->InitAsDefaultInstance();
  Type145Message::default_instance_->InitAsDefaultInstance();
  Type146Message::default_instance_->InitAsDefaultInstance();
  Type147Message::default_instance_->InitAsDefaultInstance();
  Type148Message::default_instance_->InitAsDefaultInstance();
  Type149Message::default_instance_->InitAsDefaultInstance();
  Type150Message::default_instance_->InitAsDefaultInstance();
  Type151Message::default_instance_->InitAsDefaultInstance();
  Type152Message::default_instance_->InitAsDefaultInstance();
  Type153Message::default_instance_->InitAsDefaultInstance();
  Type154Message::default_instance_->InitAsDefaultInstance();
  Type155Message::default_instance_->InitAsDefaultInstance();
  Type156Message::default_instance_->InitAsDefaultInstance();
  Type157Message::default_instance_->InitAsDefaultInstance();
  Type158Message::default_instance_->InitAsDefaultInstance();
  Type159Message::default_instance_->InitAsDefaultInstance();
  Type160Message::default_instance_->InitAsDefaultInstance();
  Type161Message::default_instance_->InitAsDefaultInstance();
  Type162Message::default_instance_->InitAsDefaultInstance();
  Type163Message::default_instance_->InitAsDefaultInstance();
  Type164Message::default_instance_->InitAsDefaultInstance();
  Type165Message::default_instance_->InitAsDefaultInstance();
  Type166Message::default_instance_->InitAsDefaultInstance();
  Type167Message::default_instance_->InitAsDefaultInstance();
  Type168Message::default_instance_->InitAsDefaultInstance();
  Type169Message::default_instance_->InitAsDefaultInstance();
  Type170Message::default_instance_->InitAsDefaultInstance();
  Type171Message::default_instance_->InitAsDefaultInstance();
  Type172Message::default_instance_->InitAsDefaultInstance();
  Type173Message::default_instance_->InitAsDefaultInstance();
  Type174Message::default_instance_->InitAsDefaultInstance();
  Type175Message::default_instance_->InitAsDefaultInstance();
  Type176Message::default_instance_->InitAsDefaultInstance();
  Type177Message::default_instance_->InitAsDefaultInstance();
  Type178Message::default_instance_->InitAsDefaultInstance();
  Type179Message::default_instance_->InitAsDefaultInstance();
  Type180Message::default_instance_->InitAsDefaultInstance();
  Type181Message::default_instance_->InitAsDefaultInstance();
  Type182Message::default_instance_->InitAsDefaultInstance();
  Type183Message::default_instance_->InitAsDefaultInstance();
  Type184Message::default_instance_->InitAsDefaultInstance();
  Type185Message::default_instance_->InitAsDefaultInstance();
  Type186Message::default_instance_->InitAsDefaultInstance();
  Type187Message::default_instance_->InitAsDefaultInstance();
  Type188Message::default_instance_->InitAsDefaultInstance();
  Type189Message::default_instance_->InitAsDefaultInstance();
  Type190Message::default_instance_->InitAsDefaultInstance();
  Type191Message::default_instance_->InitAsDefaultInstance();
  Type192Message::default_instance_->InitAsDefaultInstance();
  Type193Message::default_instance_->InitAsDefaultInstance();
  Type194Message::default_instance_->InitAsDefaultInstance();
  Type195Message::default_instance_->InitAsDefaultInstance();
  Type196Message::default_instance_->InitAsDefaultInstance();
  Type197Message::default_instance_->InitAsDefaultInstance();
  Type198Message::default_instance_->InitAsDefaultInstance();
  Type199Message::default_instance_->InitAsDefaultInstance();
  Type200Message::default_instance_->InitAsDefaultInstance();
  Type201Message::default_instance_->InitAsDefaultInstance();
  Type202Message::default_instance_->InitAsDefaultInstance();
  Type203Message::default_instance_->InitAsDefaultInstance();
  Type204Message::default_instance_->InitAsDefaultInstance();
  Type205Message::default_instance_->InitAsDefaultInstance();
  Type206Message::default_instance_->InitAsDefaultInstance();
  Type207Message::default_instance_->InitAsDefaultInstance();
  Type208Message::default_instance_->InitAsDefaultInstance();
  Type209Message::default_instance_->InitAsDefaultInstance();
  Type210Message::default_instance_->InitAsDefaultInstance();
  Type211Message::default_instance_->InitAsDefaultInstance();
  Type212Message::default_instance_->InitAsDefaultInstance();
  Type213Message::default_instance_->InitAsDefaultInstance();
  Type214Message::default_instance_->InitAsDefaultInstance();
  Type215Message::default_instance_->InitAsDefaultInstance();
  Type216Message::default_instance_->InitAsDefaultInstance();
  Type217Message::default_instance_->InitAsDefaultInstance();
  Type218Message::default_instance_->InitAsDefaultInstance();
  Type219Message::default_instance_->InitAsDefaultInstance();
  Type220Message::default_instance_->InitAsDefaultInstance();
  Type221Message::default_instance_->InitAsDefaultInstance();
  Type222Message::default_instance_->InitAsDefaultInstance();
  Type223Message::default_instance_->InitAsDefaultInstance();
  Type224Message::default_instance_->InitAsDefaultInstance();
  Type225Message::default_instance_->InitAsDefaultInstance();
  Type226Message::default_instance_->InitAsDefaultInstance();
  Type227Message::default_instance_->InitAsDefaultInstance();
  Type228Message::default_instance_->InitAsDefaultInstance();
  Type229Message::default_instance_->InitAsDefaultInstance();
  Type230Message::default_instance_->InitAsDefaultInstance();
  Type231Message::default_instance_->InitAsDefaultInstance();
  Type232Message::default_instance_->InitAsDefaultInstance();
  Type233Message::default_instance_->InitAsDefaultInstance();
  Type234Message::default_instance_->InitAsDefaultInstance();
  Type235Message::default_instance_->InitAsDefaultInstance();
  Type236Message::default_instance_->InitAsDefaultInstance();
  Type237Message::default_instance_->InitAsDefaultInstance();
  Type238Message::default_instance_->InitAsDefaultInstance();
  Type239Message::default_instance_->InitAsDefaultInstance();
  Type240Message::default_instance_->InitAsDefaultInstance();
  Type241Message::default_instance_->InitAsDefaultInstance();
  Type242Message::default_instance_->InitAsDefaultInstance();
  Type243Message::default_instance_->InitAsDefaultInstance();
  Type244Message::default_instance_->InitAsDefaultInstance();
  Type245Message::default_instance_->InitAsDefaultInstance();
  Type246Message::default_instance_->InitAsDefaultInstance();
  Type247Message::default_instance_->InitAsDefaultInstance();
  Type248Message::default_instance_->InitAsDefaultInstance();
  Type249Message::default_instance_->InitAsDefaultInstance();
  Type250Message::default_instance_->InitAsDefaultInstance();
  Type251Message::default_instance_->InitAsDefaultInstance();
  Type252Message::default_instance_->InitAsDefaultInstance();
  Type253Message::default_instance_->InitAsDefaultInstance();
  Type254Message::default_instance_->InitAsDefaultInstance();
  Type255Message::default_instance_->InitAsDefaultInstance();
  Type256Message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2eproto {
  StaticDescriptorInitializer_messages_2eproto() {
    protobuf_AddDesc_messages_2eproto();
  }
} static_descriptor_initializer_messages_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type1Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type1Message::Type1Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type1Message)
}

void Type1Message::InitAsDefaultInstance() {
}

Type1Message::Type1Message(const Type1Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type1Message)
}

void Type1Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type1Message::~Type1Message() {
  // @@protoc_insertion_point(destructor:tests.Type1Message)
  SharedDtor();
}

void Type1Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type1Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type1Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type1Message_descriptor_;
}

const Type1Message& Type1Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type1Message* Type1Message::default_instance_ = NULL;

Type1Message* Type1Message::New(::google::protobuf::Arena* arena) const {
  Type1Message* n = new Type1Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type1Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type1Message)
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type1Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type1Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type1Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type1Message)
  return false;
#undef DO_
}

void Type1Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type1Message)
  // optional int32 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type1Message)
}

::google::protobuf::uint8* Type1Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type1Message)
  // optional int32 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type1Message)
  return target;
}

int Type1Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type1Message)
  int total_size = 0;

  // optional int32 data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type1Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type1Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type1Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type1Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type1Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type1Message)
    MergeFrom(*source);
  }
}

void Type1Message::MergeFrom(const Type1Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type1Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type1Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type1Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type1Message::CopyFrom(const Type1Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type1Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type1Message::IsInitialized() const {

  return true;
}

void Type1Message::Swap(Type1Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type1Message::InternalSwap(Type1Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type1Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type1Message_descriptor_;
  metadata.reflection = Type1Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type1Message

// optional int32 data = 1;
bool Type1Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type1Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type1Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type1Message::clear_data() {
  data_ = 0;
  clear_has_data();
}
 ::google::protobuf::int32 Type1Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type1Message.data)
  return data_;
}
 void Type1Message::set_data(::google::protobuf::int32 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:tests.Type1Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type2Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type2Message::Type2Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type2Message)
}

void Type2Message::InitAsDefaultInstance() {
}

Type2Message::Type2Message(const Type2Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type2Message)
}

void Type2Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type2Message::~Type2Message() {
  // @@protoc_insertion_point(destructor:tests.Type2Message)
  SharedDtor();
}

void Type2Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type2Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type2Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type2Message_descriptor_;
}

const Type2Message& Type2Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type2Message* Type2Message::default_instance_ = NULL;

Type2Message* Type2Message::New(::google::protobuf::Arena* arena) const {
  Type2Message* n = new Type2Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type2Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type2Message)
  data_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type2Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type2Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type2Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type2Message)
  return false;
#undef DO_
}

void Type2Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type2Message)
  // optional int64 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type2Message)
}

::google::protobuf::uint8* Type2Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type2Message)
  // optional int64 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type2Message)
  return target;
}

int Type2Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type2Message)
  int total_size = 0;

  // optional int64 data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type2Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type2Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type2Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type2Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type2Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type2Message)
    MergeFrom(*source);
  }
}

void Type2Message::MergeFrom(const Type2Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type2Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type2Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type2Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type2Message::CopyFrom(const Type2Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type2Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type2Message::IsInitialized() const {

  return true;
}

void Type2Message::Swap(Type2Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type2Message::InternalSwap(Type2Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type2Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type2Message_descriptor_;
  metadata.reflection = Type2Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type2Message

// optional int64 data = 1;
bool Type2Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type2Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type2Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type2Message::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
  clear_has_data();
}
 ::google::protobuf::int64 Type2Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type2Message.data)
  return data_;
}
 void Type2Message::set_data(::google::protobuf::int64 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:tests.Type2Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type3Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type3Message::Type3Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type3Message)
}

void Type3Message::InitAsDefaultInstance() {
}

Type3Message::Type3Message(const Type3Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type3Message)
}

void Type3Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type3Message::~Type3Message() {
  // @@protoc_insertion_point(destructor:tests.Type3Message)
  SharedDtor();
}

void Type3Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type3Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type3Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type3Message_descriptor_;
}

const Type3Message& Type3Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type3Message* Type3Message::default_instance_ = NULL;

Type3Message* Type3Message::New(::google::protobuf::Arena* arena) const {
  Type3Message* n = new Type3Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type3Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type3Message)
  data_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type3Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type3Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type3Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type3Message)
  return false;
#undef DO_
}

void Type3Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type3Message)
  // optional bool data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type3Message)
}

::google::protobuf::uint8* Type3Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type3Message)
  // optional bool data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type3Message)
  return target;
}

int Type3Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type3Message)
  int total_size = 0;

  // optional bool data = 1;
  if (has_data()) {
    total_size += 1 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type3Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type3Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type3Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type3Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type3Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type3Message)
    MergeFrom(*source);
  }
}

void Type3Message::MergeFrom(const Type3Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type3Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type3Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type3Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type3Message::CopyFrom(const Type3Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type3Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type3Message::IsInitialized() const {

  return true;
}

void Type3Message::Swap(Type3Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type3Message::InternalSwap(Type3Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type3Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type3Message_descriptor_;
  metadata.reflection = Type3Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type3Message

// optional bool data = 1;
bool Type3Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type3Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type3Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type3Message::clear_data() {
  data_ = false;
  clear_has_data();
}
 bool Type3Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type3Message.data)
  return data_;
}
 void Type3Message::set_data(bool value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:tests.Type3Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type4Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type4Message::Type4Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type4Message)
}

void Type4Message::InitAsDefaultInstance() {
}

Type4Message::Type4Message(const Type4Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type4Message)
}

void Type4Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type4Message::~Type4Message() {
  // @@protoc_insertion_point(destructor:tests.Type4Message)
  SharedDtor();
}

void Type4Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type4Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type4Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type4Message_descriptor_;
}

const Type4Message& Type4Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type4Message* Type4Message::default_instance_ = NULL;

Type4Message* Type4Message::New(::google::protobuf::Arena* arena) const {
  Type4Message* n = new Type4Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type4Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type4Message)
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type4Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type4Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float data = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type4Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type4Message)
  return false;
#undef DO_
}

void Type4Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type4Message)
  // optional float data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type4Message)
}

::google::protobuf::uint8* Type4Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type4Message)
  // optional float data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type4Message)
  return target;
}

int Type4Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type4Message)
  int total_size = 0;

  // optional float data = 1;
  if (has_data()) {
    total_size += 1 + 4;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type4Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type4Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type4Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type4Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type4Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type4Message)
    MergeFrom(*source);
  }
}

void Type4Message::MergeFrom(const Type4Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type4Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type4Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type4Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type4Message::CopyFrom(const Type4Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type4Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type4Message::IsInitialized() const {

  return true;
}

void Type4Message::Swap(Type4Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type4Message::InternalSwap(Type4Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type4Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type4Message_descriptor_;
  metadata.reflection = Type4Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type4Message

// optional float data = 1;
bool Type4Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type4Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type4Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type4Message::clear_data() {
  data_ = 0;
  clear_has_data();
}
 float Type4Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type4Message.data)
  return data_;
}
 void Type4Message::set_data(float value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:tests.Type4Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type5Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type5Message::Type5Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type5Message)
}

void Type5Message::InitAsDefaultInstance() {
}

Type5Message::Type5Message(const Type5Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type5Message)
}

void Type5Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type5Message::~Type5Message() {
  // @@protoc_insertion_point(destructor:tests.Type5Message)
  SharedDtor();
}

void Type5Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type5Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type5Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type5Message_descriptor_;
}

const Type5Message& Type5Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type5Message* Type5Message::default_instance_ = NULL;

Type5Message* Type5Message::New(::google::protobuf::Arena* arena) const {
  Type5Message* n = new Type5Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type5Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type5Message)
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type5Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type5Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double data = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type5Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type5Message)
  return false;
#undef DO_
}

void Type5Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type5Message)
  // optional double data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type5Message)
}

::google::protobuf::uint8* Type5Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type5Message)
  // optional double data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type5Message)
  return target;
}

int Type5Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type5Message)
  int total_size = 0;

  // optional double data = 1;
  if (has_data()) {
    total_size += 1 + 8;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type5Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type5Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type5Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type5Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type5Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type5Message)
    MergeFrom(*source);
  }
}

void Type5Message::MergeFrom(const Type5Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type5Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type5Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type5Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type5Message::CopyFrom(const Type5Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type5Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type5Message::IsInitialized() const {

  return true;
}

void Type5Message::Swap(Type5Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type5Message::InternalSwap(Type5Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type5Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type5Message_descriptor_;
  metadata.reflection = Type5Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type5Message

// optional double data = 1;
bool Type5Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type5Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type5Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type5Message::clear_data() {
  data_ = 0;
  clear_has_data();
}
 double Type5Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type5Message.data)
  return data_;
}
 void Type5Message::set_data(double value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:tests.Type5Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type6Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type6Message::Type6Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type6Message)
}

void Type6Message::InitAsDefaultInstance() {
}

Type6Message::Type6Message(const Type6Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type6Message)
}

void Type6Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type6Message::~Type6Message() {
  // @@protoc_insertion_point(destructor:tests.Type6Message)
  SharedDtor();
}

void Type6Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type6Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type6Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type6Message_descriptor_;
}

const Type6Message& Type6Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type6Message* Type6Message::default_instance_ = NULL;

Type6Message* Type6Message::New(::google::protobuf::Arena* arena) const {
  Type6Message* n = new Type6Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type6Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type6Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type6Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type6Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type6Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type6Message)
  return false;
#undef DO_
}

void Type6Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type6Message)
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type6Message)
}

::google::protobuf::uint8* Type6Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type6Message)
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type6Message)
  return target;
}

int Type6Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type6Message)
  int total_size = 0;

  // optional bytes data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type6Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type6Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type6Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type6Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type6Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type6Message)
    MergeFrom(*source);
  }
}

void Type6Message::MergeFrom(const Type6Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type6Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type6Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type6Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type6Message::CopyFrom(const Type6Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type6Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type6Message::IsInitialized() const {

  return true;
}

void Type6Message::Swap(Type6Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type6Message::InternalSwap(Type6Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type6Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type6Message_descriptor_;
  metadata.reflection = Type6Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type6Message

// optional bytes data = 1;
bool Type6Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type6Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type6Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type6Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type6Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type6Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type6Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type6Message.data)
}
 void Type6Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type6Message.data)
}
 void Type6Message::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type6Message.data)
}
 ::std::string* Type6Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type6Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type6Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type6Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type6Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type6Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type7Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type7Message::Type7Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type7Message)
}

void Type7Message::InitAsDefaultInstance() {
}

Type7Message::Type7Message(const Type7Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type7Message)
}

void Type7Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type7Message::~Type7Message() {
  // @@protoc_insertion_point(destructor:tests.Type7Message)
  SharedDtor();
}

void Type7Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type7Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type7Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type7Message_descriptor_;
}

const Type7Message& Type7Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type7Message* Type7Message::default_instance_ = NULL;

Type7Message* Type7Message::New(::google::protobuf::Arena* arena) const {
  Type7Message* n = new Type7Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type7Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type7Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type7Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type7Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type7Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type7Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type7Message)
  return false;
#undef DO_
}

void Type7Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type7Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type7Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type7Message)
}

::google::protobuf::uint8* Type7Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type7Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type7Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type7Message)
  return target;
}

int Type7Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type7Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type7Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type7Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type7Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type7Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type7Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type7Message)
    MergeFrom(*source);
  }
}

void Type7Message::MergeFrom(const Type7Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type7Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type7Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type7Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type7Message::CopyFrom(const Type7Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type7Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type7Message::IsInitialized() const {

  return true;
}

void Type7Message::Swap(Type7Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type7Message::InternalSwap(Type7Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type7Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type7Message_descriptor_;
  metadata.reflection = Type7Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type7Message

// optional string data = 1;
bool Type7Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type7Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type7Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type7Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type7Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type7Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type7Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type7Message.data)
}
 void Type7Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type7Message.data)
}
 void Type7Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type7Message.data)
}
 ::std::string* Type7Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type7Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type7Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type7Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type7Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type7Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type8Message::kData1FieldNumber;
const int Type8Message::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type8Message::Type8Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type8Message)
}

void Type8Message::InitAsDefaultInstance() {
}

Type8Message::Type8Message(const Type8Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type8Message)
}

void Type8Message::SharedCtor() {
  _cached_size_ = 0;
  data1_ = 0;
  data2_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type8Message::~Type8Message() {
  // @@protoc_insertion_point(destructor:tests.Type8Message)
  SharedDtor();
}

void Type8Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type8Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type8Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type8Message_descriptor_;
}

const Type8Message& Type8Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type8Message* Type8Message::default_instance_ = NULL;

Type8Message* Type8Message::New(::google::protobuf::Arena* arena) const {
  Type8Message* n = new Type8Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type8Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type8Message)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Type8Message, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Type8Message*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(data2_, data1_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type8Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type8Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data1_)));
          set_has_data1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_data2;
        break;
      }

      // optional int64 data2 = 2;
      case 2: {
        if (tag == 16) {
         parse_data2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data2_)));
          set_has_data2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type8Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type8Message)
  return false;
#undef DO_
}

void Type8Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type8Message)
  // optional int32 data1 = 1;
  if (has_data1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data1(), output);
  }

  // optional int64 data2 = 2;
  if (has_data2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->data2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type8Message)
}

::google::protobuf::uint8* Type8Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type8Message)
  // optional int32 data1 = 1;
  if (has_data1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data1(), target);
  }

  // optional int64 data2 = 2;
  if (has_data2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->data2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type8Message)
  return target;
}

int Type8Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type8Message)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 data1 = 1;
    if (has_data1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data1());
    }

    // optional int64 data2 = 2;
    if (has_data2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->data2());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type8Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type8Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type8Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type8Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type8Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type8Message)
    MergeFrom(*source);
  }
}

void Type8Message::MergeFrom(const Type8Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type8Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data1()) {
      set_data1(from.data1());
    }
    if (from.has_data2()) {
      set_data2(from.data2());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type8Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type8Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type8Message::CopyFrom(const Type8Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type8Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type8Message::IsInitialized() const {

  return true;
}

void Type8Message::Swap(Type8Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type8Message::InternalSwap(Type8Message* other) {
  std::swap(data1_, other->data1_);
  std::swap(data2_, other->data2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type8Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type8Message_descriptor_;
  metadata.reflection = Type8Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type8Message

// optional int32 data1 = 1;
bool Type8Message::has_data1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type8Message::set_has_data1() {
  _has_bits_[0] |= 0x00000001u;
}
void Type8Message::clear_has_data1() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type8Message::clear_data1() {
  data1_ = 0;
  clear_has_data1();
}
 ::google::protobuf::int32 Type8Message::data1() const {
  // @@protoc_insertion_point(field_get:tests.Type8Message.data1)
  return data1_;
}
 void Type8Message::set_data1(::google::protobuf::int32 value) {
  set_has_data1();
  data1_ = value;
  // @@protoc_insertion_point(field_set:tests.Type8Message.data1)
}

// optional int64 data2 = 2;
bool Type8Message::has_data2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Type8Message::set_has_data2() {
  _has_bits_[0] |= 0x00000002u;
}
void Type8Message::clear_has_data2() {
  _has_bits_[0] &= ~0x00000002u;
}
void Type8Message::clear_data2() {
  data2_ = GOOGLE_LONGLONG(0);
  clear_has_data2();
}
 ::google::protobuf::int64 Type8Message::data2() const {
  // @@protoc_insertion_point(field_get:tests.Type8Message.data2)
  return data2_;
}
 void Type8Message::set_data2(::google::protobuf::int64 value) {
  set_has_data2();
  data2_ = value;
  // @@protoc_insertion_point(field_set:tests.Type8Message.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type9Message::kData1FieldNumber;
const int Type9Message::kData2FieldNumber;
const int Type9Message::kData3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type9Message::Type9Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type9Message)
}

void Type9Message::InitAsDefaultInstance() {
}

Type9Message::Type9Message(const Type9Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type9Message)
}

void Type9Message::SharedCtor() {
  _cached_size_ = 0;
  data1_ = 0;
  data2_ = 0;
  data3_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type9Message::~Type9Message() {
  // @@protoc_insertion_point(destructor:tests.Type9Message)
  SharedDtor();
}

void Type9Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type9Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type9Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type9Message_descriptor_;
}

const Type9Message& Type9Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type9Message* Type9Message::default_instance_ = NULL;

Type9Message* Type9Message::New(::google::protobuf::Arena* arena) const {
  Type9Message* n = new Type9Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type9Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type9Message)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Type9Message, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Type9Message*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(data1_, data3_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type9Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type9Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data1_)));
          set_has_data1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_data2;
        break;
      }

      // optional int32 data2 = 2;
      case 2: {
        if (tag == 16) {
         parse_data2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data2_)));
          set_has_data2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_data3;
        break;
      }

      // optional int32 data3 = 3;
      case 3: {
        if (tag == 24) {
         parse_data3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data3_)));
          set_has_data3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type9Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type9Message)
  return false;
#undef DO_
}

void Type9Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type9Message)
  // optional int32 data1 = 1;
  if (has_data1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data1(), output);
  }

  // optional int32 data2 = 2;
  if (has_data2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data2(), output);
  }

  // optional int32 data3 = 3;
  if (has_data3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->data3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type9Message)
}

::google::protobuf::uint8* Type9Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type9Message)
  // optional int32 data1 = 1;
  if (has_data1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data1(), target);
  }

  // optional int32 data2 = 2;
  if (has_data2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data2(), target);
  }

  // optional int32 data3 = 3;
  if (has_data3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->data3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type9Message)
  return target;
}

int Type9Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type9Message)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 data1 = 1;
    if (has_data1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data1());
    }

    // optional int32 data2 = 2;
    if (has_data2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data2());
    }

    // optional int32 data3 = 3;
    if (has_data3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data3());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type9Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type9Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type9Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type9Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type9Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type9Message)
    MergeFrom(*source);
  }
}

void Type9Message::MergeFrom(const Type9Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type9Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data1()) {
      set_data1(from.data1());
    }
    if (from.has_data2()) {
      set_data2(from.data2());
    }
    if (from.has_data3()) {
      set_data3(from.data3());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type9Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type9Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type9Message::CopyFrom(const Type9Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type9Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type9Message::IsInitialized() const {

  return true;
}

void Type9Message::Swap(Type9Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type9Message::InternalSwap(Type9Message* other) {
  std::swap(data1_, other->data1_);
  std::swap(data2_, other->data2_);
  std::swap(data3_, other->data3_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type9Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type9Message_descriptor_;
  metadata.reflection = Type9Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type9Message

// optional int32 data1 = 1;
bool Type9Message::has_data1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type9Message::set_has_data1() {
  _has_bits_[0] |= 0x00000001u;
}
void Type9Message::clear_has_data1() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type9Message::clear_data1() {
  data1_ = 0;
  clear_has_data1();
}
 ::google::protobuf::int32 Type9Message::data1() const {
  // @@protoc_insertion_point(field_get:tests.Type9Message.data1)
  return data1_;
}
 void Type9Message::set_data1(::google::protobuf::int32 value) {
  set_has_data1();
  data1_ = value;
  // @@protoc_insertion_point(field_set:tests.Type9Message.data1)
}

// optional int32 data2 = 2;
bool Type9Message::has_data2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Type9Message::set_has_data2() {
  _has_bits_[0] |= 0x00000002u;
}
void Type9Message::clear_has_data2() {
  _has_bits_[0] &= ~0x00000002u;
}
void Type9Message::clear_data2() {
  data2_ = 0;
  clear_has_data2();
}
 ::google::protobuf::int32 Type9Message::data2() const {
  // @@protoc_insertion_point(field_get:tests.Type9Message.data2)
  return data2_;
}
 void Type9Message::set_data2(::google::protobuf::int32 value) {
  set_has_data2();
  data2_ = value;
  // @@protoc_insertion_point(field_set:tests.Type9Message.data2)
}

// optional int32 data3 = 3;
bool Type9Message::has_data3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Type9Message::set_has_data3() {
  _has_bits_[0] |= 0x00000004u;
}
void Type9Message::clear_has_data3() {
  _has_bits_[0] &= ~0x00000004u;
}
void Type9Message::clear_data3() {
  data3_ = 0;
  clear_has_data3();
}
 ::google::protobuf::int32 Type9Message::data3() const {
  // @@protoc_insertion_point(field_get:tests.Type9Message.data3)
  return data3_;
}
 void Type9Message::set_data3(::google::protobuf::int32 value) {
  set_has_data3();
  data3_ = value;
  // @@protoc_insertion_point(field_set:tests.Type9Message.data3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimpleClientMessage::kTimestampFieldNumber;
const int SimpleClientMessage::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimpleClientMessage::SimpleClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.SimpleClientMessage)
}

void SimpleClientMessage::InitAsDefaultInstance() {
}

SimpleClientMessage::SimpleClientMessage(const SimpleClientMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.SimpleClientMessage)
}

void SimpleClientMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  timestamp_ = 0;
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SimpleClientMessage::~SimpleClientMessage() {
  // @@protoc_insertion_point(destructor:tests.SimpleClientMessage)
  SharedDtor();
}

void SimpleClientMessage::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SimpleClientMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SimpleClientMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SimpleClientMessage_descriptor_;
}

const SimpleClientMessage& SimpleClientMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

SimpleClientMessage* SimpleClientMessage::default_instance_ = NULL;

SimpleClientMessage* SimpleClientMessage::New(::google::protobuf::Arena* arena) const {
  SimpleClientMessage* n = new SimpleClientMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SimpleClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.SimpleClientMessage)
  if (_has_bits_[0 / 32] & 3u) {
    timestamp_ = 0;
    if (has_payload()) {
      payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SimpleClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.SimpleClientMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_payload;
        break;
      }

      // optional string payload = 2;
      case 2: {
        if (tag == 18) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payload()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->payload().data(), this->payload().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.SimpleClientMessage.payload");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.SimpleClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.SimpleClientMessage)
  return false;
#undef DO_
}

void SimpleClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.SimpleClientMessage)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timestamp(), output);
  }

  // optional string payload = 2;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.SimpleClientMessage.payload");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->payload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.SimpleClientMessage)
}

::google::protobuf::uint8* SimpleClientMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.SimpleClientMessage)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timestamp(), target);
  }

  // optional string payload = 2;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.SimpleClientMessage.payload");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->payload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.SimpleClientMessage)
  return target;
}

int SimpleClientMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.SimpleClientMessage)
  int total_size = 0;

  // required int32 timestamp = 1;
  if (has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timestamp());
  }
  // optional string payload = 2;
  if (has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payload());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SimpleClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.SimpleClientMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SimpleClientMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SimpleClientMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.SimpleClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.SimpleClientMessage)
    MergeFrom(*source);
  }
}

void SimpleClientMessage::MergeFrom(const SimpleClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.SimpleClientMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_payload()) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SimpleClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.SimpleClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimpleClientMessage::CopyFrom(const SimpleClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.SimpleClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleClientMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SimpleClientMessage::Swap(SimpleClientMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimpleClientMessage::InternalSwap(SimpleClientMessage* other) {
  std::swap(timestamp_, other->timestamp_);
  payload_.Swap(&other->payload_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SimpleClientMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SimpleClientMessage_descriptor_;
  metadata.reflection = SimpleClientMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SimpleClientMessage

// required int32 timestamp = 1;
bool SimpleClientMessage::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SimpleClientMessage::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
void SimpleClientMessage::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
void SimpleClientMessage::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
 ::google::protobuf::int32 SimpleClientMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:tests.SimpleClientMessage.timestamp)
  return timestamp_;
}
 void SimpleClientMessage::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tests.SimpleClientMessage.timestamp)
}

// optional string payload = 2;
bool SimpleClientMessage::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SimpleClientMessage::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
void SimpleClientMessage::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
void SimpleClientMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
 const ::std::string& SimpleClientMessage::payload() const {
  // @@protoc_insertion_point(field_get:tests.SimpleClientMessage.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SimpleClientMessage::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.SimpleClientMessage.payload)
}
 void SimpleClientMessage::set_payload(const char* value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.SimpleClientMessage.payload)
}
 void SimpleClientMessage::set_payload(const char* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.SimpleClientMessage.payload)
}
 ::std::string* SimpleClientMessage::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:tests.SimpleClientMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SimpleClientMessage::release_payload() {
  // @@protoc_insertion_point(field_release:tests.SimpleClientMessage.payload)
  clear_has_payload();
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SimpleClientMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:tests.SimpleClientMessage.payload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type10Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type10Message::Type10Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type10Message)
}

void Type10Message::InitAsDefaultInstance() {
}

Type10Message::Type10Message(const Type10Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type10Message)
}

void Type10Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type10Message::~Type10Message() {
  // @@protoc_insertion_point(destructor:tests.Type10Message)
  SharedDtor();
}

void Type10Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type10Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type10Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type10Message_descriptor_;
}

const Type10Message& Type10Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type10Message* Type10Message::default_instance_ = NULL;

Type10Message* Type10Message::New(::google::protobuf::Arena* arena) const {
  Type10Message* n = new Type10Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type10Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type10Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type10Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type10Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type10Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type10Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type10Message)
  return false;
#undef DO_
}

void Type10Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type10Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type10Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type10Message)
}

::google::protobuf::uint8* Type10Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type10Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type10Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type10Message)
  return target;
}

int Type10Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type10Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type10Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type10Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type10Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type10Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type10Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type10Message)
    MergeFrom(*source);
  }
}

void Type10Message::MergeFrom(const Type10Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type10Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type10Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type10Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type10Message::CopyFrom(const Type10Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type10Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type10Message::IsInitialized() const {

  return true;
}

void Type10Message::Swap(Type10Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type10Message::InternalSwap(Type10Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type10Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type10Message_descriptor_;
  metadata.reflection = Type10Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type10Message

// optional string data = 1;
bool Type10Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type10Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type10Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type10Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type10Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type10Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type10Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type10Message.data)
}
 void Type10Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type10Message.data)
}
 void Type10Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type10Message.data)
}
 ::std::string* Type10Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type10Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type10Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type10Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type10Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type10Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type11Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type11Message::Type11Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type11Message)
}

void Type11Message::InitAsDefaultInstance() {
}

Type11Message::Type11Message(const Type11Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type11Message)
}

void Type11Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type11Message::~Type11Message() {
  // @@protoc_insertion_point(destructor:tests.Type11Message)
  SharedDtor();
}

void Type11Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type11Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type11Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type11Message_descriptor_;
}

const Type11Message& Type11Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type11Message* Type11Message::default_instance_ = NULL;

Type11Message* Type11Message::New(::google::protobuf::Arena* arena) const {
  Type11Message* n = new Type11Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type11Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type11Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type11Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type11Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type11Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type11Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type11Message)
  return false;
#undef DO_
}

void Type11Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type11Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type11Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type11Message)
}

::google::protobuf::uint8* Type11Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type11Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type11Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type11Message)
  return target;
}

int Type11Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type11Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type11Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type11Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type11Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type11Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type11Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type11Message)
    MergeFrom(*source);
  }
}

void Type11Message::MergeFrom(const Type11Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type11Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type11Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type11Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type11Message::CopyFrom(const Type11Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type11Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type11Message::IsInitialized() const {

  return true;
}

void Type11Message::Swap(Type11Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type11Message::InternalSwap(Type11Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type11Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type11Message_descriptor_;
  metadata.reflection = Type11Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type11Message

// optional string data = 1;
bool Type11Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type11Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type11Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type11Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type11Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type11Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type11Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type11Message.data)
}
 void Type11Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type11Message.data)
}
 void Type11Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type11Message.data)
}
 ::std::string* Type11Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type11Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type11Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type11Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type11Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type11Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type12Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type12Message::Type12Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type12Message)
}

void Type12Message::InitAsDefaultInstance() {
}

Type12Message::Type12Message(const Type12Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type12Message)
}

void Type12Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type12Message::~Type12Message() {
  // @@protoc_insertion_point(destructor:tests.Type12Message)
  SharedDtor();
}

void Type12Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type12Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type12Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type12Message_descriptor_;
}

const Type12Message& Type12Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type12Message* Type12Message::default_instance_ = NULL;

Type12Message* Type12Message::New(::google::protobuf::Arena* arena) const {
  Type12Message* n = new Type12Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type12Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type12Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type12Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type12Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type12Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type12Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type12Message)
  return false;
#undef DO_
}

void Type12Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type12Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type12Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type12Message)
}

::google::protobuf::uint8* Type12Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type12Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type12Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type12Message)
  return target;
}

int Type12Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type12Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type12Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type12Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type12Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type12Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type12Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type12Message)
    MergeFrom(*source);
  }
}

void Type12Message::MergeFrom(const Type12Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type12Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type12Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type12Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type12Message::CopyFrom(const Type12Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type12Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type12Message::IsInitialized() const {

  return true;
}

void Type12Message::Swap(Type12Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type12Message::InternalSwap(Type12Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type12Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type12Message_descriptor_;
  metadata.reflection = Type12Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type12Message

// optional string data = 1;
bool Type12Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type12Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type12Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type12Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type12Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type12Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type12Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type12Message.data)
}
 void Type12Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type12Message.data)
}
 void Type12Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type12Message.data)
}
 ::std::string* Type12Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type12Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type12Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type12Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type12Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type12Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type13Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type13Message::Type13Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type13Message)
}

void Type13Message::InitAsDefaultInstance() {
}

Type13Message::Type13Message(const Type13Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type13Message)
}

void Type13Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type13Message::~Type13Message() {
  // @@protoc_insertion_point(destructor:tests.Type13Message)
  SharedDtor();
}

void Type13Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type13Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type13Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type13Message_descriptor_;
}

const Type13Message& Type13Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type13Message* Type13Message::default_instance_ = NULL;

Type13Message* Type13Message::New(::google::protobuf::Arena* arena) const {
  Type13Message* n = new Type13Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type13Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type13Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type13Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type13Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type13Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type13Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type13Message)
  return false;
#undef DO_
}

void Type13Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type13Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type13Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type13Message)
}

::google::protobuf::uint8* Type13Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type13Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type13Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type13Message)
  return target;
}

int Type13Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type13Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type13Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type13Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type13Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type13Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type13Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type13Message)
    MergeFrom(*source);
  }
}

void Type13Message::MergeFrom(const Type13Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type13Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type13Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type13Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type13Message::CopyFrom(const Type13Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type13Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type13Message::IsInitialized() const {

  return true;
}

void Type13Message::Swap(Type13Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type13Message::InternalSwap(Type13Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type13Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type13Message_descriptor_;
  metadata.reflection = Type13Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type13Message

// optional string data = 1;
bool Type13Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type13Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type13Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type13Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type13Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type13Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type13Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type13Message.data)
}
 void Type13Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type13Message.data)
}
 void Type13Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type13Message.data)
}
 ::std::string* Type13Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type13Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type13Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type13Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type13Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type13Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type14Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type14Message::Type14Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type14Message)
}

void Type14Message::InitAsDefaultInstance() {
}

Type14Message::Type14Message(const Type14Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type14Message)
}

void Type14Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type14Message::~Type14Message() {
  // @@protoc_insertion_point(destructor:tests.Type14Message)
  SharedDtor();
}

void Type14Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type14Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type14Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type14Message_descriptor_;
}

const Type14Message& Type14Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type14Message* Type14Message::default_instance_ = NULL;

Type14Message* Type14Message::New(::google::protobuf::Arena* arena) const {
  Type14Message* n = new Type14Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type14Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type14Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type14Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type14Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type14Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type14Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type14Message)
  return false;
#undef DO_
}

void Type14Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type14Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type14Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type14Message)
}

::google::protobuf::uint8* Type14Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type14Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type14Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type14Message)
  return target;
}

int Type14Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type14Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type14Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type14Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type14Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type14Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type14Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type14Message)
    MergeFrom(*source);
  }
}

void Type14Message::MergeFrom(const Type14Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type14Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type14Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type14Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type14Message::CopyFrom(const Type14Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type14Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type14Message::IsInitialized() const {

  return true;
}

void Type14Message::Swap(Type14Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type14Message::InternalSwap(Type14Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type14Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type14Message_descriptor_;
  metadata.reflection = Type14Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type14Message

// optional string data = 1;
bool Type14Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type14Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type14Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type14Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type14Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type14Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type14Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type14Message.data)
}
 void Type14Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type14Message.data)
}
 void Type14Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type14Message.data)
}
 ::std::string* Type14Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type14Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type14Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type14Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type14Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type14Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type15Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type15Message::Type15Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type15Message)
}

void Type15Message::InitAsDefaultInstance() {
}

Type15Message::Type15Message(const Type15Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type15Message)
}

void Type15Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type15Message::~Type15Message() {
  // @@protoc_insertion_point(destructor:tests.Type15Message)
  SharedDtor();
}

void Type15Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type15Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type15Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type15Message_descriptor_;
}

const Type15Message& Type15Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type15Message* Type15Message::default_instance_ = NULL;

Type15Message* Type15Message::New(::google::protobuf::Arena* arena) const {
  Type15Message* n = new Type15Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type15Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type15Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type15Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type15Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type15Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type15Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type15Message)
  return false;
#undef DO_
}

void Type15Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type15Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type15Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type15Message)
}

::google::protobuf::uint8* Type15Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type15Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type15Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type15Message)
  return target;
}

int Type15Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type15Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type15Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type15Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type15Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type15Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type15Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type15Message)
    MergeFrom(*source);
  }
}

void Type15Message::MergeFrom(const Type15Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type15Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type15Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type15Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type15Message::CopyFrom(const Type15Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type15Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type15Message::IsInitialized() const {

  return true;
}

void Type15Message::Swap(Type15Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type15Message::InternalSwap(Type15Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type15Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type15Message_descriptor_;
  metadata.reflection = Type15Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type15Message

// optional string data = 1;
bool Type15Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type15Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type15Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type15Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type15Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type15Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type15Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type15Message.data)
}
 void Type15Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type15Message.data)
}
 void Type15Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type15Message.data)
}
 ::std::string* Type15Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type15Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type15Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type15Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type15Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type15Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type16Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type16Message::Type16Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type16Message)
}

void Type16Message::InitAsDefaultInstance() {
}

Type16Message::Type16Message(const Type16Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type16Message)
}

void Type16Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type16Message::~Type16Message() {
  // @@protoc_insertion_point(destructor:tests.Type16Message)
  SharedDtor();
}

void Type16Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type16Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type16Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type16Message_descriptor_;
}

const Type16Message& Type16Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type16Message* Type16Message::default_instance_ = NULL;

Type16Message* Type16Message::New(::google::protobuf::Arena* arena) const {
  Type16Message* n = new Type16Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type16Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type16Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type16Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type16Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type16Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type16Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type16Message)
  return false;
#undef DO_
}

void Type16Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type16Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type16Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type16Message)
}

::google::protobuf::uint8* Type16Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type16Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type16Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type16Message)
  return target;
}

int Type16Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type16Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type16Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type16Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type16Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type16Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type16Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type16Message)
    MergeFrom(*source);
  }
}

void Type16Message::MergeFrom(const Type16Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type16Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type16Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type16Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type16Message::CopyFrom(const Type16Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type16Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type16Message::IsInitialized() const {

  return true;
}

void Type16Message::Swap(Type16Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type16Message::InternalSwap(Type16Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type16Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type16Message_descriptor_;
  metadata.reflection = Type16Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type16Message

// optional string data = 1;
bool Type16Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type16Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type16Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type16Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type16Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type16Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type16Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type16Message.data)
}
 void Type16Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type16Message.data)
}
 void Type16Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type16Message.data)
}
 ::std::string* Type16Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type16Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type16Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type16Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type16Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type16Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type17Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type17Message::Type17Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type17Message)
}

void Type17Message::InitAsDefaultInstance() {
}

Type17Message::Type17Message(const Type17Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type17Message)
}

void Type17Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type17Message::~Type17Message() {
  // @@protoc_insertion_point(destructor:tests.Type17Message)
  SharedDtor();
}

void Type17Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type17Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type17Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type17Message_descriptor_;
}

const Type17Message& Type17Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type17Message* Type17Message::default_instance_ = NULL;

Type17Message* Type17Message::New(::google::protobuf::Arena* arena) const {
  Type17Message* n = new Type17Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type17Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type17Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type17Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type17Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type17Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type17Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type17Message)
  return false;
#undef DO_
}

void Type17Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type17Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type17Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type17Message)
}

::google::protobuf::uint8* Type17Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type17Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type17Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type17Message)
  return target;
}

int Type17Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type17Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type17Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type17Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type17Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type17Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type17Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type17Message)
    MergeFrom(*source);
  }
}

void Type17Message::MergeFrom(const Type17Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type17Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type17Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type17Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type17Message::CopyFrom(const Type17Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type17Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type17Message::IsInitialized() const {

  return true;
}

void Type17Message::Swap(Type17Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type17Message::InternalSwap(Type17Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type17Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type17Message_descriptor_;
  metadata.reflection = Type17Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type17Message

// optional string data = 1;
bool Type17Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type17Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type17Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type17Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type17Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type17Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type17Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type17Message.data)
}
 void Type17Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type17Message.data)
}
 void Type17Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type17Message.data)
}
 ::std::string* Type17Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type17Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type17Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type17Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type17Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type17Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type18Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type18Message::Type18Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type18Message)
}

void Type18Message::InitAsDefaultInstance() {
}

Type18Message::Type18Message(const Type18Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type18Message)
}

void Type18Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type18Message::~Type18Message() {
  // @@protoc_insertion_point(destructor:tests.Type18Message)
  SharedDtor();
}

void Type18Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type18Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type18Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type18Message_descriptor_;
}

const Type18Message& Type18Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type18Message* Type18Message::default_instance_ = NULL;

Type18Message* Type18Message::New(::google::protobuf::Arena* arena) const {
  Type18Message* n = new Type18Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type18Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type18Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type18Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type18Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type18Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type18Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type18Message)
  return false;
#undef DO_
}

void Type18Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type18Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type18Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type18Message)
}

::google::protobuf::uint8* Type18Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type18Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type18Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type18Message)
  return target;
}

int Type18Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type18Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type18Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type18Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type18Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type18Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type18Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type18Message)
    MergeFrom(*source);
  }
}

void Type18Message::MergeFrom(const Type18Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type18Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type18Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type18Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type18Message::CopyFrom(const Type18Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type18Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type18Message::IsInitialized() const {

  return true;
}

void Type18Message::Swap(Type18Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type18Message::InternalSwap(Type18Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type18Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type18Message_descriptor_;
  metadata.reflection = Type18Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type18Message

// optional string data = 1;
bool Type18Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type18Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type18Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type18Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type18Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type18Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type18Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type18Message.data)
}
 void Type18Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type18Message.data)
}
 void Type18Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type18Message.data)
}
 ::std::string* Type18Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type18Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type18Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type18Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type18Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type18Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type19Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type19Message::Type19Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type19Message)
}

void Type19Message::InitAsDefaultInstance() {
}

Type19Message::Type19Message(const Type19Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type19Message)
}

void Type19Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type19Message::~Type19Message() {
  // @@protoc_insertion_point(destructor:tests.Type19Message)
  SharedDtor();
}

void Type19Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type19Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type19Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type19Message_descriptor_;
}

const Type19Message& Type19Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type19Message* Type19Message::default_instance_ = NULL;

Type19Message* Type19Message::New(::google::protobuf::Arena* arena) const {
  Type19Message* n = new Type19Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type19Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type19Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type19Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type19Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type19Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type19Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type19Message)
  return false;
#undef DO_
}

void Type19Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type19Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type19Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type19Message)
}

::google::protobuf::uint8* Type19Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type19Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type19Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type19Message)
  return target;
}

int Type19Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type19Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type19Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type19Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type19Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type19Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type19Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type19Message)
    MergeFrom(*source);
  }
}

void Type19Message::MergeFrom(const Type19Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type19Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type19Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type19Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type19Message::CopyFrom(const Type19Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type19Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type19Message::IsInitialized() const {

  return true;
}

void Type19Message::Swap(Type19Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type19Message::InternalSwap(Type19Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type19Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type19Message_descriptor_;
  metadata.reflection = Type19Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type19Message

// optional string data = 1;
bool Type19Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type19Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type19Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type19Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type19Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type19Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type19Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type19Message.data)
}
 void Type19Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type19Message.data)
}
 void Type19Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type19Message.data)
}
 ::std::string* Type19Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type19Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type19Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type19Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type19Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type19Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type20Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type20Message::Type20Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type20Message)
}

void Type20Message::InitAsDefaultInstance() {
}

Type20Message::Type20Message(const Type20Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type20Message)
}

void Type20Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type20Message::~Type20Message() {
  // @@protoc_insertion_point(destructor:tests.Type20Message)
  SharedDtor();
}

void Type20Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type20Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type20Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type20Message_descriptor_;
}

const Type20Message& Type20Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type20Message* Type20Message::default_instance_ = NULL;

Type20Message* Type20Message::New(::google::protobuf::Arena* arena) const {
  Type20Message* n = new Type20Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type20Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type20Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type20Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type20Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type20Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type20Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type20Message)
  return false;
#undef DO_
}

void Type20Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type20Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type20Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type20Message)
}

::google::protobuf::uint8* Type20Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type20Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type20Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type20Message)
  return target;
}

int Type20Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type20Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type20Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type20Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type20Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type20Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type20Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type20Message)
    MergeFrom(*source);
  }
}

void Type20Message::MergeFrom(const Type20Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type20Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type20Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type20Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type20Message::CopyFrom(const Type20Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type20Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type20Message::IsInitialized() const {

  return true;
}

void Type20Message::Swap(Type20Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type20Message::InternalSwap(Type20Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type20Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type20Message_descriptor_;
  metadata.reflection = Type20Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type20Message

// optional string data = 1;
bool Type20Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type20Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type20Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type20Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type20Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type20Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type20Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type20Message.data)
}
 void Type20Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type20Message.data)
}
 void Type20Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type20Message.data)
}
 ::std::string* Type20Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type20Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type20Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type20Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type20Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type20Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type21Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type21Message::Type21Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type21Message)
}

void Type21Message::InitAsDefaultInstance() {
}

Type21Message::Type21Message(const Type21Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type21Message)
}

void Type21Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type21Message::~Type21Message() {
  // @@protoc_insertion_point(destructor:tests.Type21Message)
  SharedDtor();
}

void Type21Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type21Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type21Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type21Message_descriptor_;
}

const Type21Message& Type21Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type21Message* Type21Message::default_instance_ = NULL;

Type21Message* Type21Message::New(::google::protobuf::Arena* arena) const {
  Type21Message* n = new Type21Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type21Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type21Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type21Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type21Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type21Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type21Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type21Message)
  return false;
#undef DO_
}

void Type21Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type21Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type21Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type21Message)
}

::google::protobuf::uint8* Type21Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type21Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type21Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type21Message)
  return target;
}

int Type21Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type21Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type21Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type21Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type21Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type21Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type21Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type21Message)
    MergeFrom(*source);
  }
}

void Type21Message::MergeFrom(const Type21Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type21Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type21Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type21Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type21Message::CopyFrom(const Type21Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type21Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type21Message::IsInitialized() const {

  return true;
}

void Type21Message::Swap(Type21Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type21Message::InternalSwap(Type21Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type21Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type21Message_descriptor_;
  metadata.reflection = Type21Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type21Message

// optional string data = 1;
bool Type21Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type21Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type21Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type21Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type21Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type21Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type21Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type21Message.data)
}
 void Type21Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type21Message.data)
}
 void Type21Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type21Message.data)
}
 ::std::string* Type21Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type21Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type21Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type21Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type21Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type21Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type22Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type22Message::Type22Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type22Message)
}

void Type22Message::InitAsDefaultInstance() {
}

Type22Message::Type22Message(const Type22Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type22Message)
}

void Type22Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type22Message::~Type22Message() {
  // @@protoc_insertion_point(destructor:tests.Type22Message)
  SharedDtor();
}

void Type22Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type22Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type22Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type22Message_descriptor_;
}

const Type22Message& Type22Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type22Message* Type22Message::default_instance_ = NULL;

Type22Message* Type22Message::New(::google::protobuf::Arena* arena) const {
  Type22Message* n = new Type22Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type22Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type22Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type22Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type22Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type22Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type22Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type22Message)
  return false;
#undef DO_
}

void Type22Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type22Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type22Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type22Message)
}

::google::protobuf::uint8* Type22Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type22Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type22Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type22Message)
  return target;
}

int Type22Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type22Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type22Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type22Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type22Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type22Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type22Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type22Message)
    MergeFrom(*source);
  }
}

void Type22Message::MergeFrom(const Type22Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type22Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type22Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type22Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type22Message::CopyFrom(const Type22Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type22Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type22Message::IsInitialized() const {

  return true;
}

void Type22Message::Swap(Type22Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type22Message::InternalSwap(Type22Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type22Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type22Message_descriptor_;
  metadata.reflection = Type22Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type22Message

// optional string data = 1;
bool Type22Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type22Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type22Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type22Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type22Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type22Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type22Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type22Message.data)
}
 void Type22Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type22Message.data)
}
 void Type22Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type22Message.data)
}
 ::std::string* Type22Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type22Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type22Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type22Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type22Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type22Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type23Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type23Message::Type23Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type23Message)
}

void Type23Message::InitAsDefaultInstance() {
}

Type23Message::Type23Message(const Type23Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type23Message)
}

void Type23Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type23Message::~Type23Message() {
  // @@protoc_insertion_point(destructor:tests.Type23Message)
  SharedDtor();
}

void Type23Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type23Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type23Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type23Message_descriptor_;
}

const Type23Message& Type23Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type23Message* Type23Message::default_instance_ = NULL;

Type23Message* Type23Message::New(::google::protobuf::Arena* arena) const {
  Type23Message* n = new Type23Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type23Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type23Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type23Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type23Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type23Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type23Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type23Message)
  return false;
#undef DO_
}

void Type23Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type23Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type23Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type23Message)
}

::google::protobuf::uint8* Type23Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type23Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type23Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type23Message)
  return target;
}

int Type23Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type23Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type23Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type23Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type23Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type23Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type23Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type23Message)
    MergeFrom(*source);
  }
}

void Type23Message::MergeFrom(const Type23Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type23Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type23Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type23Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type23Message::CopyFrom(const Type23Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type23Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type23Message::IsInitialized() const {

  return true;
}

void Type23Message::Swap(Type23Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type23Message::InternalSwap(Type23Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type23Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type23Message_descriptor_;
  metadata.reflection = Type23Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type23Message

// optional string data = 1;
bool Type23Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type23Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type23Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type23Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type23Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type23Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type23Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type23Message.data)
}
 void Type23Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type23Message.data)
}
 void Type23Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type23Message.data)
}
 ::std::string* Type23Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type23Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type23Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type23Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type23Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type23Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type24Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type24Message::Type24Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type24Message)
}

void Type24Message::InitAsDefaultInstance() {
}

Type24Message::Type24Message(const Type24Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type24Message)
}

void Type24Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type24Message::~Type24Message() {
  // @@protoc_insertion_point(destructor:tests.Type24Message)
  SharedDtor();
}

void Type24Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type24Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type24Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type24Message_descriptor_;
}

const Type24Message& Type24Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type24Message* Type24Message::default_instance_ = NULL;

Type24Message* Type24Message::New(::google::protobuf::Arena* arena) const {
  Type24Message* n = new Type24Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type24Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type24Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type24Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type24Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type24Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type24Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type24Message)
  return false;
#undef DO_
}

void Type24Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type24Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type24Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type24Message)
}

::google::protobuf::uint8* Type24Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type24Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type24Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type24Message)
  return target;
}

int Type24Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type24Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type24Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type24Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type24Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type24Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type24Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type24Message)
    MergeFrom(*source);
  }
}

void Type24Message::MergeFrom(const Type24Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type24Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type24Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type24Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type24Message::CopyFrom(const Type24Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type24Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type24Message::IsInitialized() const {

  return true;
}

void Type24Message::Swap(Type24Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type24Message::InternalSwap(Type24Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type24Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type24Message_descriptor_;
  metadata.reflection = Type24Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type24Message

// optional string data = 1;
bool Type24Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type24Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type24Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type24Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type24Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type24Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type24Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type24Message.data)
}
 void Type24Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type24Message.data)
}
 void Type24Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type24Message.data)
}
 ::std::string* Type24Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type24Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type24Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type24Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type24Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type24Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type25Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type25Message::Type25Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type25Message)
}

void Type25Message::InitAsDefaultInstance() {
}

Type25Message::Type25Message(const Type25Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type25Message)
}

void Type25Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type25Message::~Type25Message() {
  // @@protoc_insertion_point(destructor:tests.Type25Message)
  SharedDtor();
}

void Type25Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type25Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type25Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type25Message_descriptor_;
}

const Type25Message& Type25Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type25Message* Type25Message::default_instance_ = NULL;

Type25Message* Type25Message::New(::google::protobuf::Arena* arena) const {
  Type25Message* n = new Type25Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type25Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type25Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type25Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type25Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type25Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type25Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type25Message)
  return false;
#undef DO_
}

void Type25Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type25Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type25Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type25Message)
}

::google::protobuf::uint8* Type25Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type25Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type25Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type25Message)
  return target;
}

int Type25Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type25Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type25Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type25Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type25Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type25Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type25Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type25Message)
    MergeFrom(*source);
  }
}

void Type25Message::MergeFrom(const Type25Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type25Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type25Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type25Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type25Message::CopyFrom(const Type25Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type25Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type25Message::IsInitialized() const {

  return true;
}

void Type25Message::Swap(Type25Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type25Message::InternalSwap(Type25Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type25Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type25Message_descriptor_;
  metadata.reflection = Type25Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type25Message

// optional string data = 1;
bool Type25Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type25Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type25Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type25Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type25Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type25Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type25Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type25Message.data)
}
 void Type25Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type25Message.data)
}
 void Type25Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type25Message.data)
}
 ::std::string* Type25Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type25Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type25Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type25Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type25Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type25Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type26Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type26Message::Type26Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type26Message)
}

void Type26Message::InitAsDefaultInstance() {
}

Type26Message::Type26Message(const Type26Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type26Message)
}

void Type26Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type26Message::~Type26Message() {
  // @@protoc_insertion_point(destructor:tests.Type26Message)
  SharedDtor();
}

void Type26Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type26Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type26Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type26Message_descriptor_;
}

const Type26Message& Type26Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type26Message* Type26Message::default_instance_ = NULL;

Type26Message* Type26Message::New(::google::protobuf::Arena* arena) const {
  Type26Message* n = new Type26Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type26Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type26Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type26Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type26Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type26Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type26Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type26Message)
  return false;
#undef DO_
}

void Type26Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type26Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type26Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type26Message)
}

::google::protobuf::uint8* Type26Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type26Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type26Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type26Message)
  return target;
}

int Type26Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type26Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type26Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type26Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type26Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type26Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type26Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type26Message)
    MergeFrom(*source);
  }
}

void Type26Message::MergeFrom(const Type26Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type26Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type26Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type26Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type26Message::CopyFrom(const Type26Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type26Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type26Message::IsInitialized() const {

  return true;
}

void Type26Message::Swap(Type26Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type26Message::InternalSwap(Type26Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type26Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type26Message_descriptor_;
  metadata.reflection = Type26Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type26Message

// optional string data = 1;
bool Type26Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type26Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type26Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type26Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type26Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type26Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type26Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type26Message.data)
}
 void Type26Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type26Message.data)
}
 void Type26Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type26Message.data)
}
 ::std::string* Type26Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type26Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type26Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type26Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type26Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type26Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type27Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type27Message::Type27Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type27Message)
}

void Type27Message::InitAsDefaultInstance() {
}

Type27Message::Type27Message(const Type27Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type27Message)
}

void Type27Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type27Message::~Type27Message() {
  // @@protoc_insertion_point(destructor:tests.Type27Message)
  SharedDtor();
}

void Type27Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type27Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type27Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type27Message_descriptor_;
}

const Type27Message& Type27Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type27Message* Type27Message::default_instance_ = NULL;

Type27Message* Type27Message::New(::google::protobuf::Arena* arena) const {
  Type27Message* n = new Type27Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type27Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type27Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type27Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type27Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type27Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type27Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type27Message)
  return false;
#undef DO_
}

void Type27Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type27Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type27Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type27Message)
}

::google::protobuf::uint8* Type27Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type27Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type27Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type27Message)
  return target;
}

int Type27Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type27Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type27Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type27Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type27Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type27Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type27Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type27Message)
    MergeFrom(*source);
  }
}

void Type27Message::MergeFrom(const Type27Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type27Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type27Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type27Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type27Message::CopyFrom(const Type27Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type27Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type27Message::IsInitialized() const {

  return true;
}

void Type27Message::Swap(Type27Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type27Message::InternalSwap(Type27Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type27Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type27Message_descriptor_;
  metadata.reflection = Type27Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type27Message

// optional string data = 1;
bool Type27Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type27Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type27Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type27Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type27Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type27Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type27Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type27Message.data)
}
 void Type27Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type27Message.data)
}
 void Type27Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type27Message.data)
}
 ::std::string* Type27Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type27Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type27Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type27Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type27Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type27Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type28Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type28Message::Type28Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type28Message)
}

void Type28Message::InitAsDefaultInstance() {
}

Type28Message::Type28Message(const Type28Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type28Message)
}

void Type28Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type28Message::~Type28Message() {
  // @@protoc_insertion_point(destructor:tests.Type28Message)
  SharedDtor();
}

void Type28Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type28Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type28Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type28Message_descriptor_;
}

const Type28Message& Type28Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type28Message* Type28Message::default_instance_ = NULL;

Type28Message* Type28Message::New(::google::protobuf::Arena* arena) const {
  Type28Message* n = new Type28Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type28Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type28Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type28Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type28Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type28Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type28Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type28Message)
  return false;
#undef DO_
}

void Type28Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type28Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type28Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type28Message)
}

::google::protobuf::uint8* Type28Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type28Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type28Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type28Message)
  return target;
}

int Type28Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type28Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type28Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type28Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type28Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type28Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type28Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type28Message)
    MergeFrom(*source);
  }
}

void Type28Message::MergeFrom(const Type28Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type28Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type28Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type28Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type28Message::CopyFrom(const Type28Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type28Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type28Message::IsInitialized() const {

  return true;
}

void Type28Message::Swap(Type28Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type28Message::InternalSwap(Type28Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type28Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type28Message_descriptor_;
  metadata.reflection = Type28Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type28Message

// optional string data = 1;
bool Type28Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type28Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type28Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type28Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type28Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type28Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type28Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type28Message.data)
}
 void Type28Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type28Message.data)
}
 void Type28Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type28Message.data)
}
 ::std::string* Type28Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type28Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type28Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type28Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type28Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type28Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type29Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type29Message::Type29Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type29Message)
}

void Type29Message::InitAsDefaultInstance() {
}

Type29Message::Type29Message(const Type29Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type29Message)
}

void Type29Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type29Message::~Type29Message() {
  // @@protoc_insertion_point(destructor:tests.Type29Message)
  SharedDtor();
}

void Type29Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type29Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type29Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type29Message_descriptor_;
}

const Type29Message& Type29Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type29Message* Type29Message::default_instance_ = NULL;

Type29Message* Type29Message::New(::google::protobuf::Arena* arena) const {
  Type29Message* n = new Type29Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type29Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type29Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type29Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type29Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type29Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type29Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type29Message)
  return false;
#undef DO_
}

void Type29Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type29Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type29Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type29Message)
}

::google::protobuf::uint8* Type29Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type29Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type29Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type29Message)
  return target;
}

int Type29Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type29Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type29Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type29Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type29Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type29Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type29Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type29Message)
    MergeFrom(*source);
  }
}

void Type29Message::MergeFrom(const Type29Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type29Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type29Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type29Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type29Message::CopyFrom(const Type29Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type29Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type29Message::IsInitialized() const {

  return true;
}

void Type29Message::Swap(Type29Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type29Message::InternalSwap(Type29Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type29Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type29Message_descriptor_;
  metadata.reflection = Type29Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type29Message

// optional string data = 1;
bool Type29Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type29Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type29Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type29Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type29Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type29Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type29Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type29Message.data)
}
 void Type29Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type29Message.data)
}
 void Type29Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type29Message.data)
}
 ::std::string* Type29Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type29Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type29Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type29Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type29Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type29Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type30Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type30Message::Type30Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type30Message)
}

void Type30Message::InitAsDefaultInstance() {
}

Type30Message::Type30Message(const Type30Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type30Message)
}

void Type30Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type30Message::~Type30Message() {
  // @@protoc_insertion_point(destructor:tests.Type30Message)
  SharedDtor();
}

void Type30Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type30Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type30Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type30Message_descriptor_;
}

const Type30Message& Type30Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type30Message* Type30Message::default_instance_ = NULL;

Type30Message* Type30Message::New(::google::protobuf::Arena* arena) const {
  Type30Message* n = new Type30Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type30Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type30Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type30Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type30Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type30Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type30Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type30Message)
  return false;
#undef DO_
}

void Type30Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type30Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type30Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type30Message)
}

::google::protobuf::uint8* Type30Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type30Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type30Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type30Message)
  return target;
}

int Type30Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type30Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type30Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type30Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type30Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type30Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type30Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type30Message)
    MergeFrom(*source);
  }
}

void Type30Message::MergeFrom(const Type30Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type30Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type30Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type30Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type30Message::CopyFrom(const Type30Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type30Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type30Message::IsInitialized() const {

  return true;
}

void Type30Message::Swap(Type30Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type30Message::InternalSwap(Type30Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type30Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type30Message_descriptor_;
  metadata.reflection = Type30Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type30Message

// optional string data = 1;
bool Type30Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type30Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type30Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type30Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type30Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type30Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type30Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type30Message.data)
}
 void Type30Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type30Message.data)
}
 void Type30Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type30Message.data)
}
 ::std::string* Type30Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type30Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type30Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type30Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type30Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type30Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type31Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type31Message::Type31Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type31Message)
}

void Type31Message::InitAsDefaultInstance() {
}

Type31Message::Type31Message(const Type31Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type31Message)
}

void Type31Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type31Message::~Type31Message() {
  // @@protoc_insertion_point(destructor:tests.Type31Message)
  SharedDtor();
}

void Type31Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type31Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type31Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type31Message_descriptor_;
}

const Type31Message& Type31Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type31Message* Type31Message::default_instance_ = NULL;

Type31Message* Type31Message::New(::google::protobuf::Arena* arena) const {
  Type31Message* n = new Type31Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type31Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type31Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type31Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type31Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type31Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type31Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type31Message)
  return false;
#undef DO_
}

void Type31Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type31Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type31Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type31Message)
}

::google::protobuf::uint8* Type31Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type31Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type31Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type31Message)
  return target;
}

int Type31Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type31Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type31Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type31Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type31Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type31Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type31Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type31Message)
    MergeFrom(*source);
  }
}

void Type31Message::MergeFrom(const Type31Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type31Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type31Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type31Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type31Message::CopyFrom(const Type31Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type31Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type31Message::IsInitialized() const {

  return true;
}

void Type31Message::Swap(Type31Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type31Message::InternalSwap(Type31Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type31Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type31Message_descriptor_;
  metadata.reflection = Type31Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type31Message

// optional string data = 1;
bool Type31Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type31Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type31Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type31Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type31Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type31Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type31Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type31Message.data)
}
 void Type31Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type31Message.data)
}
 void Type31Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type31Message.data)
}
 ::std::string* Type31Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type31Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type31Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type31Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type31Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type31Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type32Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type32Message::Type32Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type32Message)
}

void Type32Message::InitAsDefaultInstance() {
}

Type32Message::Type32Message(const Type32Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type32Message)
}

void Type32Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type32Message::~Type32Message() {
  // @@protoc_insertion_point(destructor:tests.Type32Message)
  SharedDtor();
}

void Type32Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type32Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type32Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type32Message_descriptor_;
}

const Type32Message& Type32Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type32Message* Type32Message::default_instance_ = NULL;

Type32Message* Type32Message::New(::google::protobuf::Arena* arena) const {
  Type32Message* n = new Type32Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type32Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type32Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type32Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type32Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type32Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type32Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type32Message)
  return false;
#undef DO_
}

void Type32Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type32Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type32Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type32Message)
}

::google::protobuf::uint8* Type32Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type32Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type32Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type32Message)
  return target;
}

int Type32Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type32Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type32Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type32Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type32Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type32Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type32Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type32Message)
    MergeFrom(*source);
  }
}

void Type32Message::MergeFrom(const Type32Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type32Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type32Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type32Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type32Message::CopyFrom(const Type32Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type32Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type32Message::IsInitialized() const {

  return true;
}

void Type32Message::Swap(Type32Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type32Message::InternalSwap(Type32Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type32Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type32Message_descriptor_;
  metadata.reflection = Type32Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type32Message

// optional string data = 1;
bool Type32Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type32Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type32Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type32Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type32Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type32Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type32Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type32Message.data)
}
 void Type32Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type32Message.data)
}
 void Type32Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type32Message.data)
}
 ::std::string* Type32Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type32Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type32Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type32Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type32Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type32Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type33Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type33Message::Type33Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type33Message)
}

void Type33Message::InitAsDefaultInstance() {
}

Type33Message::Type33Message(const Type33Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type33Message)
}

void Type33Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type33Message::~Type33Message() {
  // @@protoc_insertion_point(destructor:tests.Type33Message)
  SharedDtor();
}

void Type33Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type33Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type33Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type33Message_descriptor_;
}

const Type33Message& Type33Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type33Message* Type33Message::default_instance_ = NULL;

Type33Message* Type33Message::New(::google::protobuf::Arena* arena) const {
  Type33Message* n = new Type33Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type33Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type33Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type33Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type33Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type33Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type33Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type33Message)
  return false;
#undef DO_
}

void Type33Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type33Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type33Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type33Message)
}

::google::protobuf::uint8* Type33Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type33Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type33Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type33Message)
  return target;
}

int Type33Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type33Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type33Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type33Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type33Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type33Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type33Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type33Message)
    MergeFrom(*source);
  }
}

void Type33Message::MergeFrom(const Type33Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type33Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type33Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type33Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type33Message::CopyFrom(const Type33Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type33Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type33Message::IsInitialized() const {

  return true;
}

void Type33Message::Swap(Type33Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type33Message::InternalSwap(Type33Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type33Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type33Message_descriptor_;
  metadata.reflection = Type33Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type33Message

// optional string data = 1;
bool Type33Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type33Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type33Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type33Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type33Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type33Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type33Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type33Message.data)
}
 void Type33Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type33Message.data)
}
 void Type33Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type33Message.data)
}
 ::std::string* Type33Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type33Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type33Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type33Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type33Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type33Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type34Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type34Message::Type34Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type34Message)
}

void Type34Message::InitAsDefaultInstance() {
}

Type34Message::Type34Message(const Type34Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type34Message)
}

void Type34Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type34Message::~Type34Message() {
  // @@protoc_insertion_point(destructor:tests.Type34Message)
  SharedDtor();
}

void Type34Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type34Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type34Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type34Message_descriptor_;
}

const Type34Message& Type34Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type34Message* Type34Message::default_instance_ = NULL;

Type34Message* Type34Message::New(::google::protobuf::Arena* arena) const {
  Type34Message* n = new Type34Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type34Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type34Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type34Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type34Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type34Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type34Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type34Message)
  return false;
#undef DO_
}

void Type34Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type34Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type34Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type34Message)
}

::google::protobuf::uint8* Type34Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type34Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type34Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type34Message)
  return target;
}

int Type34Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type34Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type34Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type34Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type34Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type34Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type34Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type34Message)
    MergeFrom(*source);
  }
}

void Type34Message::MergeFrom(const Type34Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type34Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type34Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type34Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type34Message::CopyFrom(const Type34Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type34Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type34Message::IsInitialized() const {

  return true;
}

void Type34Message::Swap(Type34Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type34Message::InternalSwap(Type34Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type34Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type34Message_descriptor_;
  metadata.reflection = Type34Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type34Message

// optional string data = 1;
bool Type34Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type34Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type34Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type34Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type34Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type34Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type34Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type34Message.data)
}
 void Type34Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type34Message.data)
}
 void Type34Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type34Message.data)
}
 ::std::string* Type34Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type34Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type34Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type34Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type34Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type34Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type35Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type35Message::Type35Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type35Message)
}

void Type35Message::InitAsDefaultInstance() {
}

Type35Message::Type35Message(const Type35Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type35Message)
}

void Type35Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type35Message::~Type35Message() {
  // @@protoc_insertion_point(destructor:tests.Type35Message)
  SharedDtor();
}

void Type35Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type35Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type35Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type35Message_descriptor_;
}

const Type35Message& Type35Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type35Message* Type35Message::default_instance_ = NULL;

Type35Message* Type35Message::New(::google::protobuf::Arena* arena) const {
  Type35Message* n = new Type35Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type35Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type35Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type35Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type35Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type35Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type35Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type35Message)
  return false;
#undef DO_
}

void Type35Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type35Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type35Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type35Message)
}

::google::protobuf::uint8* Type35Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type35Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type35Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type35Message)
  return target;
}

int Type35Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type35Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type35Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type35Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type35Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type35Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type35Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type35Message)
    MergeFrom(*source);
  }
}

void Type35Message::MergeFrom(const Type35Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type35Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type35Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type35Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type35Message::CopyFrom(const Type35Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type35Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type35Message::IsInitialized() const {

  return true;
}

void Type35Message::Swap(Type35Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type35Message::InternalSwap(Type35Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type35Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type35Message_descriptor_;
  metadata.reflection = Type35Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type35Message

// optional string data = 1;
bool Type35Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type35Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type35Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type35Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type35Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type35Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type35Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type35Message.data)
}
 void Type35Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type35Message.data)
}
 void Type35Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type35Message.data)
}
 ::std::string* Type35Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type35Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type35Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type35Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type35Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type35Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type36Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type36Message::Type36Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type36Message)
}

void Type36Message::InitAsDefaultInstance() {
}

Type36Message::Type36Message(const Type36Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type36Message)
}

void Type36Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type36Message::~Type36Message() {
  // @@protoc_insertion_point(destructor:tests.Type36Message)
  SharedDtor();
}

void Type36Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type36Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type36Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type36Message_descriptor_;
}

const Type36Message& Type36Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type36Message* Type36Message::default_instance_ = NULL;

Type36Message* Type36Message::New(::google::protobuf::Arena* arena) const {
  Type36Message* n = new Type36Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type36Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type36Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type36Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type36Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type36Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type36Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type36Message)
  return false;
#undef DO_
}

void Type36Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type36Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type36Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type36Message)
}

::google::protobuf::uint8* Type36Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type36Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type36Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type36Message)
  return target;
}

int Type36Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type36Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type36Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type36Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type36Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type36Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type36Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type36Message)
    MergeFrom(*source);
  }
}

void Type36Message::MergeFrom(const Type36Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type36Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type36Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type36Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type36Message::CopyFrom(const Type36Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type36Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type36Message::IsInitialized() const {

  return true;
}

void Type36Message::Swap(Type36Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type36Message::InternalSwap(Type36Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type36Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type36Message_descriptor_;
  metadata.reflection = Type36Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type36Message

// optional string data = 1;
bool Type36Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type36Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type36Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type36Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type36Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type36Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type36Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type36Message.data)
}
 void Type36Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type36Message.data)
}
 void Type36Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type36Message.data)
}
 ::std::string* Type36Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type36Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type36Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type36Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type36Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type36Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type37Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type37Message::Type37Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type37Message)
}

void Type37Message::InitAsDefaultInstance() {
}

Type37Message::Type37Message(const Type37Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type37Message)
}

void Type37Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type37Message::~Type37Message() {
  // @@protoc_insertion_point(destructor:tests.Type37Message)
  SharedDtor();
}

void Type37Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type37Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type37Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type37Message_descriptor_;
}

const Type37Message& Type37Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type37Message* Type37Message::default_instance_ = NULL;

Type37Message* Type37Message::New(::google::protobuf::Arena* arena) const {
  Type37Message* n = new Type37Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type37Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type37Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type37Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type37Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type37Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type37Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type37Message)
  return false;
#undef DO_
}

void Type37Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type37Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type37Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type37Message)
}

::google::protobuf::uint8* Type37Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type37Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type37Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type37Message)
  return target;
}

int Type37Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type37Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type37Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type37Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type37Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type37Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type37Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type37Message)
    MergeFrom(*source);
  }
}

void Type37Message::MergeFrom(const Type37Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type37Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type37Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type37Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type37Message::CopyFrom(const Type37Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type37Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type37Message::IsInitialized() const {

  return true;
}

void Type37Message::Swap(Type37Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type37Message::InternalSwap(Type37Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type37Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type37Message_descriptor_;
  metadata.reflection = Type37Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type37Message

// optional string data = 1;
bool Type37Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type37Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type37Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type37Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type37Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type37Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type37Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type37Message.data)
}
 void Type37Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type37Message.data)
}
 void Type37Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type37Message.data)
}
 ::std::string* Type37Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type37Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type37Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type37Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type37Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type37Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type38Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type38Message::Type38Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type38Message)
}

void Type38Message::InitAsDefaultInstance() {
}

Type38Message::Type38Message(const Type38Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type38Message)
}

void Type38Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type38Message::~Type38Message() {
  // @@protoc_insertion_point(destructor:tests.Type38Message)
  SharedDtor();
}

void Type38Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type38Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type38Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type38Message_descriptor_;
}

const Type38Message& Type38Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type38Message* Type38Message::default_instance_ = NULL;

Type38Message* Type38Message::New(::google::protobuf::Arena* arena) const {
  Type38Message* n = new Type38Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type38Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type38Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type38Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type38Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type38Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type38Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type38Message)
  return false;
#undef DO_
}

void Type38Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type38Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type38Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type38Message)
}

::google::protobuf::uint8* Type38Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type38Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type38Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type38Message)
  return target;
}

int Type38Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type38Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type38Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type38Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type38Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type38Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type38Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type38Message)
    MergeFrom(*source);
  }
}

void Type38Message::MergeFrom(const Type38Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type38Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type38Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type38Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type38Message::CopyFrom(const Type38Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type38Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type38Message::IsInitialized() const {

  return true;
}

void Type38Message::Swap(Type38Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type38Message::InternalSwap(Type38Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type38Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type38Message_descriptor_;
  metadata.reflection = Type38Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type38Message

// optional string data = 1;
bool Type38Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type38Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type38Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type38Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type38Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type38Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type38Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type38Message.data)
}
 void Type38Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type38Message.data)
}
 void Type38Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type38Message.data)
}
 ::std::string* Type38Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type38Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type38Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type38Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type38Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type38Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type39Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type39Message::Type39Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type39Message)
}

void Type39Message::InitAsDefaultInstance() {
}

Type39Message::Type39Message(const Type39Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type39Message)
}

void Type39Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type39Message::~Type39Message() {
  // @@protoc_insertion_point(destructor:tests.Type39Message)
  SharedDtor();
}

void Type39Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type39Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type39Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type39Message_descriptor_;
}

const Type39Message& Type39Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type39Message* Type39Message::default_instance_ = NULL;

Type39Message* Type39Message::New(::google::protobuf::Arena* arena) const {
  Type39Message* n = new Type39Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type39Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type39Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type39Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type39Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type39Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type39Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type39Message)
  return false;
#undef DO_
}

void Type39Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type39Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type39Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type39Message)
}

::google::protobuf::uint8* Type39Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type39Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type39Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type39Message)
  return target;
}

int Type39Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type39Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type39Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type39Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type39Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type39Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type39Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type39Message)
    MergeFrom(*source);
  }
}

void Type39Message::MergeFrom(const Type39Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type39Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type39Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type39Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type39Message::CopyFrom(const Type39Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type39Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type39Message::IsInitialized() const {

  return true;
}

void Type39Message::Swap(Type39Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type39Message::InternalSwap(Type39Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type39Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type39Message_descriptor_;
  metadata.reflection = Type39Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type39Message

// optional string data = 1;
bool Type39Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type39Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type39Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type39Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type39Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type39Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type39Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type39Message.data)
}
 void Type39Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type39Message.data)
}
 void Type39Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type39Message.data)
}
 ::std::string* Type39Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type39Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type39Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type39Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type39Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type39Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type40Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type40Message::Type40Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type40Message)
}

void Type40Message::InitAsDefaultInstance() {
}

Type40Message::Type40Message(const Type40Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type40Message)
}

void Type40Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type40Message::~Type40Message() {
  // @@protoc_insertion_point(destructor:tests.Type40Message)
  SharedDtor();
}

void Type40Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type40Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type40Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type40Message_descriptor_;
}

const Type40Message& Type40Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type40Message* Type40Message::default_instance_ = NULL;

Type40Message* Type40Message::New(::google::protobuf::Arena* arena) const {
  Type40Message* n = new Type40Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type40Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type40Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type40Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type40Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type40Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type40Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type40Message)
  return false;
#undef DO_
}

void Type40Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type40Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type40Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type40Message)
}

::google::protobuf::uint8* Type40Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type40Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type40Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type40Message)
  return target;
}

int Type40Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type40Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type40Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type40Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type40Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type40Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type40Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type40Message)
    MergeFrom(*source);
  }
}

void Type40Message::MergeFrom(const Type40Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type40Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type40Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type40Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type40Message::CopyFrom(const Type40Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type40Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type40Message::IsInitialized() const {

  return true;
}

void Type40Message::Swap(Type40Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type40Message::InternalSwap(Type40Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type40Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type40Message_descriptor_;
  metadata.reflection = Type40Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type40Message

// optional string data = 1;
bool Type40Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type40Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type40Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type40Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type40Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type40Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type40Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type40Message.data)
}
 void Type40Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type40Message.data)
}
 void Type40Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type40Message.data)
}
 ::std::string* Type40Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type40Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type40Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type40Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type40Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type40Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type41Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type41Message::Type41Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type41Message)
}

void Type41Message::InitAsDefaultInstance() {
}

Type41Message::Type41Message(const Type41Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type41Message)
}

void Type41Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type41Message::~Type41Message() {
  // @@protoc_insertion_point(destructor:tests.Type41Message)
  SharedDtor();
}

void Type41Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type41Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type41Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type41Message_descriptor_;
}

const Type41Message& Type41Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type41Message* Type41Message::default_instance_ = NULL;

Type41Message* Type41Message::New(::google::protobuf::Arena* arena) const {
  Type41Message* n = new Type41Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type41Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type41Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type41Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type41Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type41Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type41Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type41Message)
  return false;
#undef DO_
}

void Type41Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type41Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type41Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type41Message)
}

::google::protobuf::uint8* Type41Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type41Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type41Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type41Message)
  return target;
}

int Type41Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type41Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type41Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type41Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type41Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type41Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type41Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type41Message)
    MergeFrom(*source);
  }
}

void Type41Message::MergeFrom(const Type41Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type41Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type41Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type41Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type41Message::CopyFrom(const Type41Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type41Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type41Message::IsInitialized() const {

  return true;
}

void Type41Message::Swap(Type41Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type41Message::InternalSwap(Type41Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type41Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type41Message_descriptor_;
  metadata.reflection = Type41Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type41Message

// optional string data = 1;
bool Type41Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type41Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type41Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type41Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type41Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type41Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type41Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type41Message.data)
}
 void Type41Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type41Message.data)
}
 void Type41Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type41Message.data)
}
 ::std::string* Type41Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type41Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type41Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type41Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type41Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type41Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type42Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type42Message::Type42Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type42Message)
}

void Type42Message::InitAsDefaultInstance() {
}

Type42Message::Type42Message(const Type42Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type42Message)
}

void Type42Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type42Message::~Type42Message() {
  // @@protoc_insertion_point(destructor:tests.Type42Message)
  SharedDtor();
}

void Type42Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type42Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type42Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type42Message_descriptor_;
}

const Type42Message& Type42Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type42Message* Type42Message::default_instance_ = NULL;

Type42Message* Type42Message::New(::google::protobuf::Arena* arena) const {
  Type42Message* n = new Type42Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type42Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type42Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type42Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type42Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type42Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type42Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type42Message)
  return false;
#undef DO_
}

void Type42Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type42Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type42Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type42Message)
}

::google::protobuf::uint8* Type42Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type42Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type42Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type42Message)
  return target;
}

int Type42Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type42Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type42Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type42Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type42Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type42Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type42Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type42Message)
    MergeFrom(*source);
  }
}

void Type42Message::MergeFrom(const Type42Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type42Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type42Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type42Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type42Message::CopyFrom(const Type42Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type42Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type42Message::IsInitialized() const {

  return true;
}

void Type42Message::Swap(Type42Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type42Message::InternalSwap(Type42Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type42Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type42Message_descriptor_;
  metadata.reflection = Type42Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type42Message

// optional string data = 1;
bool Type42Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type42Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type42Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type42Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type42Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type42Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type42Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type42Message.data)
}
 void Type42Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type42Message.data)
}
 void Type42Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type42Message.data)
}
 ::std::string* Type42Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type42Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type42Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type42Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type42Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type42Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type43Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type43Message::Type43Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type43Message)
}

void Type43Message::InitAsDefaultInstance() {
}

Type43Message::Type43Message(const Type43Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type43Message)
}

void Type43Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type43Message::~Type43Message() {
  // @@protoc_insertion_point(destructor:tests.Type43Message)
  SharedDtor();
}

void Type43Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type43Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type43Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type43Message_descriptor_;
}

const Type43Message& Type43Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type43Message* Type43Message::default_instance_ = NULL;

Type43Message* Type43Message::New(::google::protobuf::Arena* arena) const {
  Type43Message* n = new Type43Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type43Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type43Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type43Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type43Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type43Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type43Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type43Message)
  return false;
#undef DO_
}

void Type43Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type43Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type43Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type43Message)
}

::google::protobuf::uint8* Type43Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type43Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type43Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type43Message)
  return target;
}

int Type43Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type43Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type43Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type43Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type43Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type43Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type43Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type43Message)
    MergeFrom(*source);
  }
}

void Type43Message::MergeFrom(const Type43Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type43Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type43Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type43Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type43Message::CopyFrom(const Type43Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type43Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type43Message::IsInitialized() const {

  return true;
}

void Type43Message::Swap(Type43Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type43Message::InternalSwap(Type43Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type43Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type43Message_descriptor_;
  metadata.reflection = Type43Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type43Message

// optional string data = 1;
bool Type43Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type43Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type43Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type43Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type43Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type43Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type43Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type43Message.data)
}
 void Type43Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type43Message.data)
}
 void Type43Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type43Message.data)
}
 ::std::string* Type43Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type43Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type43Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type43Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type43Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type43Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type44Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type44Message::Type44Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type44Message)
}

void Type44Message::InitAsDefaultInstance() {
}

Type44Message::Type44Message(const Type44Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type44Message)
}

void Type44Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type44Message::~Type44Message() {
  // @@protoc_insertion_point(destructor:tests.Type44Message)
  SharedDtor();
}

void Type44Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type44Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type44Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type44Message_descriptor_;
}

const Type44Message& Type44Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type44Message* Type44Message::default_instance_ = NULL;

Type44Message* Type44Message::New(::google::protobuf::Arena* arena) const {
  Type44Message* n = new Type44Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type44Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type44Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type44Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type44Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type44Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type44Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type44Message)
  return false;
#undef DO_
}

void Type44Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type44Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type44Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type44Message)
}

::google::protobuf::uint8* Type44Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type44Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type44Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type44Message)
  return target;
}

int Type44Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type44Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type44Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type44Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type44Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type44Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type44Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type44Message)
    MergeFrom(*source);
  }
}

void Type44Message::MergeFrom(const Type44Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type44Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type44Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type44Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type44Message::CopyFrom(const Type44Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type44Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type44Message::IsInitialized() const {

  return true;
}

void Type44Message::Swap(Type44Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type44Message::InternalSwap(Type44Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type44Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type44Message_descriptor_;
  metadata.reflection = Type44Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type44Message

// optional string data = 1;
bool Type44Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type44Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type44Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type44Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type44Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type44Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type44Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type44Message.data)
}
 void Type44Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type44Message.data)
}
 void Type44Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type44Message.data)
}
 ::std::string* Type44Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type44Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type44Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type44Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type44Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type44Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type45Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type45Message::Type45Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type45Message)
}

void Type45Message::InitAsDefaultInstance() {
}

Type45Message::Type45Message(const Type45Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type45Message)
}

void Type45Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type45Message::~Type45Message() {
  // @@protoc_insertion_point(destructor:tests.Type45Message)
  SharedDtor();
}

void Type45Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type45Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type45Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type45Message_descriptor_;
}

const Type45Message& Type45Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type45Message* Type45Message::default_instance_ = NULL;

Type45Message* Type45Message::New(::google::protobuf::Arena* arena) const {
  Type45Message* n = new Type45Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type45Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type45Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type45Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type45Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type45Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type45Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type45Message)
  return false;
#undef DO_
}

void Type45Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type45Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type45Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type45Message)
}

::google::protobuf::uint8* Type45Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type45Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type45Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type45Message)
  return target;
}

int Type45Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type45Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type45Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type45Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type45Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type45Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type45Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type45Message)
    MergeFrom(*source);
  }
}

void Type45Message::MergeFrom(const Type45Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type45Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type45Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type45Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type45Message::CopyFrom(const Type45Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type45Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type45Message::IsInitialized() const {

  return true;
}

void Type45Message::Swap(Type45Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type45Message::InternalSwap(Type45Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type45Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type45Message_descriptor_;
  metadata.reflection = Type45Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type45Message

// optional string data = 1;
bool Type45Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type45Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type45Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type45Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type45Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type45Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type45Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type45Message.data)
}
 void Type45Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type45Message.data)
}
 void Type45Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type45Message.data)
}
 ::std::string* Type45Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type45Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type45Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type45Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type45Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type45Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type46Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type46Message::Type46Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type46Message)
}

void Type46Message::InitAsDefaultInstance() {
}

Type46Message::Type46Message(const Type46Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type46Message)
}

void Type46Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type46Message::~Type46Message() {
  // @@protoc_insertion_point(destructor:tests.Type46Message)
  SharedDtor();
}

void Type46Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type46Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type46Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type46Message_descriptor_;
}

const Type46Message& Type46Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type46Message* Type46Message::default_instance_ = NULL;

Type46Message* Type46Message::New(::google::protobuf::Arena* arena) const {
  Type46Message* n = new Type46Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type46Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type46Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type46Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type46Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type46Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type46Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type46Message)
  return false;
#undef DO_
}

void Type46Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type46Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type46Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type46Message)
}

::google::protobuf::uint8* Type46Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type46Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type46Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type46Message)
  return target;
}

int Type46Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type46Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type46Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type46Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type46Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type46Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type46Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type46Message)
    MergeFrom(*source);
  }
}

void Type46Message::MergeFrom(const Type46Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type46Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type46Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type46Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type46Message::CopyFrom(const Type46Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type46Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type46Message::IsInitialized() const {

  return true;
}

void Type46Message::Swap(Type46Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type46Message::InternalSwap(Type46Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type46Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type46Message_descriptor_;
  metadata.reflection = Type46Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type46Message

// optional string data = 1;
bool Type46Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type46Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type46Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type46Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type46Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type46Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type46Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type46Message.data)
}
 void Type46Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type46Message.data)
}
 void Type46Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type46Message.data)
}
 ::std::string* Type46Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type46Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type46Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type46Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type46Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type46Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type47Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type47Message::Type47Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type47Message)
}

void Type47Message::InitAsDefaultInstance() {
}

Type47Message::Type47Message(const Type47Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type47Message)
}

void Type47Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type47Message::~Type47Message() {
  // @@protoc_insertion_point(destructor:tests.Type47Message)
  SharedDtor();
}

void Type47Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type47Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type47Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type47Message_descriptor_;
}

const Type47Message& Type47Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type47Message* Type47Message::default_instance_ = NULL;

Type47Message* Type47Message::New(::google::protobuf::Arena* arena) const {
  Type47Message* n = new Type47Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type47Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type47Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type47Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type47Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type47Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type47Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type47Message)
  return false;
#undef DO_
}

void Type47Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type47Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type47Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type47Message)
}

::google::protobuf::uint8* Type47Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type47Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type47Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type47Message)
  return target;
}

int Type47Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type47Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type47Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type47Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type47Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type47Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type47Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type47Message)
    MergeFrom(*source);
  }
}

void Type47Message::MergeFrom(const Type47Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type47Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type47Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type47Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type47Message::CopyFrom(const Type47Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type47Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type47Message::IsInitialized() const {

  return true;
}

void Type47Message::Swap(Type47Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type47Message::InternalSwap(Type47Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type47Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type47Message_descriptor_;
  metadata.reflection = Type47Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type47Message

// optional string data = 1;
bool Type47Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type47Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type47Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type47Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type47Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type47Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type47Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type47Message.data)
}
 void Type47Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type47Message.data)
}
 void Type47Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type47Message.data)
}
 ::std::string* Type47Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type47Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type47Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type47Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type47Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type47Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type48Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type48Message::Type48Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type48Message)
}

void Type48Message::InitAsDefaultInstance() {
}

Type48Message::Type48Message(const Type48Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type48Message)
}

void Type48Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type48Message::~Type48Message() {
  // @@protoc_insertion_point(destructor:tests.Type48Message)
  SharedDtor();
}

void Type48Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type48Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type48Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type48Message_descriptor_;
}

const Type48Message& Type48Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type48Message* Type48Message::default_instance_ = NULL;

Type48Message* Type48Message::New(::google::protobuf::Arena* arena) const {
  Type48Message* n = new Type48Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type48Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type48Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type48Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type48Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type48Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type48Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type48Message)
  return false;
#undef DO_
}

void Type48Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type48Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type48Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type48Message)
}

::google::protobuf::uint8* Type48Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type48Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type48Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type48Message)
  return target;
}

int Type48Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type48Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type48Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type48Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type48Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type48Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type48Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type48Message)
    MergeFrom(*source);
  }
}

void Type48Message::MergeFrom(const Type48Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type48Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type48Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type48Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type48Message::CopyFrom(const Type48Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type48Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type48Message::IsInitialized() const {

  return true;
}

void Type48Message::Swap(Type48Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type48Message::InternalSwap(Type48Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type48Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type48Message_descriptor_;
  metadata.reflection = Type48Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type48Message

// optional string data = 1;
bool Type48Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type48Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type48Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type48Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type48Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type48Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type48Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type48Message.data)
}
 void Type48Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type48Message.data)
}
 void Type48Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type48Message.data)
}
 ::std::string* Type48Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type48Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type48Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type48Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type48Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type48Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type49Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type49Message::Type49Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type49Message)
}

void Type49Message::InitAsDefaultInstance() {
}

Type49Message::Type49Message(const Type49Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type49Message)
}

void Type49Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type49Message::~Type49Message() {
  // @@protoc_insertion_point(destructor:tests.Type49Message)
  SharedDtor();
}

void Type49Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type49Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type49Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type49Message_descriptor_;
}

const Type49Message& Type49Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type49Message* Type49Message::default_instance_ = NULL;

Type49Message* Type49Message::New(::google::protobuf::Arena* arena) const {
  Type49Message* n = new Type49Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type49Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type49Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type49Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type49Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type49Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type49Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type49Message)
  return false;
#undef DO_
}

void Type49Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type49Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type49Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type49Message)
}

::google::protobuf::uint8* Type49Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type49Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type49Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type49Message)
  return target;
}

int Type49Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type49Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type49Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type49Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type49Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type49Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type49Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type49Message)
    MergeFrom(*source);
  }
}

void Type49Message::MergeFrom(const Type49Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type49Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type49Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type49Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type49Message::CopyFrom(const Type49Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type49Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type49Message::IsInitialized() const {

  return true;
}

void Type49Message::Swap(Type49Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type49Message::InternalSwap(Type49Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type49Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type49Message_descriptor_;
  metadata.reflection = Type49Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type49Message

// optional string data = 1;
bool Type49Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type49Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type49Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type49Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type49Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type49Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type49Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type49Message.data)
}
 void Type49Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type49Message.data)
}
 void Type49Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type49Message.data)
}
 ::std::string* Type49Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type49Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type49Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type49Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type49Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type49Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type50Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type50Message::Type50Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type50Message)
}

void Type50Message::InitAsDefaultInstance() {
}

Type50Message::Type50Message(const Type50Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type50Message)
}

void Type50Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type50Message::~Type50Message() {
  // @@protoc_insertion_point(destructor:tests.Type50Message)
  SharedDtor();
}

void Type50Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type50Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type50Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type50Message_descriptor_;
}

const Type50Message& Type50Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type50Message* Type50Message::default_instance_ = NULL;

Type50Message* Type50Message::New(::google::protobuf::Arena* arena) const {
  Type50Message* n = new Type50Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type50Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type50Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type50Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type50Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type50Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type50Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type50Message)
  return false;
#undef DO_
}

void Type50Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type50Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type50Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type50Message)
}

::google::protobuf::uint8* Type50Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type50Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type50Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type50Message)
  return target;
}

int Type50Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type50Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type50Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type50Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type50Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type50Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type50Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type50Message)
    MergeFrom(*source);
  }
}

void Type50Message::MergeFrom(const Type50Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type50Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type50Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type50Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type50Message::CopyFrom(const Type50Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type50Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type50Message::IsInitialized() const {

  return true;
}

void Type50Message::Swap(Type50Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type50Message::InternalSwap(Type50Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type50Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type50Message_descriptor_;
  metadata.reflection = Type50Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type50Message

// optional string data = 1;
bool Type50Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type50Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type50Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type50Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type50Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type50Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type50Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type50Message.data)
}
 void Type50Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type50Message.data)
}
 void Type50Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type50Message.data)
}
 ::std::string* Type50Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type50Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type50Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type50Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type50Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type50Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type51Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type51Message::Type51Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type51Message)
}

void Type51Message::InitAsDefaultInstance() {
}

Type51Message::Type51Message(const Type51Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type51Message)
}

void Type51Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type51Message::~Type51Message() {
  // @@protoc_insertion_point(destructor:tests.Type51Message)
  SharedDtor();
}

void Type51Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type51Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type51Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type51Message_descriptor_;
}

const Type51Message& Type51Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type51Message* Type51Message::default_instance_ = NULL;

Type51Message* Type51Message::New(::google::protobuf::Arena* arena) const {
  Type51Message* n = new Type51Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type51Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type51Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type51Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type51Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type51Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type51Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type51Message)
  return false;
#undef DO_
}

void Type51Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type51Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type51Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type51Message)
}

::google::protobuf::uint8* Type51Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type51Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type51Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type51Message)
  return target;
}

int Type51Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type51Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type51Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type51Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type51Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type51Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type51Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type51Message)
    MergeFrom(*source);
  }
}

void Type51Message::MergeFrom(const Type51Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type51Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type51Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type51Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type51Message::CopyFrom(const Type51Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type51Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type51Message::IsInitialized() const {

  return true;
}

void Type51Message::Swap(Type51Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type51Message::InternalSwap(Type51Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type51Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type51Message_descriptor_;
  metadata.reflection = Type51Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type51Message

// optional string data = 1;
bool Type51Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type51Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type51Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type51Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type51Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type51Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type51Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type51Message.data)
}
 void Type51Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type51Message.data)
}
 void Type51Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type51Message.data)
}
 ::std::string* Type51Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type51Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type51Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type51Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type51Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type51Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type52Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type52Message::Type52Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type52Message)
}

void Type52Message::InitAsDefaultInstance() {
}

Type52Message::Type52Message(const Type52Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type52Message)
}

void Type52Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type52Message::~Type52Message() {
  // @@protoc_insertion_point(destructor:tests.Type52Message)
  SharedDtor();
}

void Type52Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type52Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type52Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type52Message_descriptor_;
}

const Type52Message& Type52Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type52Message* Type52Message::default_instance_ = NULL;

Type52Message* Type52Message::New(::google::protobuf::Arena* arena) const {
  Type52Message* n = new Type52Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type52Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type52Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type52Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type52Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type52Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type52Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type52Message)
  return false;
#undef DO_
}

void Type52Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type52Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type52Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type52Message)
}

::google::protobuf::uint8* Type52Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type52Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type52Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type52Message)
  return target;
}

int Type52Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type52Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type52Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type52Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type52Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type52Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type52Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type52Message)
    MergeFrom(*source);
  }
}

void Type52Message::MergeFrom(const Type52Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type52Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type52Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type52Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type52Message::CopyFrom(const Type52Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type52Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type52Message::IsInitialized() const {

  return true;
}

void Type52Message::Swap(Type52Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type52Message::InternalSwap(Type52Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type52Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type52Message_descriptor_;
  metadata.reflection = Type52Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type52Message

// optional string data = 1;
bool Type52Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type52Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type52Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type52Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type52Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type52Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type52Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type52Message.data)
}
 void Type52Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type52Message.data)
}
 void Type52Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type52Message.data)
}
 ::std::string* Type52Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type52Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type52Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type52Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type52Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type52Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type53Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type53Message::Type53Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type53Message)
}

void Type53Message::InitAsDefaultInstance() {
}

Type53Message::Type53Message(const Type53Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type53Message)
}

void Type53Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type53Message::~Type53Message() {
  // @@protoc_insertion_point(destructor:tests.Type53Message)
  SharedDtor();
}

void Type53Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type53Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type53Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type53Message_descriptor_;
}

const Type53Message& Type53Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type53Message* Type53Message::default_instance_ = NULL;

Type53Message* Type53Message::New(::google::protobuf::Arena* arena) const {
  Type53Message* n = new Type53Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type53Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type53Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type53Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type53Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type53Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type53Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type53Message)
  return false;
#undef DO_
}

void Type53Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type53Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type53Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type53Message)
}

::google::protobuf::uint8* Type53Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type53Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type53Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type53Message)
  return target;
}

int Type53Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type53Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type53Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type53Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type53Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type53Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type53Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type53Message)
    MergeFrom(*source);
  }
}

void Type53Message::MergeFrom(const Type53Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type53Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type53Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type53Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type53Message::CopyFrom(const Type53Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type53Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type53Message::IsInitialized() const {

  return true;
}

void Type53Message::Swap(Type53Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type53Message::InternalSwap(Type53Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type53Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type53Message_descriptor_;
  metadata.reflection = Type53Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type53Message

// optional string data = 1;
bool Type53Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type53Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type53Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type53Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type53Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type53Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type53Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type53Message.data)
}
 void Type53Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type53Message.data)
}
 void Type53Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type53Message.data)
}
 ::std::string* Type53Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type53Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type53Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type53Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type53Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type53Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type54Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type54Message::Type54Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type54Message)
}

void Type54Message::InitAsDefaultInstance() {
}

Type54Message::Type54Message(const Type54Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type54Message)
}

void Type54Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type54Message::~Type54Message() {
  // @@protoc_insertion_point(destructor:tests.Type54Message)
  SharedDtor();
}

void Type54Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type54Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type54Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type54Message_descriptor_;
}

const Type54Message& Type54Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type54Message* Type54Message::default_instance_ = NULL;

Type54Message* Type54Message::New(::google::protobuf::Arena* arena) const {
  Type54Message* n = new Type54Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type54Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type54Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type54Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type54Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type54Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type54Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type54Message)
  return false;
#undef DO_
}

void Type54Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type54Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type54Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type54Message)
}

::google::protobuf::uint8* Type54Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type54Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type54Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type54Message)
  return target;
}

int Type54Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type54Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type54Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type54Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type54Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type54Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type54Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type54Message)
    MergeFrom(*source);
  }
}

void Type54Message::MergeFrom(const Type54Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type54Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type54Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type54Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type54Message::CopyFrom(const Type54Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type54Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type54Message::IsInitialized() const {

  return true;
}

void Type54Message::Swap(Type54Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type54Message::InternalSwap(Type54Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type54Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type54Message_descriptor_;
  metadata.reflection = Type54Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type54Message

// optional string data = 1;
bool Type54Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type54Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type54Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type54Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type54Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type54Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type54Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type54Message.data)
}
 void Type54Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type54Message.data)
}
 void Type54Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type54Message.data)
}
 ::std::string* Type54Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type54Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type54Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type54Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type54Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type54Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type55Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type55Message::Type55Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type55Message)
}

void Type55Message::InitAsDefaultInstance() {
}

Type55Message::Type55Message(const Type55Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type55Message)
}

void Type55Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type55Message::~Type55Message() {
  // @@protoc_insertion_point(destructor:tests.Type55Message)
  SharedDtor();
}

void Type55Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type55Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type55Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type55Message_descriptor_;
}

const Type55Message& Type55Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type55Message* Type55Message::default_instance_ = NULL;

Type55Message* Type55Message::New(::google::protobuf::Arena* arena) const {
  Type55Message* n = new Type55Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type55Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type55Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type55Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type55Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type55Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type55Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type55Message)
  return false;
#undef DO_
}

void Type55Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type55Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type55Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type55Message)
}

::google::protobuf::uint8* Type55Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type55Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type55Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type55Message)
  return target;
}

int Type55Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type55Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type55Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type55Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type55Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type55Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type55Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type55Message)
    MergeFrom(*source);
  }
}

void Type55Message::MergeFrom(const Type55Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type55Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type55Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type55Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type55Message::CopyFrom(const Type55Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type55Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type55Message::IsInitialized() const {

  return true;
}

void Type55Message::Swap(Type55Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type55Message::InternalSwap(Type55Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type55Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type55Message_descriptor_;
  metadata.reflection = Type55Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type55Message

// optional string data = 1;
bool Type55Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type55Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type55Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type55Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type55Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type55Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type55Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type55Message.data)
}
 void Type55Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type55Message.data)
}
 void Type55Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type55Message.data)
}
 ::std::string* Type55Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type55Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type55Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type55Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type55Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type55Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type56Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type56Message::Type56Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type56Message)
}

void Type56Message::InitAsDefaultInstance() {
}

Type56Message::Type56Message(const Type56Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type56Message)
}

void Type56Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type56Message::~Type56Message() {
  // @@protoc_insertion_point(destructor:tests.Type56Message)
  SharedDtor();
}

void Type56Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type56Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type56Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type56Message_descriptor_;
}

const Type56Message& Type56Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type56Message* Type56Message::default_instance_ = NULL;

Type56Message* Type56Message::New(::google::protobuf::Arena* arena) const {
  Type56Message* n = new Type56Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type56Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type56Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type56Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type56Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type56Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type56Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type56Message)
  return false;
#undef DO_
}

void Type56Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type56Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type56Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type56Message)
}

::google::protobuf::uint8* Type56Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type56Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type56Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type56Message)
  return target;
}

int Type56Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type56Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type56Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type56Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type56Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type56Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type56Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type56Message)
    MergeFrom(*source);
  }
}

void Type56Message::MergeFrom(const Type56Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type56Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type56Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type56Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type56Message::CopyFrom(const Type56Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type56Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type56Message::IsInitialized() const {

  return true;
}

void Type56Message::Swap(Type56Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type56Message::InternalSwap(Type56Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type56Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type56Message_descriptor_;
  metadata.reflection = Type56Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type56Message

// optional string data = 1;
bool Type56Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type56Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type56Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type56Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type56Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type56Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type56Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type56Message.data)
}
 void Type56Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type56Message.data)
}
 void Type56Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type56Message.data)
}
 ::std::string* Type56Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type56Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type56Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type56Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type56Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type56Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type57Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type57Message::Type57Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type57Message)
}

void Type57Message::InitAsDefaultInstance() {
}

Type57Message::Type57Message(const Type57Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type57Message)
}

void Type57Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type57Message::~Type57Message() {
  // @@protoc_insertion_point(destructor:tests.Type57Message)
  SharedDtor();
}

void Type57Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type57Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type57Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type57Message_descriptor_;
}

const Type57Message& Type57Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type57Message* Type57Message::default_instance_ = NULL;

Type57Message* Type57Message::New(::google::protobuf::Arena* arena) const {
  Type57Message* n = new Type57Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type57Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type57Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type57Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type57Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type57Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type57Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type57Message)
  return false;
#undef DO_
}

void Type57Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type57Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type57Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type57Message)
}

::google::protobuf::uint8* Type57Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type57Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type57Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type57Message)
  return target;
}

int Type57Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type57Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type57Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type57Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type57Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type57Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type57Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type57Message)
    MergeFrom(*source);
  }
}

void Type57Message::MergeFrom(const Type57Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type57Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type57Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type57Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type57Message::CopyFrom(const Type57Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type57Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type57Message::IsInitialized() const {

  return true;
}

void Type57Message::Swap(Type57Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type57Message::InternalSwap(Type57Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type57Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type57Message_descriptor_;
  metadata.reflection = Type57Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type57Message

// optional string data = 1;
bool Type57Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type57Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type57Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type57Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type57Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type57Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type57Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type57Message.data)
}
 void Type57Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type57Message.data)
}
 void Type57Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type57Message.data)
}
 ::std::string* Type57Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type57Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type57Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type57Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type57Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type57Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type58Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type58Message::Type58Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type58Message)
}

void Type58Message::InitAsDefaultInstance() {
}

Type58Message::Type58Message(const Type58Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type58Message)
}

void Type58Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type58Message::~Type58Message() {
  // @@protoc_insertion_point(destructor:tests.Type58Message)
  SharedDtor();
}

void Type58Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type58Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type58Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type58Message_descriptor_;
}

const Type58Message& Type58Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type58Message* Type58Message::default_instance_ = NULL;

Type58Message* Type58Message::New(::google::protobuf::Arena* arena) const {
  Type58Message* n = new Type58Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type58Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type58Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type58Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type58Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type58Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type58Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type58Message)
  return false;
#undef DO_
}

void Type58Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type58Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type58Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type58Message)
}

::google::protobuf::uint8* Type58Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type58Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type58Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type58Message)
  return target;
}

int Type58Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type58Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type58Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type58Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type58Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type58Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type58Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type58Message)
    MergeFrom(*source);
  }
}

void Type58Message::MergeFrom(const Type58Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type58Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type58Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type58Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type58Message::CopyFrom(const Type58Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type58Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type58Message::IsInitialized() const {

  return true;
}

void Type58Message::Swap(Type58Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type58Message::InternalSwap(Type58Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type58Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type58Message_descriptor_;
  metadata.reflection = Type58Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type58Message

// optional string data = 1;
bool Type58Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type58Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type58Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type58Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type58Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type58Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type58Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type58Message.data)
}
 void Type58Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type58Message.data)
}
 void Type58Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type58Message.data)
}
 ::std::string* Type58Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type58Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type58Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type58Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type58Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type58Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type59Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type59Message::Type59Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type59Message)
}

void Type59Message::InitAsDefaultInstance() {
}

Type59Message::Type59Message(const Type59Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type59Message)
}

void Type59Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type59Message::~Type59Message() {
  // @@protoc_insertion_point(destructor:tests.Type59Message)
  SharedDtor();
}

void Type59Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type59Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type59Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type59Message_descriptor_;
}

const Type59Message& Type59Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type59Message* Type59Message::default_instance_ = NULL;

Type59Message* Type59Message::New(::google::protobuf::Arena* arena) const {
  Type59Message* n = new Type59Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type59Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type59Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type59Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type59Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type59Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type59Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type59Message)
  return false;
#undef DO_
}

void Type59Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type59Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type59Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type59Message)
}

::google::protobuf::uint8* Type59Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type59Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type59Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type59Message)
  return target;
}

int Type59Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type59Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type59Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type59Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type59Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type59Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type59Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type59Message)
    MergeFrom(*source);
  }
}

void Type59Message::MergeFrom(const Type59Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type59Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type59Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type59Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type59Message::CopyFrom(const Type59Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type59Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type59Message::IsInitialized() const {

  return true;
}

void Type59Message::Swap(Type59Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type59Message::InternalSwap(Type59Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type59Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type59Message_descriptor_;
  metadata.reflection = Type59Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type59Message

// optional string data = 1;
bool Type59Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type59Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type59Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type59Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type59Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type59Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type59Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type59Message.data)
}
 void Type59Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type59Message.data)
}
 void Type59Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type59Message.data)
}
 ::std::string* Type59Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type59Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type59Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type59Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type59Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type59Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type60Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type60Message::Type60Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type60Message)
}

void Type60Message::InitAsDefaultInstance() {
}

Type60Message::Type60Message(const Type60Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type60Message)
}

void Type60Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type60Message::~Type60Message() {
  // @@protoc_insertion_point(destructor:tests.Type60Message)
  SharedDtor();
}

void Type60Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type60Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type60Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type60Message_descriptor_;
}

const Type60Message& Type60Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type60Message* Type60Message::default_instance_ = NULL;

Type60Message* Type60Message::New(::google::protobuf::Arena* arena) const {
  Type60Message* n = new Type60Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type60Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type60Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type60Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type60Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type60Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type60Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type60Message)
  return false;
#undef DO_
}

void Type60Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type60Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type60Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type60Message)
}

::google::protobuf::uint8* Type60Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type60Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type60Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type60Message)
  return target;
}

int Type60Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type60Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type60Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type60Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type60Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type60Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type60Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type60Message)
    MergeFrom(*source);
  }
}

void Type60Message::MergeFrom(const Type60Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type60Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type60Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type60Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type60Message::CopyFrom(const Type60Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type60Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type60Message::IsInitialized() const {

  return true;
}

void Type60Message::Swap(Type60Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type60Message::InternalSwap(Type60Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type60Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type60Message_descriptor_;
  metadata.reflection = Type60Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type60Message

// optional string data = 1;
bool Type60Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type60Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type60Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type60Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type60Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type60Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type60Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type60Message.data)
}
 void Type60Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type60Message.data)
}
 void Type60Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type60Message.data)
}
 ::std::string* Type60Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type60Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type60Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type60Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type60Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type60Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type61Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type61Message::Type61Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type61Message)
}

void Type61Message::InitAsDefaultInstance() {
}

Type61Message::Type61Message(const Type61Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type61Message)
}

void Type61Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type61Message::~Type61Message() {
  // @@protoc_insertion_point(destructor:tests.Type61Message)
  SharedDtor();
}

void Type61Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type61Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type61Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type61Message_descriptor_;
}

const Type61Message& Type61Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type61Message* Type61Message::default_instance_ = NULL;

Type61Message* Type61Message::New(::google::protobuf::Arena* arena) const {
  Type61Message* n = new Type61Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type61Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type61Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type61Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type61Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type61Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type61Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type61Message)
  return false;
#undef DO_
}

void Type61Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type61Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type61Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type61Message)
}

::google::protobuf::uint8* Type61Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type61Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type61Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type61Message)
  return target;
}

int Type61Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type61Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type61Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type61Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type61Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type61Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type61Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type61Message)
    MergeFrom(*source);
  }
}

void Type61Message::MergeFrom(const Type61Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type61Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type61Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type61Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type61Message::CopyFrom(const Type61Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type61Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type61Message::IsInitialized() const {

  return true;
}

void Type61Message::Swap(Type61Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type61Message::InternalSwap(Type61Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type61Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type61Message_descriptor_;
  metadata.reflection = Type61Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type61Message

// optional string data = 1;
bool Type61Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type61Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type61Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type61Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type61Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type61Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type61Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type61Message.data)
}
 void Type61Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type61Message.data)
}
 void Type61Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type61Message.data)
}
 ::std::string* Type61Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type61Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type61Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type61Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type61Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type61Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type62Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type62Message::Type62Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type62Message)
}

void Type62Message::InitAsDefaultInstance() {
}

Type62Message::Type62Message(const Type62Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type62Message)
}

void Type62Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type62Message::~Type62Message() {
  // @@protoc_insertion_point(destructor:tests.Type62Message)
  SharedDtor();
}

void Type62Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type62Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type62Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type62Message_descriptor_;
}

const Type62Message& Type62Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type62Message* Type62Message::default_instance_ = NULL;

Type62Message* Type62Message::New(::google::protobuf::Arena* arena) const {
  Type62Message* n = new Type62Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type62Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type62Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type62Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type62Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type62Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type62Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type62Message)
  return false;
#undef DO_
}

void Type62Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type62Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type62Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type62Message)
}

::google::protobuf::uint8* Type62Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type62Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type62Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type62Message)
  return target;
}

int Type62Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type62Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type62Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type62Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type62Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type62Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type62Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type62Message)
    MergeFrom(*source);
  }
}

void Type62Message::MergeFrom(const Type62Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type62Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type62Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type62Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type62Message::CopyFrom(const Type62Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type62Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type62Message::IsInitialized() const {

  return true;
}

void Type62Message::Swap(Type62Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type62Message::InternalSwap(Type62Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type62Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type62Message_descriptor_;
  metadata.reflection = Type62Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type62Message

// optional string data = 1;
bool Type62Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type62Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type62Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type62Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type62Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type62Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type62Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type62Message.data)
}
 void Type62Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type62Message.data)
}
 void Type62Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type62Message.data)
}
 ::std::string* Type62Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type62Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type62Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type62Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type62Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type62Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type63Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type63Message::Type63Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type63Message)
}

void Type63Message::InitAsDefaultInstance() {
}

Type63Message::Type63Message(const Type63Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type63Message)
}

void Type63Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type63Message::~Type63Message() {
  // @@protoc_insertion_point(destructor:tests.Type63Message)
  SharedDtor();
}

void Type63Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type63Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type63Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type63Message_descriptor_;
}

const Type63Message& Type63Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type63Message* Type63Message::default_instance_ = NULL;

Type63Message* Type63Message::New(::google::protobuf::Arena* arena) const {
  Type63Message* n = new Type63Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type63Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type63Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type63Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type63Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type63Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type63Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type63Message)
  return false;
#undef DO_
}

void Type63Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type63Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type63Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type63Message)
}

::google::protobuf::uint8* Type63Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type63Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type63Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type63Message)
  return target;
}

int Type63Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type63Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type63Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type63Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type63Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type63Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type63Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type63Message)
    MergeFrom(*source);
  }
}

void Type63Message::MergeFrom(const Type63Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type63Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type63Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type63Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type63Message::CopyFrom(const Type63Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type63Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type63Message::IsInitialized() const {

  return true;
}

void Type63Message::Swap(Type63Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type63Message::InternalSwap(Type63Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type63Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type63Message_descriptor_;
  metadata.reflection = Type63Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type63Message

// optional string data = 1;
bool Type63Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type63Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type63Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type63Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type63Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type63Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type63Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type63Message.data)
}
 void Type63Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type63Message.data)
}
 void Type63Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type63Message.data)
}
 ::std::string* Type63Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type63Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type63Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type63Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type63Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type63Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type64Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type64Message::Type64Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type64Message)
}

void Type64Message::InitAsDefaultInstance() {
}

Type64Message::Type64Message(const Type64Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type64Message)
}

void Type64Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type64Message::~Type64Message() {
  // @@protoc_insertion_point(destructor:tests.Type64Message)
  SharedDtor();
}

void Type64Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type64Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type64Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type64Message_descriptor_;
}

const Type64Message& Type64Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type64Message* Type64Message::default_instance_ = NULL;

Type64Message* Type64Message::New(::google::protobuf::Arena* arena) const {
  Type64Message* n = new Type64Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type64Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type64Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type64Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type64Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type64Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type64Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type64Message)
  return false;
#undef DO_
}

void Type64Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type64Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type64Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type64Message)
}

::google::protobuf::uint8* Type64Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type64Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type64Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type64Message)
  return target;
}

int Type64Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type64Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type64Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type64Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type64Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type64Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type64Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type64Message)
    MergeFrom(*source);
  }
}

void Type64Message::MergeFrom(const Type64Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type64Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type64Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type64Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type64Message::CopyFrom(const Type64Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type64Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type64Message::IsInitialized() const {

  return true;
}

void Type64Message::Swap(Type64Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type64Message::InternalSwap(Type64Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type64Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type64Message_descriptor_;
  metadata.reflection = Type64Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type64Message

// optional string data = 1;
bool Type64Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type64Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type64Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type64Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type64Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type64Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type64Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type64Message.data)
}
 void Type64Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type64Message.data)
}
 void Type64Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type64Message.data)
}
 ::std::string* Type64Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type64Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type64Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type64Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type64Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type64Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type65Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type65Message::Type65Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type65Message)
}

void Type65Message::InitAsDefaultInstance() {
}

Type65Message::Type65Message(const Type65Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type65Message)
}

void Type65Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type65Message::~Type65Message() {
  // @@protoc_insertion_point(destructor:tests.Type65Message)
  SharedDtor();
}

void Type65Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type65Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type65Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type65Message_descriptor_;
}

const Type65Message& Type65Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type65Message* Type65Message::default_instance_ = NULL;

Type65Message* Type65Message::New(::google::protobuf::Arena* arena) const {
  Type65Message* n = new Type65Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type65Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type65Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type65Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type65Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type65Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type65Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type65Message)
  return false;
#undef DO_
}

void Type65Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type65Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type65Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type65Message)
}

::google::protobuf::uint8* Type65Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type65Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type65Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type65Message)
  return target;
}

int Type65Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type65Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type65Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type65Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type65Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type65Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type65Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type65Message)
    MergeFrom(*source);
  }
}

void Type65Message::MergeFrom(const Type65Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type65Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type65Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type65Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type65Message::CopyFrom(const Type65Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type65Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type65Message::IsInitialized() const {

  return true;
}

void Type65Message::Swap(Type65Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type65Message::InternalSwap(Type65Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type65Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type65Message_descriptor_;
  metadata.reflection = Type65Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type65Message

// optional string data = 1;
bool Type65Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type65Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type65Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type65Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type65Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type65Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type65Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type65Message.data)
}
 void Type65Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type65Message.data)
}
 void Type65Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type65Message.data)
}
 ::std::string* Type65Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type65Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type65Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type65Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type65Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type65Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type66Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type66Message::Type66Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type66Message)
}

void Type66Message::InitAsDefaultInstance() {
}

Type66Message::Type66Message(const Type66Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type66Message)
}

void Type66Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type66Message::~Type66Message() {
  // @@protoc_insertion_point(destructor:tests.Type66Message)
  SharedDtor();
}

void Type66Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type66Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type66Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type66Message_descriptor_;
}

const Type66Message& Type66Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type66Message* Type66Message::default_instance_ = NULL;

Type66Message* Type66Message::New(::google::protobuf::Arena* arena) const {
  Type66Message* n = new Type66Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type66Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type66Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type66Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type66Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type66Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type66Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type66Message)
  return false;
#undef DO_
}

void Type66Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type66Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type66Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type66Message)
}

::google::protobuf::uint8* Type66Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type66Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type66Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type66Message)
  return target;
}

int Type66Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type66Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type66Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type66Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type66Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type66Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type66Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type66Message)
    MergeFrom(*source);
  }
}

void Type66Message::MergeFrom(const Type66Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type66Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type66Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type66Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type66Message::CopyFrom(const Type66Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type66Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type66Message::IsInitialized() const {

  return true;
}

void Type66Message::Swap(Type66Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type66Message::InternalSwap(Type66Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type66Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type66Message_descriptor_;
  metadata.reflection = Type66Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type66Message

// optional string data = 1;
bool Type66Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type66Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type66Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type66Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type66Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type66Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type66Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type66Message.data)
}
 void Type66Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type66Message.data)
}
 void Type66Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type66Message.data)
}
 ::std::string* Type66Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type66Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type66Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type66Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type66Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type66Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type67Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type67Message::Type67Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type67Message)
}

void Type67Message::InitAsDefaultInstance() {
}

Type67Message::Type67Message(const Type67Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type67Message)
}

void Type67Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type67Message::~Type67Message() {
  // @@protoc_insertion_point(destructor:tests.Type67Message)
  SharedDtor();
}

void Type67Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type67Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type67Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type67Message_descriptor_;
}

const Type67Message& Type67Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type67Message* Type67Message::default_instance_ = NULL;

Type67Message* Type67Message::New(::google::protobuf::Arena* arena) const {
  Type67Message* n = new Type67Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type67Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type67Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type67Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type67Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type67Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type67Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type67Message)
  return false;
#undef DO_
}

void Type67Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type67Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type67Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type67Message)
}

::google::protobuf::uint8* Type67Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type67Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type67Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type67Message)
  return target;
}

int Type67Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type67Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type67Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type67Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type67Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type67Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type67Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type67Message)
    MergeFrom(*source);
  }
}

void Type67Message::MergeFrom(const Type67Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type67Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type67Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type67Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type67Message::CopyFrom(const Type67Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type67Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type67Message::IsInitialized() const {

  return true;
}

void Type67Message::Swap(Type67Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type67Message::InternalSwap(Type67Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type67Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type67Message_descriptor_;
  metadata.reflection = Type67Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type67Message

// optional string data = 1;
bool Type67Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type67Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type67Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type67Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type67Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type67Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type67Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type67Message.data)
}
 void Type67Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type67Message.data)
}
 void Type67Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type67Message.data)
}
 ::std::string* Type67Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type67Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type67Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type67Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type67Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type67Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type68Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type68Message::Type68Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type68Message)
}

void Type68Message::InitAsDefaultInstance() {
}

Type68Message::Type68Message(const Type68Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type68Message)
}

void Type68Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type68Message::~Type68Message() {
  // @@protoc_insertion_point(destructor:tests.Type68Message)
  SharedDtor();
}

void Type68Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type68Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type68Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type68Message_descriptor_;
}

const Type68Message& Type68Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type68Message* Type68Message::default_instance_ = NULL;

Type68Message* Type68Message::New(::google::protobuf::Arena* arena) const {
  Type68Message* n = new Type68Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type68Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type68Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type68Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type68Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type68Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type68Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type68Message)
  return false;
#undef DO_
}

void Type68Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type68Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type68Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type68Message)
}

::google::protobuf::uint8* Type68Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type68Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type68Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type68Message)
  return target;
}

int Type68Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type68Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type68Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type68Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type68Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type68Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type68Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type68Message)
    MergeFrom(*source);
  }
}

void Type68Message::MergeFrom(const Type68Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type68Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type68Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type68Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type68Message::CopyFrom(const Type68Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type68Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type68Message::IsInitialized() const {

  return true;
}

void Type68Message::Swap(Type68Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type68Message::InternalSwap(Type68Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type68Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type68Message_descriptor_;
  metadata.reflection = Type68Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type68Message

// optional string data = 1;
bool Type68Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type68Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type68Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type68Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type68Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type68Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type68Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type68Message.data)
}
 void Type68Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type68Message.data)
}
 void Type68Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type68Message.data)
}
 ::std::string* Type68Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type68Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type68Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type68Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type68Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type68Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type69Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type69Message::Type69Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type69Message)
}

void Type69Message::InitAsDefaultInstance() {
}

Type69Message::Type69Message(const Type69Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type69Message)
}

void Type69Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type69Message::~Type69Message() {
  // @@protoc_insertion_point(destructor:tests.Type69Message)
  SharedDtor();
}

void Type69Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type69Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type69Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type69Message_descriptor_;
}

const Type69Message& Type69Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type69Message* Type69Message::default_instance_ = NULL;

Type69Message* Type69Message::New(::google::protobuf::Arena* arena) const {
  Type69Message* n = new Type69Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type69Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type69Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type69Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type69Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type69Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type69Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type69Message)
  return false;
#undef DO_
}

void Type69Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type69Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type69Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type69Message)
}

::google::protobuf::uint8* Type69Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type69Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type69Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type69Message)
  return target;
}

int Type69Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type69Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type69Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type69Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type69Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type69Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type69Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type69Message)
    MergeFrom(*source);
  }
}

void Type69Message::MergeFrom(const Type69Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type69Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type69Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type69Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type69Message::CopyFrom(const Type69Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type69Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type69Message::IsInitialized() const {

  return true;
}

void Type69Message::Swap(Type69Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type69Message::InternalSwap(Type69Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type69Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type69Message_descriptor_;
  metadata.reflection = Type69Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type69Message

// optional string data = 1;
bool Type69Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type69Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type69Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type69Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type69Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type69Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type69Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type69Message.data)
}
 void Type69Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type69Message.data)
}
 void Type69Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type69Message.data)
}
 ::std::string* Type69Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type69Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type69Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type69Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type69Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type69Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type70Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type70Message::Type70Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type70Message)
}

void Type70Message::InitAsDefaultInstance() {
}

Type70Message::Type70Message(const Type70Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type70Message)
}

void Type70Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type70Message::~Type70Message() {
  // @@protoc_insertion_point(destructor:tests.Type70Message)
  SharedDtor();
}

void Type70Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type70Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type70Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type70Message_descriptor_;
}

const Type70Message& Type70Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type70Message* Type70Message::default_instance_ = NULL;

Type70Message* Type70Message::New(::google::protobuf::Arena* arena) const {
  Type70Message* n = new Type70Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type70Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type70Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type70Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type70Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type70Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type70Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type70Message)
  return false;
#undef DO_
}

void Type70Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type70Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type70Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type70Message)
}

::google::protobuf::uint8* Type70Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type70Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type70Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type70Message)
  return target;
}

int Type70Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type70Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type70Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type70Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type70Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type70Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type70Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type70Message)
    MergeFrom(*source);
  }
}

void Type70Message::MergeFrom(const Type70Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type70Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type70Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type70Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type70Message::CopyFrom(const Type70Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type70Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type70Message::IsInitialized() const {

  return true;
}

void Type70Message::Swap(Type70Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type70Message::InternalSwap(Type70Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type70Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type70Message_descriptor_;
  metadata.reflection = Type70Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type70Message

// optional string data = 1;
bool Type70Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type70Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type70Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type70Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type70Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type70Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type70Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type70Message.data)
}
 void Type70Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type70Message.data)
}
 void Type70Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type70Message.data)
}
 ::std::string* Type70Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type70Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type70Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type70Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type70Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type70Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type71Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type71Message::Type71Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type71Message)
}

void Type71Message::InitAsDefaultInstance() {
}

Type71Message::Type71Message(const Type71Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type71Message)
}

void Type71Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type71Message::~Type71Message() {
  // @@protoc_insertion_point(destructor:tests.Type71Message)
  SharedDtor();
}

void Type71Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type71Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type71Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type71Message_descriptor_;
}

const Type71Message& Type71Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type71Message* Type71Message::default_instance_ = NULL;

Type71Message* Type71Message::New(::google::protobuf::Arena* arena) const {
  Type71Message* n = new Type71Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type71Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type71Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type71Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type71Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type71Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type71Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type71Message)
  return false;
#undef DO_
}

void Type71Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type71Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type71Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type71Message)
}

::google::protobuf::uint8* Type71Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type71Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type71Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type71Message)
  return target;
}

int Type71Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type71Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type71Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type71Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type71Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type71Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type71Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type71Message)
    MergeFrom(*source);
  }
}

void Type71Message::MergeFrom(const Type71Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type71Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type71Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type71Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type71Message::CopyFrom(const Type71Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type71Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type71Message::IsInitialized() const {

  return true;
}

void Type71Message::Swap(Type71Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type71Message::InternalSwap(Type71Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type71Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type71Message_descriptor_;
  metadata.reflection = Type71Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type71Message

// optional string data = 1;
bool Type71Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type71Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type71Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type71Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type71Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type71Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type71Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type71Message.data)
}
 void Type71Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type71Message.data)
}
 void Type71Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type71Message.data)
}
 ::std::string* Type71Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type71Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type71Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type71Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type71Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type71Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type72Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type72Message::Type72Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type72Message)
}

void Type72Message::InitAsDefaultInstance() {
}

Type72Message::Type72Message(const Type72Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type72Message)
}

void Type72Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type72Message::~Type72Message() {
  // @@protoc_insertion_point(destructor:tests.Type72Message)
  SharedDtor();
}

void Type72Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type72Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type72Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type72Message_descriptor_;
}

const Type72Message& Type72Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type72Message* Type72Message::default_instance_ = NULL;

Type72Message* Type72Message::New(::google::protobuf::Arena* arena) const {
  Type72Message* n = new Type72Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type72Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type72Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type72Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type72Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type72Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type72Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type72Message)
  return false;
#undef DO_
}

void Type72Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type72Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type72Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type72Message)
}

::google::protobuf::uint8* Type72Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type72Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type72Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type72Message)
  return target;
}

int Type72Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type72Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type72Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type72Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type72Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type72Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type72Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type72Message)
    MergeFrom(*source);
  }
}

void Type72Message::MergeFrom(const Type72Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type72Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type72Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type72Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type72Message::CopyFrom(const Type72Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type72Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type72Message::IsInitialized() const {

  return true;
}

void Type72Message::Swap(Type72Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type72Message::InternalSwap(Type72Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type72Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type72Message_descriptor_;
  metadata.reflection = Type72Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type72Message

// optional string data = 1;
bool Type72Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type72Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type72Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type72Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type72Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type72Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type72Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type72Message.data)
}
 void Type72Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type72Message.data)
}
 void Type72Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type72Message.data)
}
 ::std::string* Type72Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type72Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type72Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type72Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type72Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type72Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type73Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type73Message::Type73Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type73Message)
}

void Type73Message::InitAsDefaultInstance() {
}

Type73Message::Type73Message(const Type73Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type73Message)
}

void Type73Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type73Message::~Type73Message() {
  // @@protoc_insertion_point(destructor:tests.Type73Message)
  SharedDtor();
}

void Type73Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type73Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type73Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type73Message_descriptor_;
}

const Type73Message& Type73Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type73Message* Type73Message::default_instance_ = NULL;

Type73Message* Type73Message::New(::google::protobuf::Arena* arena) const {
  Type73Message* n = new Type73Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type73Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type73Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type73Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type73Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type73Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type73Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type73Message)
  return false;
#undef DO_
}

void Type73Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type73Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type73Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type73Message)
}

::google::protobuf::uint8* Type73Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type73Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type73Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type73Message)
  return target;
}

int Type73Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type73Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type73Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type73Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type73Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type73Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type73Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type73Message)
    MergeFrom(*source);
  }
}

void Type73Message::MergeFrom(const Type73Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type73Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type73Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type73Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type73Message::CopyFrom(const Type73Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type73Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type73Message::IsInitialized() const {

  return true;
}

void Type73Message::Swap(Type73Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type73Message::InternalSwap(Type73Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type73Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type73Message_descriptor_;
  metadata.reflection = Type73Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type73Message

// optional string data = 1;
bool Type73Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type73Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type73Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type73Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type73Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type73Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type73Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type73Message.data)
}
 void Type73Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type73Message.data)
}
 void Type73Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type73Message.data)
}
 ::std::string* Type73Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type73Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type73Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type73Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type73Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type73Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type74Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type74Message::Type74Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type74Message)
}

void Type74Message::InitAsDefaultInstance() {
}

Type74Message::Type74Message(const Type74Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type74Message)
}

void Type74Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type74Message::~Type74Message() {
  // @@protoc_insertion_point(destructor:tests.Type74Message)
  SharedDtor();
}

void Type74Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type74Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type74Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type74Message_descriptor_;
}

const Type74Message& Type74Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type74Message* Type74Message::default_instance_ = NULL;

Type74Message* Type74Message::New(::google::protobuf::Arena* arena) const {
  Type74Message* n = new Type74Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type74Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type74Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type74Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type74Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type74Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type74Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type74Message)
  return false;
#undef DO_
}

void Type74Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type74Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type74Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type74Message)
}

::google::protobuf::uint8* Type74Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type74Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type74Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type74Message)
  return target;
}

int Type74Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type74Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type74Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type74Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type74Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type74Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type74Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type74Message)
    MergeFrom(*source);
  }
}

void Type74Message::MergeFrom(const Type74Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type74Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type74Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type74Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type74Message::CopyFrom(const Type74Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type74Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type74Message::IsInitialized() const {

  return true;
}

void Type74Message::Swap(Type74Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type74Message::InternalSwap(Type74Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type74Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type74Message_descriptor_;
  metadata.reflection = Type74Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type74Message

// optional string data = 1;
bool Type74Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type74Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type74Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type74Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type74Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type74Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type74Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type74Message.data)
}
 void Type74Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type74Message.data)
}
 void Type74Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type74Message.data)
}
 ::std::string* Type74Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type74Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type74Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type74Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type74Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type74Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type75Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type75Message::Type75Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type75Message)
}

void Type75Message::InitAsDefaultInstance() {
}

Type75Message::Type75Message(const Type75Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type75Message)
}

void Type75Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type75Message::~Type75Message() {
  // @@protoc_insertion_point(destructor:tests.Type75Message)
  SharedDtor();
}

void Type75Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type75Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type75Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type75Message_descriptor_;
}

const Type75Message& Type75Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type75Message* Type75Message::default_instance_ = NULL;

Type75Message* Type75Message::New(::google::protobuf::Arena* arena) const {
  Type75Message* n = new Type75Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type75Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type75Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type75Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type75Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type75Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type75Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type75Message)
  return false;
#undef DO_
}

void Type75Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type75Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type75Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type75Message)
}

::google::protobuf::uint8* Type75Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type75Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type75Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type75Message)
  return target;
}

int Type75Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type75Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type75Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type75Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type75Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type75Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type75Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type75Message)
    MergeFrom(*source);
  }
}

void Type75Message::MergeFrom(const Type75Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type75Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type75Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type75Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type75Message::CopyFrom(const Type75Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type75Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type75Message::IsInitialized() const {

  return true;
}

void Type75Message::Swap(Type75Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type75Message::InternalSwap(Type75Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type75Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type75Message_descriptor_;
  metadata.reflection = Type75Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type75Message

// optional string data = 1;
bool Type75Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type75Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type75Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type75Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type75Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type75Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type75Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type75Message.data)
}
 void Type75Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type75Message.data)
}
 void Type75Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type75Message.data)
}
 ::std::string* Type75Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type75Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type75Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type75Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type75Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type75Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type76Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type76Message::Type76Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type76Message)
}

void Type76Message::InitAsDefaultInstance() {
}

Type76Message::Type76Message(const Type76Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type76Message)
}

void Type76Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type76Message::~Type76Message() {
  // @@protoc_insertion_point(destructor:tests.Type76Message)
  SharedDtor();
}

void Type76Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type76Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type76Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type76Message_descriptor_;
}

const Type76Message& Type76Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type76Message* Type76Message::default_instance_ = NULL;

Type76Message* Type76Message::New(::google::protobuf::Arena* arena) const {
  Type76Message* n = new Type76Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type76Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type76Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type76Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type76Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type76Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type76Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type76Message)
  return false;
#undef DO_
}

void Type76Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type76Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type76Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type76Message)
}

::google::protobuf::uint8* Type76Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type76Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type76Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type76Message)
  return target;
}

int Type76Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type76Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type76Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type76Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type76Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type76Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type76Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type76Message)
    MergeFrom(*source);
  }
}

void Type76Message::MergeFrom(const Type76Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type76Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type76Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type76Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type76Message::CopyFrom(const Type76Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type76Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type76Message::IsInitialized() const {

  return true;
}

void Type76Message::Swap(Type76Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type76Message::InternalSwap(Type76Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type76Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type76Message_descriptor_;
  metadata.reflection = Type76Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type76Message

// optional string data = 1;
bool Type76Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type76Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type76Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type76Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type76Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type76Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type76Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type76Message.data)
}
 void Type76Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type76Message.data)
}
 void Type76Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type76Message.data)
}
 ::std::string* Type76Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type76Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type76Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type76Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type76Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type76Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type77Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type77Message::Type77Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type77Message)
}

void Type77Message::InitAsDefaultInstance() {
}

Type77Message::Type77Message(const Type77Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type77Message)
}

void Type77Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type77Message::~Type77Message() {
  // @@protoc_insertion_point(destructor:tests.Type77Message)
  SharedDtor();
}

void Type77Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type77Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type77Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type77Message_descriptor_;
}

const Type77Message& Type77Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type77Message* Type77Message::default_instance_ = NULL;

Type77Message* Type77Message::New(::google::protobuf::Arena* arena) const {
  Type77Message* n = new Type77Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type77Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type77Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type77Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type77Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type77Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type77Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type77Message)
  return false;
#undef DO_
}

void Type77Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type77Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type77Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type77Message)
}

::google::protobuf::uint8* Type77Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type77Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type77Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type77Message)
  return target;
}

int Type77Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type77Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type77Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type77Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type77Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type77Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type77Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type77Message)
    MergeFrom(*source);
  }
}

void Type77Message::MergeFrom(const Type77Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type77Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type77Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type77Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type77Message::CopyFrom(const Type77Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type77Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type77Message::IsInitialized() const {

  return true;
}

void Type77Message::Swap(Type77Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type77Message::InternalSwap(Type77Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type77Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type77Message_descriptor_;
  metadata.reflection = Type77Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type77Message

// optional string data = 1;
bool Type77Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type77Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type77Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type77Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type77Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type77Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type77Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type77Message.data)
}
 void Type77Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type77Message.data)
}
 void Type77Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type77Message.data)
}
 ::std::string* Type77Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type77Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type77Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type77Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type77Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type77Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type78Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type78Message::Type78Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type78Message)
}

void Type78Message::InitAsDefaultInstance() {
}

Type78Message::Type78Message(const Type78Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type78Message)
}

void Type78Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type78Message::~Type78Message() {
  // @@protoc_insertion_point(destructor:tests.Type78Message)
  SharedDtor();
}

void Type78Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type78Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type78Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type78Message_descriptor_;
}

const Type78Message& Type78Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type78Message* Type78Message::default_instance_ = NULL;

Type78Message* Type78Message::New(::google::protobuf::Arena* arena) const {
  Type78Message* n = new Type78Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type78Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type78Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type78Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type78Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type78Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type78Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type78Message)
  return false;
#undef DO_
}

void Type78Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type78Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type78Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type78Message)
}

::google::protobuf::uint8* Type78Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type78Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type78Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type78Message)
  return target;
}

int Type78Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type78Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type78Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type78Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type78Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type78Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type78Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type78Message)
    MergeFrom(*source);
  }
}

void Type78Message::MergeFrom(const Type78Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type78Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type78Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type78Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type78Message::CopyFrom(const Type78Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type78Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type78Message::IsInitialized() const {

  return true;
}

void Type78Message::Swap(Type78Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type78Message::InternalSwap(Type78Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type78Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type78Message_descriptor_;
  metadata.reflection = Type78Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type78Message

// optional string data = 1;
bool Type78Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type78Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type78Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type78Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type78Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type78Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type78Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type78Message.data)
}
 void Type78Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type78Message.data)
}
 void Type78Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type78Message.data)
}
 ::std::string* Type78Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type78Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type78Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type78Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type78Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type78Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type79Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type79Message::Type79Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type79Message)
}

void Type79Message::InitAsDefaultInstance() {
}

Type79Message::Type79Message(const Type79Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type79Message)
}

void Type79Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type79Message::~Type79Message() {
  // @@protoc_insertion_point(destructor:tests.Type79Message)
  SharedDtor();
}

void Type79Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type79Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type79Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type79Message_descriptor_;
}

const Type79Message& Type79Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type79Message* Type79Message::default_instance_ = NULL;

Type79Message* Type79Message::New(::google::protobuf::Arena* arena) const {
  Type79Message* n = new Type79Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type79Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type79Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type79Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type79Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type79Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type79Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type79Message)
  return false;
#undef DO_
}

void Type79Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type79Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type79Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type79Message)
}

::google::protobuf::uint8* Type79Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type79Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type79Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type79Message)
  return target;
}

int Type79Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type79Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type79Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type79Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type79Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type79Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type79Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type79Message)
    MergeFrom(*source);
  }
}

void Type79Message::MergeFrom(const Type79Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type79Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type79Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type79Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type79Message::CopyFrom(const Type79Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type79Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type79Message::IsInitialized() const {

  return true;
}

void Type79Message::Swap(Type79Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type79Message::InternalSwap(Type79Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type79Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type79Message_descriptor_;
  metadata.reflection = Type79Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type79Message

// optional string data = 1;
bool Type79Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type79Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type79Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type79Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type79Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type79Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type79Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type79Message.data)
}
 void Type79Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type79Message.data)
}
 void Type79Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type79Message.data)
}
 ::std::string* Type79Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type79Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type79Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type79Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type79Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type79Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type80Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type80Message::Type80Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type80Message)
}

void Type80Message::InitAsDefaultInstance() {
}

Type80Message::Type80Message(const Type80Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type80Message)
}

void Type80Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type80Message::~Type80Message() {
  // @@protoc_insertion_point(destructor:tests.Type80Message)
  SharedDtor();
}

void Type80Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type80Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type80Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type80Message_descriptor_;
}

const Type80Message& Type80Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type80Message* Type80Message::default_instance_ = NULL;

Type80Message* Type80Message::New(::google::protobuf::Arena* arena) const {
  Type80Message* n = new Type80Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type80Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type80Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type80Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type80Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type80Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type80Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type80Message)
  return false;
#undef DO_
}

void Type80Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type80Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type80Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type80Message)
}

::google::protobuf::uint8* Type80Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type80Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type80Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type80Message)
  return target;
}

int Type80Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type80Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type80Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type80Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type80Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type80Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type80Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type80Message)
    MergeFrom(*source);
  }
}

void Type80Message::MergeFrom(const Type80Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type80Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type80Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type80Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type80Message::CopyFrom(const Type80Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type80Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type80Message::IsInitialized() const {

  return true;
}

void Type80Message::Swap(Type80Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type80Message::InternalSwap(Type80Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type80Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type80Message_descriptor_;
  metadata.reflection = Type80Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type80Message

// optional string data = 1;
bool Type80Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type80Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type80Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type80Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type80Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type80Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type80Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type80Message.data)
}
 void Type80Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type80Message.data)
}
 void Type80Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type80Message.data)
}
 ::std::string* Type80Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type80Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type80Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type80Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type80Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type80Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type81Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type81Message::Type81Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type81Message)
}

void Type81Message::InitAsDefaultInstance() {
}

Type81Message::Type81Message(const Type81Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type81Message)
}

void Type81Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type81Message::~Type81Message() {
  // @@protoc_insertion_point(destructor:tests.Type81Message)
  SharedDtor();
}

void Type81Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type81Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type81Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type81Message_descriptor_;
}

const Type81Message& Type81Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type81Message* Type81Message::default_instance_ = NULL;

Type81Message* Type81Message::New(::google::protobuf::Arena* arena) const {
  Type81Message* n = new Type81Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type81Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type81Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type81Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type81Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type81Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type81Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type81Message)
  return false;
#undef DO_
}

void Type81Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type81Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type81Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type81Message)
}

::google::protobuf::uint8* Type81Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type81Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type81Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type81Message)
  return target;
}

int Type81Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type81Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type81Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type81Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type81Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type81Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type81Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type81Message)
    MergeFrom(*source);
  }
}

void Type81Message::MergeFrom(const Type81Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type81Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type81Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type81Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type81Message::CopyFrom(const Type81Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type81Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type81Message::IsInitialized() const {

  return true;
}

void Type81Message::Swap(Type81Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type81Message::InternalSwap(Type81Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type81Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type81Message_descriptor_;
  metadata.reflection = Type81Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type81Message

// optional string data = 1;
bool Type81Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type81Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type81Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type81Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type81Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type81Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type81Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type81Message.data)
}
 void Type81Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type81Message.data)
}
 void Type81Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type81Message.data)
}
 ::std::string* Type81Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type81Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type81Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type81Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type81Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type81Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type82Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type82Message::Type82Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type82Message)
}

void Type82Message::InitAsDefaultInstance() {
}

Type82Message::Type82Message(const Type82Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type82Message)
}

void Type82Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type82Message::~Type82Message() {
  // @@protoc_insertion_point(destructor:tests.Type82Message)
  SharedDtor();
}

void Type82Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type82Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type82Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type82Message_descriptor_;
}

const Type82Message& Type82Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type82Message* Type82Message::default_instance_ = NULL;

Type82Message* Type82Message::New(::google::protobuf::Arena* arena) const {
  Type82Message* n = new Type82Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type82Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type82Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type82Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type82Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type82Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type82Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type82Message)
  return false;
#undef DO_
}

void Type82Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type82Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type82Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type82Message)
}

::google::protobuf::uint8* Type82Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type82Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type82Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type82Message)
  return target;
}

int Type82Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type82Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type82Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type82Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type82Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type82Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type82Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type82Message)
    MergeFrom(*source);
  }
}

void Type82Message::MergeFrom(const Type82Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type82Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type82Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type82Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type82Message::CopyFrom(const Type82Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type82Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type82Message::IsInitialized() const {

  return true;
}

void Type82Message::Swap(Type82Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type82Message::InternalSwap(Type82Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type82Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type82Message_descriptor_;
  metadata.reflection = Type82Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type82Message

// optional string data = 1;
bool Type82Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type82Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type82Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type82Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type82Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type82Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type82Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type82Message.data)
}
 void Type82Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type82Message.data)
}
 void Type82Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type82Message.data)
}
 ::std::string* Type82Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type82Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type82Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type82Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type82Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type82Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type83Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type83Message::Type83Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type83Message)
}

void Type83Message::InitAsDefaultInstance() {
}

Type83Message::Type83Message(const Type83Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type83Message)
}

void Type83Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type83Message::~Type83Message() {
  // @@protoc_insertion_point(destructor:tests.Type83Message)
  SharedDtor();
}

void Type83Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type83Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type83Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type83Message_descriptor_;
}

const Type83Message& Type83Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type83Message* Type83Message::default_instance_ = NULL;

Type83Message* Type83Message::New(::google::protobuf::Arena* arena) const {
  Type83Message* n = new Type83Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type83Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type83Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type83Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type83Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type83Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type83Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type83Message)
  return false;
#undef DO_
}

void Type83Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type83Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type83Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type83Message)
}

::google::protobuf::uint8* Type83Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type83Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type83Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type83Message)
  return target;
}

int Type83Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type83Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type83Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type83Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type83Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type83Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type83Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type83Message)
    MergeFrom(*source);
  }
}

void Type83Message::MergeFrom(const Type83Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type83Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type83Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type83Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type83Message::CopyFrom(const Type83Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type83Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type83Message::IsInitialized() const {

  return true;
}

void Type83Message::Swap(Type83Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type83Message::InternalSwap(Type83Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type83Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type83Message_descriptor_;
  metadata.reflection = Type83Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type83Message

// optional string data = 1;
bool Type83Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type83Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type83Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type83Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type83Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type83Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type83Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type83Message.data)
}
 void Type83Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type83Message.data)
}
 void Type83Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type83Message.data)
}
 ::std::string* Type83Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type83Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type83Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type83Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type83Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type83Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type84Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type84Message::Type84Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type84Message)
}

void Type84Message::InitAsDefaultInstance() {
}

Type84Message::Type84Message(const Type84Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type84Message)
}

void Type84Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type84Message::~Type84Message() {
  // @@protoc_insertion_point(destructor:tests.Type84Message)
  SharedDtor();
}

void Type84Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type84Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type84Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type84Message_descriptor_;
}

const Type84Message& Type84Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type84Message* Type84Message::default_instance_ = NULL;

Type84Message* Type84Message::New(::google::protobuf::Arena* arena) const {
  Type84Message* n = new Type84Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type84Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type84Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type84Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type84Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type84Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type84Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type84Message)
  return false;
#undef DO_
}

void Type84Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type84Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type84Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type84Message)
}

::google::protobuf::uint8* Type84Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type84Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type84Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type84Message)
  return target;
}

int Type84Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type84Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type84Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type84Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type84Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type84Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type84Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type84Message)
    MergeFrom(*source);
  }
}

void Type84Message::MergeFrom(const Type84Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type84Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type84Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type84Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type84Message::CopyFrom(const Type84Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type84Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type84Message::IsInitialized() const {

  return true;
}

void Type84Message::Swap(Type84Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type84Message::InternalSwap(Type84Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type84Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type84Message_descriptor_;
  metadata.reflection = Type84Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type84Message

// optional string data = 1;
bool Type84Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type84Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type84Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type84Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type84Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type84Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type84Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type84Message.data)
}
 void Type84Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type84Message.data)
}
 void Type84Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type84Message.data)
}
 ::std::string* Type84Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type84Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type84Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type84Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type84Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type84Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type85Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type85Message::Type85Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type85Message)
}

void Type85Message::InitAsDefaultInstance() {
}

Type85Message::Type85Message(const Type85Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type85Message)
}

void Type85Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type85Message::~Type85Message() {
  // @@protoc_insertion_point(destructor:tests.Type85Message)
  SharedDtor();
}

void Type85Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type85Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type85Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type85Message_descriptor_;
}

const Type85Message& Type85Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type85Message* Type85Message::default_instance_ = NULL;

Type85Message* Type85Message::New(::google::protobuf::Arena* arena) const {
  Type85Message* n = new Type85Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type85Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type85Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type85Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type85Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type85Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type85Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type85Message)
  return false;
#undef DO_
}

void Type85Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type85Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type85Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type85Message)
}

::google::protobuf::uint8* Type85Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type85Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type85Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type85Message)
  return target;
}

int Type85Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type85Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type85Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type85Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type85Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type85Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type85Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type85Message)
    MergeFrom(*source);
  }
}

void Type85Message::MergeFrom(const Type85Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type85Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type85Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type85Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type85Message::CopyFrom(const Type85Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type85Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type85Message::IsInitialized() const {

  return true;
}

void Type85Message::Swap(Type85Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type85Message::InternalSwap(Type85Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type85Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type85Message_descriptor_;
  metadata.reflection = Type85Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type85Message

// optional string data = 1;
bool Type85Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type85Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type85Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type85Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type85Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type85Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type85Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type85Message.data)
}
 void Type85Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type85Message.data)
}
 void Type85Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type85Message.data)
}
 ::std::string* Type85Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type85Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type85Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type85Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type85Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type85Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type86Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type86Message::Type86Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type86Message)
}

void Type86Message::InitAsDefaultInstance() {
}

Type86Message::Type86Message(const Type86Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type86Message)
}

void Type86Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type86Message::~Type86Message() {
  // @@protoc_insertion_point(destructor:tests.Type86Message)
  SharedDtor();
}

void Type86Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type86Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type86Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type86Message_descriptor_;
}

const Type86Message& Type86Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type86Message* Type86Message::default_instance_ = NULL;

Type86Message* Type86Message::New(::google::protobuf::Arena* arena) const {
  Type86Message* n = new Type86Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type86Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type86Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type86Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type86Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type86Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type86Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type86Message)
  return false;
#undef DO_
}

void Type86Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type86Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type86Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type86Message)
}

::google::protobuf::uint8* Type86Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type86Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type86Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type86Message)
  return target;
}

int Type86Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type86Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type86Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type86Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type86Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type86Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type86Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type86Message)
    MergeFrom(*source);
  }
}

void Type86Message::MergeFrom(const Type86Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type86Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type86Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type86Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type86Message::CopyFrom(const Type86Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type86Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type86Message::IsInitialized() const {

  return true;
}

void Type86Message::Swap(Type86Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type86Message::InternalSwap(Type86Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type86Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type86Message_descriptor_;
  metadata.reflection = Type86Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type86Message

// optional string data = 1;
bool Type86Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type86Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type86Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type86Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type86Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type86Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type86Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type86Message.data)
}
 void Type86Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type86Message.data)
}
 void Type86Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type86Message.data)
}
 ::std::string* Type86Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type86Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type86Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type86Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type86Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type86Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type87Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type87Message::Type87Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type87Message)
}

void Type87Message::InitAsDefaultInstance() {
}

Type87Message::Type87Message(const Type87Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type87Message)
}

void Type87Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type87Message::~Type87Message() {
  // @@protoc_insertion_point(destructor:tests.Type87Message)
  SharedDtor();
}

void Type87Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type87Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type87Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type87Message_descriptor_;
}

const Type87Message& Type87Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type87Message* Type87Message::default_instance_ = NULL;

Type87Message* Type87Message::New(::google::protobuf::Arena* arena) const {
  Type87Message* n = new Type87Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type87Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type87Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type87Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type87Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type87Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type87Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type87Message)
  return false;
#undef DO_
}

void Type87Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type87Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type87Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type87Message)
}

::google::protobuf::uint8* Type87Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type87Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type87Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type87Message)
  return target;
}

int Type87Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type87Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type87Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type87Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type87Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type87Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type87Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type87Message)
    MergeFrom(*source);
  }
}

void Type87Message::MergeFrom(const Type87Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type87Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type87Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type87Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type87Message::CopyFrom(const Type87Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type87Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type87Message::IsInitialized() const {

  return true;
}

void Type87Message::Swap(Type87Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type87Message::InternalSwap(Type87Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type87Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type87Message_descriptor_;
  metadata.reflection = Type87Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type87Message

// optional string data = 1;
bool Type87Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type87Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type87Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type87Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type87Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type87Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type87Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type87Message.data)
}
 void Type87Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type87Message.data)
}
 void Type87Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type87Message.data)
}
 ::std::string* Type87Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type87Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type87Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type87Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type87Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type87Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type88Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type88Message::Type88Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type88Message)
}

void Type88Message::InitAsDefaultInstance() {
}

Type88Message::Type88Message(const Type88Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type88Message)
}

void Type88Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type88Message::~Type88Message() {
  // @@protoc_insertion_point(destructor:tests.Type88Message)
  SharedDtor();
}

void Type88Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type88Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type88Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type88Message_descriptor_;
}

const Type88Message& Type88Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type88Message* Type88Message::default_instance_ = NULL;

Type88Message* Type88Message::New(::google::protobuf::Arena* arena) const {
  Type88Message* n = new Type88Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type88Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type88Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type88Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type88Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type88Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type88Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type88Message)
  return false;
#undef DO_
}

void Type88Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type88Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type88Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type88Message)
}

::google::protobuf::uint8* Type88Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type88Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type88Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type88Message)
  return target;
}

int Type88Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type88Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type88Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type88Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type88Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type88Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type88Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type88Message)
    MergeFrom(*source);
  }
}

void Type88Message::MergeFrom(const Type88Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type88Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type88Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type88Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type88Message::CopyFrom(const Type88Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type88Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type88Message::IsInitialized() const {

  return true;
}

void Type88Message::Swap(Type88Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type88Message::InternalSwap(Type88Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type88Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type88Message_descriptor_;
  metadata.reflection = Type88Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type88Message

// optional string data = 1;
bool Type88Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type88Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type88Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type88Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type88Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type88Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type88Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type88Message.data)
}
 void Type88Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type88Message.data)
}
 void Type88Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type88Message.data)
}
 ::std::string* Type88Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type88Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type88Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type88Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type88Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type88Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type89Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type89Message::Type89Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type89Message)
}

void Type89Message::InitAsDefaultInstance() {
}

Type89Message::Type89Message(const Type89Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type89Message)
}

void Type89Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type89Message::~Type89Message() {
  // @@protoc_insertion_point(destructor:tests.Type89Message)
  SharedDtor();
}

void Type89Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type89Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type89Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type89Message_descriptor_;
}

const Type89Message& Type89Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type89Message* Type89Message::default_instance_ = NULL;

Type89Message* Type89Message::New(::google::protobuf::Arena* arena) const {
  Type89Message* n = new Type89Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type89Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type89Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type89Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type89Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type89Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type89Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type89Message)
  return false;
#undef DO_
}

void Type89Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type89Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type89Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type89Message)
}

::google::protobuf::uint8* Type89Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type89Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type89Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type89Message)
  return target;
}

int Type89Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type89Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type89Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type89Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type89Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type89Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type89Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type89Message)
    MergeFrom(*source);
  }
}

void Type89Message::MergeFrom(const Type89Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type89Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type89Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type89Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type89Message::CopyFrom(const Type89Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type89Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type89Message::IsInitialized() const {

  return true;
}

void Type89Message::Swap(Type89Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type89Message::InternalSwap(Type89Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type89Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type89Message_descriptor_;
  metadata.reflection = Type89Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type89Message

// optional string data = 1;
bool Type89Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type89Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type89Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type89Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type89Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type89Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type89Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type89Message.data)
}
 void Type89Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type89Message.data)
}
 void Type89Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type89Message.data)
}
 ::std::string* Type89Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type89Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type89Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type89Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type89Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type89Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type90Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type90Message::Type90Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type90Message)
}

void Type90Message::InitAsDefaultInstance() {
}

Type90Message::Type90Message(const Type90Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type90Message)
}

void Type90Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type90Message::~Type90Message() {
  // @@protoc_insertion_point(destructor:tests.Type90Message)
  SharedDtor();
}

void Type90Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type90Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type90Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type90Message_descriptor_;
}

const Type90Message& Type90Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type90Message* Type90Message::default_instance_ = NULL;

Type90Message* Type90Message::New(::google::protobuf::Arena* arena) const {
  Type90Message* n = new Type90Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type90Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type90Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type90Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type90Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type90Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type90Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type90Message)
  return false;
#undef DO_
}

void Type90Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type90Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type90Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type90Message)
}

::google::protobuf::uint8* Type90Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type90Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type90Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type90Message)
  return target;
}

int Type90Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type90Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type90Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type90Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type90Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type90Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type90Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type90Message)
    MergeFrom(*source);
  }
}

void Type90Message::MergeFrom(const Type90Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type90Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type90Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type90Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type90Message::CopyFrom(const Type90Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type90Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type90Message::IsInitialized() const {

  return true;
}

void Type90Message::Swap(Type90Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type90Message::InternalSwap(Type90Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type90Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type90Message_descriptor_;
  metadata.reflection = Type90Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type90Message

// optional string data = 1;
bool Type90Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type90Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type90Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type90Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type90Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type90Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type90Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type90Message.data)
}
 void Type90Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type90Message.data)
}
 void Type90Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type90Message.data)
}
 ::std::string* Type90Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type90Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type90Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type90Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type90Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type90Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type91Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type91Message::Type91Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type91Message)
}

void Type91Message::InitAsDefaultInstance() {
}

Type91Message::Type91Message(const Type91Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type91Message)
}

void Type91Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type91Message::~Type91Message() {
  // @@protoc_insertion_point(destructor:tests.Type91Message)
  SharedDtor();
}

void Type91Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type91Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type91Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type91Message_descriptor_;
}

const Type91Message& Type91Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type91Message* Type91Message::default_instance_ = NULL;

Type91Message* Type91Message::New(::google::protobuf::Arena* arena) const {
  Type91Message* n = new Type91Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type91Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type91Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type91Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type91Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type91Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type91Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type91Message)
  return false;
#undef DO_
}

void Type91Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type91Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type91Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type91Message)
}

::google::protobuf::uint8* Type91Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type91Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type91Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type91Message)
  return target;
}

int Type91Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type91Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type91Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type91Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type91Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type91Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type91Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type91Message)
    MergeFrom(*source);
  }
}

void Type91Message::MergeFrom(const Type91Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type91Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type91Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type91Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type91Message::CopyFrom(const Type91Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type91Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type91Message::IsInitialized() const {

  return true;
}

void Type91Message::Swap(Type91Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type91Message::InternalSwap(Type91Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type91Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type91Message_descriptor_;
  metadata.reflection = Type91Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type91Message

// optional string data = 1;
bool Type91Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type91Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type91Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type91Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type91Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type91Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type91Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type91Message.data)
}
 void Type91Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type91Message.data)
}
 void Type91Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type91Message.data)
}
 ::std::string* Type91Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type91Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type91Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type91Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type91Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type91Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type92Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type92Message::Type92Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type92Message)
}

void Type92Message::InitAsDefaultInstance() {
}

Type92Message::Type92Message(const Type92Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type92Message)
}

void Type92Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type92Message::~Type92Message() {
  // @@protoc_insertion_point(destructor:tests.Type92Message)
  SharedDtor();
}

void Type92Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type92Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type92Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type92Message_descriptor_;
}

const Type92Message& Type92Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type92Message* Type92Message::default_instance_ = NULL;

Type92Message* Type92Message::New(::google::protobuf::Arena* arena) const {
  Type92Message* n = new Type92Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type92Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type92Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type92Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type92Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type92Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type92Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type92Message)
  return false;
#undef DO_
}

void Type92Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type92Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type92Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type92Message)
}

::google::protobuf::uint8* Type92Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type92Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type92Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type92Message)
  return target;
}

int Type92Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type92Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type92Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type92Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type92Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type92Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type92Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type92Message)
    MergeFrom(*source);
  }
}

void Type92Message::MergeFrom(const Type92Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type92Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type92Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type92Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type92Message::CopyFrom(const Type92Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type92Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type92Message::IsInitialized() const {

  return true;
}

void Type92Message::Swap(Type92Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type92Message::InternalSwap(Type92Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type92Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type92Message_descriptor_;
  metadata.reflection = Type92Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type92Message

// optional string data = 1;
bool Type92Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type92Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type92Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type92Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type92Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type92Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type92Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type92Message.data)
}
 void Type92Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type92Message.data)
}
 void Type92Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type92Message.data)
}
 ::std::string* Type92Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type92Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type92Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type92Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type92Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type92Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type93Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type93Message::Type93Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type93Message)
}

void Type93Message::InitAsDefaultInstance() {
}

Type93Message::Type93Message(const Type93Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type93Message)
}

void Type93Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type93Message::~Type93Message() {
  // @@protoc_insertion_point(destructor:tests.Type93Message)
  SharedDtor();
}

void Type93Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type93Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type93Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type93Message_descriptor_;
}

const Type93Message& Type93Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type93Message* Type93Message::default_instance_ = NULL;

Type93Message* Type93Message::New(::google::protobuf::Arena* arena) const {
  Type93Message* n = new Type93Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type93Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type93Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type93Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type93Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type93Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type93Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type93Message)
  return false;
#undef DO_
}

void Type93Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type93Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type93Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type93Message)
}

::google::protobuf::uint8* Type93Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type93Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type93Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type93Message)
  return target;
}

int Type93Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type93Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type93Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type93Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type93Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type93Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type93Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type93Message)
    MergeFrom(*source);
  }
}

void Type93Message::MergeFrom(const Type93Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type93Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type93Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type93Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type93Message::CopyFrom(const Type93Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type93Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type93Message::IsInitialized() const {

  return true;
}

void Type93Message::Swap(Type93Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type93Message::InternalSwap(Type93Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type93Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type93Message_descriptor_;
  metadata.reflection = Type93Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type93Message

// optional string data = 1;
bool Type93Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type93Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type93Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type93Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type93Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type93Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type93Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type93Message.data)
}
 void Type93Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type93Message.data)
}
 void Type93Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type93Message.data)
}
 ::std::string* Type93Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type93Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type93Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type93Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type93Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type93Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type94Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type94Message::Type94Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type94Message)
}

void Type94Message::InitAsDefaultInstance() {
}

Type94Message::Type94Message(const Type94Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type94Message)
}

void Type94Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type94Message::~Type94Message() {
  // @@protoc_insertion_point(destructor:tests.Type94Message)
  SharedDtor();
}

void Type94Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type94Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type94Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type94Message_descriptor_;
}

const Type94Message& Type94Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type94Message* Type94Message::default_instance_ = NULL;

Type94Message* Type94Message::New(::google::protobuf::Arena* arena) const {
  Type94Message* n = new Type94Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type94Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type94Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type94Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type94Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type94Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type94Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type94Message)
  return false;
#undef DO_
}

void Type94Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type94Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type94Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type94Message)
}

::google::protobuf::uint8* Type94Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type94Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type94Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type94Message)
  return target;
}

int Type94Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type94Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type94Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type94Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type94Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type94Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type94Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type94Message)
    MergeFrom(*source);
  }
}

void Type94Message::MergeFrom(const Type94Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type94Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type94Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type94Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type94Message::CopyFrom(const Type94Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type94Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type94Message::IsInitialized() const {

  return true;
}

void Type94Message::Swap(Type94Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type94Message::InternalSwap(Type94Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type94Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type94Message_descriptor_;
  metadata.reflection = Type94Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type94Message

// optional string data = 1;
bool Type94Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type94Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type94Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type94Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type94Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type94Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type94Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type94Message.data)
}
 void Type94Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type94Message.data)
}
 void Type94Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type94Message.data)
}
 ::std::string* Type94Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type94Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type94Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type94Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type94Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type94Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type95Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type95Message::Type95Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type95Message)
}

void Type95Message::InitAsDefaultInstance() {
}

Type95Message::Type95Message(const Type95Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type95Message)
}

void Type95Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type95Message::~Type95Message() {
  // @@protoc_insertion_point(destructor:tests.Type95Message)
  SharedDtor();
}

void Type95Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type95Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type95Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type95Message_descriptor_;
}

const Type95Message& Type95Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type95Message* Type95Message::default_instance_ = NULL;

Type95Message* Type95Message::New(::google::protobuf::Arena* arena) const {
  Type95Message* n = new Type95Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type95Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type95Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type95Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type95Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type95Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type95Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type95Message)
  return false;
#undef DO_
}

void Type95Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type95Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type95Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type95Message)
}

::google::protobuf::uint8* Type95Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type95Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type95Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type95Message)
  return target;
}

int Type95Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type95Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type95Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type95Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type95Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type95Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type95Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type95Message)
    MergeFrom(*source);
  }
}

void Type95Message::MergeFrom(const Type95Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type95Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type95Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type95Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type95Message::CopyFrom(const Type95Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type95Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type95Message::IsInitialized() const {

  return true;
}

void Type95Message::Swap(Type95Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type95Message::InternalSwap(Type95Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type95Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type95Message_descriptor_;
  metadata.reflection = Type95Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type95Message

// optional string data = 1;
bool Type95Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type95Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type95Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type95Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type95Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type95Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type95Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type95Message.data)
}
 void Type95Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type95Message.data)
}
 void Type95Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type95Message.data)
}
 ::std::string* Type95Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type95Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type95Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type95Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type95Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type95Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type96Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type96Message::Type96Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type96Message)
}

void Type96Message::InitAsDefaultInstance() {
}

Type96Message::Type96Message(const Type96Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type96Message)
}

void Type96Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type96Message::~Type96Message() {
  // @@protoc_insertion_point(destructor:tests.Type96Message)
  SharedDtor();
}

void Type96Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type96Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type96Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type96Message_descriptor_;
}

const Type96Message& Type96Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type96Message* Type96Message::default_instance_ = NULL;

Type96Message* Type96Message::New(::google::protobuf::Arena* arena) const {
  Type96Message* n = new Type96Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type96Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type96Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type96Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type96Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type96Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type96Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type96Message)
  return false;
#undef DO_
}

void Type96Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type96Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type96Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type96Message)
}

::google::protobuf::uint8* Type96Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type96Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type96Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type96Message)
  return target;
}

int Type96Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type96Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type96Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type96Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type96Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type96Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type96Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type96Message)
    MergeFrom(*source);
  }
}

void Type96Message::MergeFrom(const Type96Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type96Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type96Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type96Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type96Message::CopyFrom(const Type96Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type96Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type96Message::IsInitialized() const {

  return true;
}

void Type96Message::Swap(Type96Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type96Message::InternalSwap(Type96Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type96Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type96Message_descriptor_;
  metadata.reflection = Type96Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type96Message

// optional string data = 1;
bool Type96Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type96Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type96Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type96Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type96Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type96Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type96Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type96Message.data)
}
 void Type96Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type96Message.data)
}
 void Type96Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type96Message.data)
}
 ::std::string* Type96Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type96Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type96Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type96Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type96Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type96Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type97Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type97Message::Type97Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type97Message)
}

void Type97Message::InitAsDefaultInstance() {
}

Type97Message::Type97Message(const Type97Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type97Message)
}

void Type97Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type97Message::~Type97Message() {
  // @@protoc_insertion_point(destructor:tests.Type97Message)
  SharedDtor();
}

void Type97Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type97Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type97Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type97Message_descriptor_;
}

const Type97Message& Type97Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type97Message* Type97Message::default_instance_ = NULL;

Type97Message* Type97Message::New(::google::protobuf::Arena* arena) const {
  Type97Message* n = new Type97Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type97Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type97Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type97Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type97Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type97Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type97Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type97Message)
  return false;
#undef DO_
}

void Type97Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type97Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type97Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type97Message)
}

::google::protobuf::uint8* Type97Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type97Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type97Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type97Message)
  return target;
}

int Type97Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type97Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type97Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type97Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type97Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type97Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type97Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type97Message)
    MergeFrom(*source);
  }
}

void Type97Message::MergeFrom(const Type97Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type97Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type97Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type97Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type97Message::CopyFrom(const Type97Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type97Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type97Message::IsInitialized() const {

  return true;
}

void Type97Message::Swap(Type97Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type97Message::InternalSwap(Type97Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type97Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type97Message_descriptor_;
  metadata.reflection = Type97Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type97Message

// optional string data = 1;
bool Type97Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type97Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type97Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type97Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type97Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type97Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type97Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type97Message.data)
}
 void Type97Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type97Message.data)
}
 void Type97Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type97Message.data)
}
 ::std::string* Type97Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type97Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type97Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type97Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type97Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type97Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type98Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type98Message::Type98Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type98Message)
}

void Type98Message::InitAsDefaultInstance() {
}

Type98Message::Type98Message(const Type98Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type98Message)
}

void Type98Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type98Message::~Type98Message() {
  // @@protoc_insertion_point(destructor:tests.Type98Message)
  SharedDtor();
}

void Type98Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type98Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type98Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type98Message_descriptor_;
}

const Type98Message& Type98Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type98Message* Type98Message::default_instance_ = NULL;

Type98Message* Type98Message::New(::google::protobuf::Arena* arena) const {
  Type98Message* n = new Type98Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type98Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type98Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type98Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type98Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type98Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type98Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type98Message)
  return false;
#undef DO_
}

void Type98Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type98Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type98Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type98Message)
}

::google::protobuf::uint8* Type98Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type98Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type98Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type98Message)
  return target;
}

int Type98Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type98Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type98Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type98Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type98Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type98Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type98Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type98Message)
    MergeFrom(*source);
  }
}

void Type98Message::MergeFrom(const Type98Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type98Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type98Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type98Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type98Message::CopyFrom(const Type98Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type98Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type98Message::IsInitialized() const {

  return true;
}

void Type98Message::Swap(Type98Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type98Message::InternalSwap(Type98Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type98Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type98Message_descriptor_;
  metadata.reflection = Type98Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type98Message

// optional string data = 1;
bool Type98Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type98Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type98Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type98Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type98Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type98Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type98Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type98Message.data)
}
 void Type98Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type98Message.data)
}
 void Type98Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type98Message.data)
}
 ::std::string* Type98Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type98Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type98Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type98Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type98Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type98Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type99Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type99Message::Type99Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type99Message)
}

void Type99Message::InitAsDefaultInstance() {
}

Type99Message::Type99Message(const Type99Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type99Message)
}

void Type99Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type99Message::~Type99Message() {
  // @@protoc_insertion_point(destructor:tests.Type99Message)
  SharedDtor();
}

void Type99Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type99Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type99Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type99Message_descriptor_;
}

const Type99Message& Type99Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type99Message* Type99Message::default_instance_ = NULL;

Type99Message* Type99Message::New(::google::protobuf::Arena* arena) const {
  Type99Message* n = new Type99Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type99Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type99Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type99Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type99Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type99Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type99Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type99Message)
  return false;
#undef DO_
}

void Type99Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type99Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type99Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type99Message)
}

::google::protobuf::uint8* Type99Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type99Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type99Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type99Message)
  return target;
}

int Type99Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type99Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type99Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type99Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type99Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type99Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type99Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type99Message)
    MergeFrom(*source);
  }
}

void Type99Message::MergeFrom(const Type99Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type99Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type99Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type99Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type99Message::CopyFrom(const Type99Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type99Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type99Message::IsInitialized() const {

  return true;
}

void Type99Message::Swap(Type99Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type99Message::InternalSwap(Type99Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type99Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type99Message_descriptor_;
  metadata.reflection = Type99Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type99Message

// optional string data = 1;
bool Type99Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type99Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type99Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type99Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type99Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type99Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type99Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type99Message.data)
}
 void Type99Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type99Message.data)
}
 void Type99Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type99Message.data)
}
 ::std::string* Type99Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type99Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type99Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type99Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type99Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type99Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type100Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type100Message::Type100Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type100Message)
}

void Type100Message::InitAsDefaultInstance() {
}

Type100Message::Type100Message(const Type100Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type100Message)
}

void Type100Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type100Message::~Type100Message() {
  // @@protoc_insertion_point(destructor:tests.Type100Message)
  SharedDtor();
}

void Type100Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type100Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type100Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type100Message_descriptor_;
}

const Type100Message& Type100Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type100Message* Type100Message::default_instance_ = NULL;

Type100Message* Type100Message::New(::google::protobuf::Arena* arena) const {
  Type100Message* n = new Type100Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type100Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type100Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type100Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type100Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type100Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type100Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type100Message)
  return false;
#undef DO_
}

void Type100Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type100Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type100Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type100Message)
}

::google::protobuf::uint8* Type100Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type100Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type100Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type100Message)
  return target;
}

int Type100Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type100Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type100Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type100Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type100Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type100Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type100Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type100Message)
    MergeFrom(*source);
  }
}

void Type100Message::MergeFrom(const Type100Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type100Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type100Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type100Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type100Message::CopyFrom(const Type100Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type100Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type100Message::IsInitialized() const {

  return true;
}

void Type100Message::Swap(Type100Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type100Message::InternalSwap(Type100Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type100Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type100Message_descriptor_;
  metadata.reflection = Type100Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type100Message

// optional string data = 1;
bool Type100Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type100Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type100Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type100Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type100Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type100Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type100Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type100Message.data)
}
 void Type100Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type100Message.data)
}
 void Type100Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type100Message.data)
}
 ::std::string* Type100Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type100Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type100Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type100Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type100Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type100Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type101Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type101Message::Type101Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type101Message)
}

void Type101Message::InitAsDefaultInstance() {
}

Type101Message::Type101Message(const Type101Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type101Message)
}

void Type101Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type101Message::~Type101Message() {
  // @@protoc_insertion_point(destructor:tests.Type101Message)
  SharedDtor();
}

void Type101Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type101Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type101Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type101Message_descriptor_;
}

const Type101Message& Type101Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type101Message* Type101Message::default_instance_ = NULL;

Type101Message* Type101Message::New(::google::protobuf::Arena* arena) const {
  Type101Message* n = new Type101Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type101Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type101Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type101Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type101Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type101Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type101Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type101Message)
  return false;
#undef DO_
}

void Type101Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type101Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type101Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type101Message)
}

::google::protobuf::uint8* Type101Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type101Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type101Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type101Message)
  return target;
}

int Type101Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type101Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type101Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type101Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type101Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type101Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type101Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type101Message)
    MergeFrom(*source);
  }
}

void Type101Message::MergeFrom(const Type101Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type101Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type101Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type101Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type101Message::CopyFrom(const Type101Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type101Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type101Message::IsInitialized() const {

  return true;
}

void Type101Message::Swap(Type101Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type101Message::InternalSwap(Type101Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type101Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type101Message_descriptor_;
  metadata.reflection = Type101Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type101Message

// optional string data = 1;
bool Type101Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type101Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type101Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type101Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type101Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type101Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type101Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type101Message.data)
}
 void Type101Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type101Message.data)
}
 void Type101Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type101Message.data)
}
 ::std::string* Type101Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type101Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type101Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type101Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type101Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type101Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type102Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type102Message::Type102Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type102Message)
}

void Type102Message::InitAsDefaultInstance() {
}

Type102Message::Type102Message(const Type102Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type102Message)
}

void Type102Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type102Message::~Type102Message() {
  // @@protoc_insertion_point(destructor:tests.Type102Message)
  SharedDtor();
}

void Type102Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type102Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type102Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type102Message_descriptor_;
}

const Type102Message& Type102Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type102Message* Type102Message::default_instance_ = NULL;

Type102Message* Type102Message::New(::google::protobuf::Arena* arena) const {
  Type102Message* n = new Type102Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type102Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type102Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type102Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type102Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type102Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type102Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type102Message)
  return false;
#undef DO_
}

void Type102Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type102Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type102Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type102Message)
}

::google::protobuf::uint8* Type102Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type102Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type102Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type102Message)
  return target;
}

int Type102Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type102Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type102Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type102Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type102Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type102Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type102Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type102Message)
    MergeFrom(*source);
  }
}

void Type102Message::MergeFrom(const Type102Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type102Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type102Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type102Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type102Message::CopyFrom(const Type102Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type102Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type102Message::IsInitialized() const {

  return true;
}

void Type102Message::Swap(Type102Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type102Message::InternalSwap(Type102Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type102Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type102Message_descriptor_;
  metadata.reflection = Type102Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type102Message

// optional string data = 1;
bool Type102Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type102Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type102Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type102Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type102Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type102Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type102Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type102Message.data)
}
 void Type102Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type102Message.data)
}
 void Type102Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type102Message.data)
}
 ::std::string* Type102Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type102Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type102Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type102Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type102Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type102Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type103Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type103Message::Type103Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type103Message)
}

void Type103Message::InitAsDefaultInstance() {
}

Type103Message::Type103Message(const Type103Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type103Message)
}

void Type103Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type103Message::~Type103Message() {
  // @@protoc_insertion_point(destructor:tests.Type103Message)
  SharedDtor();
}

void Type103Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type103Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type103Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type103Message_descriptor_;
}

const Type103Message& Type103Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type103Message* Type103Message::default_instance_ = NULL;

Type103Message* Type103Message::New(::google::protobuf::Arena* arena) const {
  Type103Message* n = new Type103Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type103Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type103Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type103Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type103Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type103Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type103Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type103Message)
  return false;
#undef DO_
}

void Type103Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type103Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type103Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type103Message)
}

::google::protobuf::uint8* Type103Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type103Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type103Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type103Message)
  return target;
}

int Type103Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type103Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type103Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type103Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type103Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type103Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type103Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type103Message)
    MergeFrom(*source);
  }
}

void Type103Message::MergeFrom(const Type103Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type103Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type103Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type103Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type103Message::CopyFrom(const Type103Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type103Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type103Message::IsInitialized() const {

  return true;
}

void Type103Message::Swap(Type103Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type103Message::InternalSwap(Type103Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type103Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type103Message_descriptor_;
  metadata.reflection = Type103Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type103Message

// optional string data = 1;
bool Type103Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type103Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type103Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type103Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type103Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type103Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type103Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type103Message.data)
}
 void Type103Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type103Message.data)
}
 void Type103Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type103Message.data)
}
 ::std::string* Type103Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type103Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type103Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type103Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type103Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type103Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type104Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type104Message::Type104Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type104Message)
}

void Type104Message::InitAsDefaultInstance() {
}

Type104Message::Type104Message(const Type104Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type104Message)
}

void Type104Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type104Message::~Type104Message() {
  // @@protoc_insertion_point(destructor:tests.Type104Message)
  SharedDtor();
}

void Type104Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type104Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type104Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type104Message_descriptor_;
}

const Type104Message& Type104Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type104Message* Type104Message::default_instance_ = NULL;

Type104Message* Type104Message::New(::google::protobuf::Arena* arena) const {
  Type104Message* n = new Type104Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type104Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type104Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type104Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type104Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type104Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type104Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type104Message)
  return false;
#undef DO_
}

void Type104Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type104Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type104Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type104Message)
}

::google::protobuf::uint8* Type104Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type104Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type104Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type104Message)
  return target;
}

int Type104Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type104Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type104Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type104Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type104Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type104Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type104Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type104Message)
    MergeFrom(*source);
  }
}

void Type104Message::MergeFrom(const Type104Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type104Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type104Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type104Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type104Message::CopyFrom(const Type104Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type104Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type104Message::IsInitialized() const {

  return true;
}

void Type104Message::Swap(Type104Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type104Message::InternalSwap(Type104Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type104Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type104Message_descriptor_;
  metadata.reflection = Type104Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type104Message

// optional string data = 1;
bool Type104Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type104Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type104Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type104Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type104Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type104Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type104Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type104Message.data)
}
 void Type104Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type104Message.data)
}
 void Type104Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type104Message.data)
}
 ::std::string* Type104Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type104Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type104Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type104Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type104Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type104Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type105Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type105Message::Type105Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type105Message)
}

void Type105Message::InitAsDefaultInstance() {
}

Type105Message::Type105Message(const Type105Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type105Message)
}

void Type105Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type105Message::~Type105Message() {
  // @@protoc_insertion_point(destructor:tests.Type105Message)
  SharedDtor();
}

void Type105Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type105Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type105Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type105Message_descriptor_;
}

const Type105Message& Type105Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type105Message* Type105Message::default_instance_ = NULL;

Type105Message* Type105Message::New(::google::protobuf::Arena* arena) const {
  Type105Message* n = new Type105Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type105Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type105Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type105Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type105Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type105Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type105Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type105Message)
  return false;
#undef DO_
}

void Type105Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type105Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type105Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type105Message)
}

::google::protobuf::uint8* Type105Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type105Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type105Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type105Message)
  return target;
}

int Type105Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type105Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type105Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type105Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type105Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type105Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type105Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type105Message)
    MergeFrom(*source);
  }
}

void Type105Message::MergeFrom(const Type105Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type105Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type105Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type105Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type105Message::CopyFrom(const Type105Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type105Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type105Message::IsInitialized() const {

  return true;
}

void Type105Message::Swap(Type105Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type105Message::InternalSwap(Type105Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type105Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type105Message_descriptor_;
  metadata.reflection = Type105Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type105Message

// optional string data = 1;
bool Type105Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type105Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type105Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type105Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type105Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type105Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type105Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type105Message.data)
}
 void Type105Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type105Message.data)
}
 void Type105Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type105Message.data)
}
 ::std::string* Type105Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type105Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type105Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type105Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type105Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type105Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type106Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type106Message::Type106Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type106Message)
}

void Type106Message::InitAsDefaultInstance() {
}

Type106Message::Type106Message(const Type106Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type106Message)
}

void Type106Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type106Message::~Type106Message() {
  // @@protoc_insertion_point(destructor:tests.Type106Message)
  SharedDtor();
}

void Type106Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type106Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type106Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type106Message_descriptor_;
}

const Type106Message& Type106Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type106Message* Type106Message::default_instance_ = NULL;

Type106Message* Type106Message::New(::google::protobuf::Arena* arena) const {
  Type106Message* n = new Type106Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type106Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type106Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type106Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type106Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type106Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type106Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type106Message)
  return false;
#undef DO_
}

void Type106Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type106Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type106Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type106Message)
}

::google::protobuf::uint8* Type106Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type106Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type106Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type106Message)
  return target;
}

int Type106Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type106Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type106Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type106Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type106Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type106Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type106Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type106Message)
    MergeFrom(*source);
  }
}

void Type106Message::MergeFrom(const Type106Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type106Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type106Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type106Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type106Message::CopyFrom(const Type106Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type106Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type106Message::IsInitialized() const {

  return true;
}

void Type106Message::Swap(Type106Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type106Message::InternalSwap(Type106Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type106Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type106Message_descriptor_;
  metadata.reflection = Type106Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type106Message

// optional string data = 1;
bool Type106Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type106Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type106Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type106Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type106Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type106Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type106Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type106Message.data)
}
 void Type106Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type106Message.data)
}
 void Type106Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type106Message.data)
}
 ::std::string* Type106Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type106Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type106Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type106Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type106Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type106Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type107Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type107Message::Type107Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type107Message)
}

void Type107Message::InitAsDefaultInstance() {
}

Type107Message::Type107Message(const Type107Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type107Message)
}

void Type107Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type107Message::~Type107Message() {
  // @@protoc_insertion_point(destructor:tests.Type107Message)
  SharedDtor();
}

void Type107Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type107Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type107Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type107Message_descriptor_;
}

const Type107Message& Type107Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type107Message* Type107Message::default_instance_ = NULL;

Type107Message* Type107Message::New(::google::protobuf::Arena* arena) const {
  Type107Message* n = new Type107Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type107Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type107Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type107Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type107Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type107Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type107Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type107Message)
  return false;
#undef DO_
}

void Type107Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type107Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type107Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type107Message)
}

::google::protobuf::uint8* Type107Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type107Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type107Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type107Message)
  return target;
}

int Type107Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type107Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type107Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type107Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type107Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type107Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type107Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type107Message)
    MergeFrom(*source);
  }
}

void Type107Message::MergeFrom(const Type107Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type107Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type107Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type107Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type107Message::CopyFrom(const Type107Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type107Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type107Message::IsInitialized() const {

  return true;
}

void Type107Message::Swap(Type107Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type107Message::InternalSwap(Type107Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type107Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type107Message_descriptor_;
  metadata.reflection = Type107Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type107Message

// optional string data = 1;
bool Type107Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type107Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type107Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type107Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type107Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type107Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type107Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type107Message.data)
}
 void Type107Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type107Message.data)
}
 void Type107Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type107Message.data)
}
 ::std::string* Type107Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type107Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type107Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type107Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type107Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type107Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type108Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type108Message::Type108Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type108Message)
}

void Type108Message::InitAsDefaultInstance() {
}

Type108Message::Type108Message(const Type108Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type108Message)
}

void Type108Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type108Message::~Type108Message() {
  // @@protoc_insertion_point(destructor:tests.Type108Message)
  SharedDtor();
}

void Type108Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type108Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type108Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type108Message_descriptor_;
}

const Type108Message& Type108Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type108Message* Type108Message::default_instance_ = NULL;

Type108Message* Type108Message::New(::google::protobuf::Arena* arena) const {
  Type108Message* n = new Type108Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type108Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type108Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type108Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type108Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type108Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type108Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type108Message)
  return false;
#undef DO_
}

void Type108Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type108Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type108Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type108Message)
}

::google::protobuf::uint8* Type108Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type108Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type108Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type108Message)
  return target;
}

int Type108Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type108Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type108Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type108Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type108Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type108Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type108Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type108Message)
    MergeFrom(*source);
  }
}

void Type108Message::MergeFrom(const Type108Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type108Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type108Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type108Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type108Message::CopyFrom(const Type108Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type108Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type108Message::IsInitialized() const {

  return true;
}

void Type108Message::Swap(Type108Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type108Message::InternalSwap(Type108Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type108Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type108Message_descriptor_;
  metadata.reflection = Type108Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type108Message

// optional string data = 1;
bool Type108Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type108Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type108Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type108Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type108Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type108Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type108Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type108Message.data)
}
 void Type108Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type108Message.data)
}
 void Type108Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type108Message.data)
}
 ::std::string* Type108Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type108Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type108Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type108Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type108Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type108Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type109Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type109Message::Type109Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type109Message)
}

void Type109Message::InitAsDefaultInstance() {
}

Type109Message::Type109Message(const Type109Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type109Message)
}

void Type109Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type109Message::~Type109Message() {
  // @@protoc_insertion_point(destructor:tests.Type109Message)
  SharedDtor();
}

void Type109Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type109Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type109Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type109Message_descriptor_;
}

const Type109Message& Type109Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type109Message* Type109Message::default_instance_ = NULL;

Type109Message* Type109Message::New(::google::protobuf::Arena* arena) const {
  Type109Message* n = new Type109Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type109Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type109Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type109Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type109Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type109Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type109Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type109Message)
  return false;
#undef DO_
}

void Type109Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type109Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type109Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type109Message)
}

::google::protobuf::uint8* Type109Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type109Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type109Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type109Message)
  return target;
}

int Type109Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type109Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type109Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type109Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type109Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type109Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type109Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type109Message)
    MergeFrom(*source);
  }
}

void Type109Message::MergeFrom(const Type109Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type109Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type109Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type109Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type109Message::CopyFrom(const Type109Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type109Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type109Message::IsInitialized() const {

  return true;
}

void Type109Message::Swap(Type109Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type109Message::InternalSwap(Type109Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type109Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type109Message_descriptor_;
  metadata.reflection = Type109Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type109Message

// optional string data = 1;
bool Type109Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type109Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type109Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type109Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type109Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type109Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type109Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type109Message.data)
}
 void Type109Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type109Message.data)
}
 void Type109Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type109Message.data)
}
 ::std::string* Type109Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type109Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type109Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type109Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type109Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type109Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type110Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type110Message::Type110Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type110Message)
}

void Type110Message::InitAsDefaultInstance() {
}

Type110Message::Type110Message(const Type110Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type110Message)
}

void Type110Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type110Message::~Type110Message() {
  // @@protoc_insertion_point(destructor:tests.Type110Message)
  SharedDtor();
}

void Type110Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type110Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type110Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type110Message_descriptor_;
}

const Type110Message& Type110Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type110Message* Type110Message::default_instance_ = NULL;

Type110Message* Type110Message::New(::google::protobuf::Arena* arena) const {
  Type110Message* n = new Type110Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type110Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type110Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type110Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type110Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type110Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type110Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type110Message)
  return false;
#undef DO_
}

void Type110Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type110Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type110Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type110Message)
}

::google::protobuf::uint8* Type110Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type110Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type110Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type110Message)
  return target;
}

int Type110Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type110Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type110Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type110Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type110Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type110Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type110Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type110Message)
    MergeFrom(*source);
  }
}

void Type110Message::MergeFrom(const Type110Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type110Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type110Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type110Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type110Message::CopyFrom(const Type110Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type110Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type110Message::IsInitialized() const {

  return true;
}

void Type110Message::Swap(Type110Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type110Message::InternalSwap(Type110Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type110Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type110Message_descriptor_;
  metadata.reflection = Type110Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type110Message

// optional string data = 1;
bool Type110Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type110Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type110Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type110Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type110Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type110Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type110Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type110Message.data)
}
 void Type110Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type110Message.data)
}
 void Type110Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type110Message.data)
}
 ::std::string* Type110Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type110Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type110Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type110Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type110Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type110Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type111Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type111Message::Type111Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type111Message)
}

void Type111Message::InitAsDefaultInstance() {
}

Type111Message::Type111Message(const Type111Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type111Message)
}

void Type111Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type111Message::~Type111Message() {
  // @@protoc_insertion_point(destructor:tests.Type111Message)
  SharedDtor();
}

void Type111Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type111Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type111Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type111Message_descriptor_;
}

const Type111Message& Type111Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type111Message* Type111Message::default_instance_ = NULL;

Type111Message* Type111Message::New(::google::protobuf::Arena* arena) const {
  Type111Message* n = new Type111Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type111Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type111Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type111Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type111Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type111Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type111Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type111Message)
  return false;
#undef DO_
}

void Type111Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type111Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type111Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type111Message)
}

::google::protobuf::uint8* Type111Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type111Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type111Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type111Message)
  return target;
}

int Type111Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type111Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type111Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type111Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type111Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type111Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type111Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type111Message)
    MergeFrom(*source);
  }
}

void Type111Message::MergeFrom(const Type111Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type111Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type111Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type111Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type111Message::CopyFrom(const Type111Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type111Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type111Message::IsInitialized() const {

  return true;
}

void Type111Message::Swap(Type111Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type111Message::InternalSwap(Type111Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type111Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type111Message_descriptor_;
  metadata.reflection = Type111Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type111Message

// optional string data = 1;
bool Type111Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type111Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type111Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type111Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type111Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type111Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type111Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type111Message.data)
}
 void Type111Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type111Message.data)
}
 void Type111Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type111Message.data)
}
 ::std::string* Type111Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type111Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type111Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type111Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type111Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type111Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type112Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type112Message::Type112Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type112Message)
}

void Type112Message::InitAsDefaultInstance() {
}

Type112Message::Type112Message(const Type112Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type112Message)
}

void Type112Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type112Message::~Type112Message() {
  // @@protoc_insertion_point(destructor:tests.Type112Message)
  SharedDtor();
}

void Type112Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type112Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type112Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type112Message_descriptor_;
}

const Type112Message& Type112Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type112Message* Type112Message::default_instance_ = NULL;

Type112Message* Type112Message::New(::google::protobuf::Arena* arena) const {
  Type112Message* n = new Type112Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type112Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type112Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type112Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type112Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type112Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type112Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type112Message)
  return false;
#undef DO_
}

void Type112Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type112Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type112Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type112Message)
}

::google::protobuf::uint8* Type112Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type112Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type112Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type112Message)
  return target;
}

int Type112Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type112Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type112Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type112Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type112Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type112Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type112Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type112Message)
    MergeFrom(*source);
  }
}

void Type112Message::MergeFrom(const Type112Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type112Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type112Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type112Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type112Message::CopyFrom(const Type112Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type112Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type112Message::IsInitialized() const {

  return true;
}

void Type112Message::Swap(Type112Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type112Message::InternalSwap(Type112Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type112Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type112Message_descriptor_;
  metadata.reflection = Type112Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type112Message

// optional string data = 1;
bool Type112Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type112Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type112Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type112Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type112Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type112Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type112Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type112Message.data)
}
 void Type112Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type112Message.data)
}
 void Type112Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type112Message.data)
}
 ::std::string* Type112Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type112Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type112Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type112Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type112Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type112Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type113Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type113Message::Type113Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type113Message)
}

void Type113Message::InitAsDefaultInstance() {
}

Type113Message::Type113Message(const Type113Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type113Message)
}

void Type113Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type113Message::~Type113Message() {
  // @@protoc_insertion_point(destructor:tests.Type113Message)
  SharedDtor();
}

void Type113Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type113Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type113Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type113Message_descriptor_;
}

const Type113Message& Type113Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type113Message* Type113Message::default_instance_ = NULL;

Type113Message* Type113Message::New(::google::protobuf::Arena* arena) const {
  Type113Message* n = new Type113Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type113Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type113Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type113Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type113Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type113Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type113Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type113Message)
  return false;
#undef DO_
}

void Type113Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type113Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type113Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type113Message)
}

::google::protobuf::uint8* Type113Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type113Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type113Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type113Message)
  return target;
}

int Type113Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type113Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type113Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type113Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type113Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type113Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type113Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type113Message)
    MergeFrom(*source);
  }
}

void Type113Message::MergeFrom(const Type113Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type113Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type113Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type113Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type113Message::CopyFrom(const Type113Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type113Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type113Message::IsInitialized() const {

  return true;
}

void Type113Message::Swap(Type113Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type113Message::InternalSwap(Type113Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type113Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type113Message_descriptor_;
  metadata.reflection = Type113Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type113Message

// optional string data = 1;
bool Type113Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type113Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type113Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type113Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type113Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type113Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type113Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type113Message.data)
}
 void Type113Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type113Message.data)
}
 void Type113Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type113Message.data)
}
 ::std::string* Type113Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type113Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type113Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type113Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type113Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type113Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type114Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type114Message::Type114Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type114Message)
}

void Type114Message::InitAsDefaultInstance() {
}

Type114Message::Type114Message(const Type114Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type114Message)
}

void Type114Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type114Message::~Type114Message() {
  // @@protoc_insertion_point(destructor:tests.Type114Message)
  SharedDtor();
}

void Type114Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type114Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type114Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type114Message_descriptor_;
}

const Type114Message& Type114Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type114Message* Type114Message::default_instance_ = NULL;

Type114Message* Type114Message::New(::google::protobuf::Arena* arena) const {
  Type114Message* n = new Type114Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type114Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type114Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type114Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type114Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type114Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type114Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type114Message)
  return false;
#undef DO_
}

void Type114Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type114Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type114Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type114Message)
}

::google::protobuf::uint8* Type114Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type114Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type114Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type114Message)
  return target;
}

int Type114Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type114Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type114Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type114Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type114Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type114Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type114Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type114Message)
    MergeFrom(*source);
  }
}

void Type114Message::MergeFrom(const Type114Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type114Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type114Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type114Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type114Message::CopyFrom(const Type114Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type114Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type114Message::IsInitialized() const {

  return true;
}

void Type114Message::Swap(Type114Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type114Message::InternalSwap(Type114Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type114Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type114Message_descriptor_;
  metadata.reflection = Type114Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type114Message

// optional string data = 1;
bool Type114Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type114Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type114Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type114Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type114Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type114Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type114Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type114Message.data)
}
 void Type114Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type114Message.data)
}
 void Type114Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type114Message.data)
}
 ::std::string* Type114Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type114Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type114Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type114Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type114Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type114Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type115Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type115Message::Type115Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type115Message)
}

void Type115Message::InitAsDefaultInstance() {
}

Type115Message::Type115Message(const Type115Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type115Message)
}

void Type115Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type115Message::~Type115Message() {
  // @@protoc_insertion_point(destructor:tests.Type115Message)
  SharedDtor();
}

void Type115Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type115Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type115Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type115Message_descriptor_;
}

const Type115Message& Type115Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type115Message* Type115Message::default_instance_ = NULL;

Type115Message* Type115Message::New(::google::protobuf::Arena* arena) const {
  Type115Message* n = new Type115Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type115Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type115Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type115Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type115Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type115Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type115Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type115Message)
  return false;
#undef DO_
}

void Type115Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type115Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type115Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type115Message)
}

::google::protobuf::uint8* Type115Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type115Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type115Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type115Message)
  return target;
}

int Type115Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type115Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type115Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type115Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type115Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type115Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type115Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type115Message)
    MergeFrom(*source);
  }
}

void Type115Message::MergeFrom(const Type115Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type115Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type115Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type115Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type115Message::CopyFrom(const Type115Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type115Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type115Message::IsInitialized() const {

  return true;
}

void Type115Message::Swap(Type115Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type115Message::InternalSwap(Type115Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type115Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type115Message_descriptor_;
  metadata.reflection = Type115Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type115Message

// optional string data = 1;
bool Type115Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type115Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type115Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type115Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type115Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type115Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type115Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type115Message.data)
}
 void Type115Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type115Message.data)
}
 void Type115Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type115Message.data)
}
 ::std::string* Type115Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type115Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type115Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type115Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type115Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type115Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type116Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type116Message::Type116Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type116Message)
}

void Type116Message::InitAsDefaultInstance() {
}

Type116Message::Type116Message(const Type116Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type116Message)
}

void Type116Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type116Message::~Type116Message() {
  // @@protoc_insertion_point(destructor:tests.Type116Message)
  SharedDtor();
}

void Type116Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type116Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type116Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type116Message_descriptor_;
}

const Type116Message& Type116Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type116Message* Type116Message::default_instance_ = NULL;

Type116Message* Type116Message::New(::google::protobuf::Arena* arena) const {
  Type116Message* n = new Type116Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type116Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type116Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type116Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type116Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type116Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type116Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type116Message)
  return false;
#undef DO_
}

void Type116Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type116Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type116Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type116Message)
}

::google::protobuf::uint8* Type116Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type116Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type116Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type116Message)
  return target;
}

int Type116Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type116Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type116Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type116Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type116Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type116Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type116Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type116Message)
    MergeFrom(*source);
  }
}

void Type116Message::MergeFrom(const Type116Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type116Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type116Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type116Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type116Message::CopyFrom(const Type116Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type116Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type116Message::IsInitialized() const {

  return true;
}

void Type116Message::Swap(Type116Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type116Message::InternalSwap(Type116Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type116Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type116Message_descriptor_;
  metadata.reflection = Type116Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type116Message

// optional string data = 1;
bool Type116Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type116Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type116Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type116Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type116Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type116Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type116Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type116Message.data)
}
 void Type116Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type116Message.data)
}
 void Type116Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type116Message.data)
}
 ::std::string* Type116Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type116Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type116Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type116Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type116Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type116Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type117Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type117Message::Type117Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type117Message)
}

void Type117Message::InitAsDefaultInstance() {
}

Type117Message::Type117Message(const Type117Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type117Message)
}

void Type117Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type117Message::~Type117Message() {
  // @@protoc_insertion_point(destructor:tests.Type117Message)
  SharedDtor();
}

void Type117Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type117Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type117Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type117Message_descriptor_;
}

const Type117Message& Type117Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type117Message* Type117Message::default_instance_ = NULL;

Type117Message* Type117Message::New(::google::protobuf::Arena* arena) const {
  Type117Message* n = new Type117Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type117Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type117Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type117Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type117Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type117Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type117Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type117Message)
  return false;
#undef DO_
}

void Type117Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type117Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type117Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type117Message)
}

::google::protobuf::uint8* Type117Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type117Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type117Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type117Message)
  return target;
}

int Type117Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type117Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type117Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type117Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type117Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type117Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type117Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type117Message)
    MergeFrom(*source);
  }
}

void Type117Message::MergeFrom(const Type117Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type117Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type117Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type117Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type117Message::CopyFrom(const Type117Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type117Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type117Message::IsInitialized() const {

  return true;
}

void Type117Message::Swap(Type117Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type117Message::InternalSwap(Type117Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type117Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type117Message_descriptor_;
  metadata.reflection = Type117Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type117Message

// optional string data = 1;
bool Type117Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type117Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type117Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type117Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type117Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type117Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type117Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type117Message.data)
}
 void Type117Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type117Message.data)
}
 void Type117Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type117Message.data)
}
 ::std::string* Type117Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type117Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type117Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type117Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type117Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type117Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type118Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type118Message::Type118Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type118Message)
}

void Type118Message::InitAsDefaultInstance() {
}

Type118Message::Type118Message(const Type118Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type118Message)
}

void Type118Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type118Message::~Type118Message() {
  // @@protoc_insertion_point(destructor:tests.Type118Message)
  SharedDtor();
}

void Type118Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type118Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type118Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type118Message_descriptor_;
}

const Type118Message& Type118Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type118Message* Type118Message::default_instance_ = NULL;

Type118Message* Type118Message::New(::google::protobuf::Arena* arena) const {
  Type118Message* n = new Type118Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type118Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type118Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type118Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type118Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type118Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type118Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type118Message)
  return false;
#undef DO_
}

void Type118Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type118Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type118Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type118Message)
}

::google::protobuf::uint8* Type118Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type118Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type118Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type118Message)
  return target;
}

int Type118Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type118Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type118Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type118Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type118Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type118Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type118Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type118Message)
    MergeFrom(*source);
  }
}

void Type118Message::MergeFrom(const Type118Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type118Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type118Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type118Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type118Message::CopyFrom(const Type118Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type118Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type118Message::IsInitialized() const {

  return true;
}

void Type118Message::Swap(Type118Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type118Message::InternalSwap(Type118Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type118Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type118Message_descriptor_;
  metadata.reflection = Type118Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type118Message

// optional string data = 1;
bool Type118Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type118Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type118Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type118Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type118Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type118Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type118Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type118Message.data)
}
 void Type118Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type118Message.data)
}
 void Type118Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type118Message.data)
}
 ::std::string* Type118Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type118Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type118Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type118Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type118Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type118Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type119Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type119Message::Type119Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type119Message)
}

void Type119Message::InitAsDefaultInstance() {
}

Type119Message::Type119Message(const Type119Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type119Message)
}

void Type119Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type119Message::~Type119Message() {
  // @@protoc_insertion_point(destructor:tests.Type119Message)
  SharedDtor();
}

void Type119Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type119Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type119Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type119Message_descriptor_;
}

const Type119Message& Type119Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type119Message* Type119Message::default_instance_ = NULL;

Type119Message* Type119Message::New(::google::protobuf::Arena* arena) const {
  Type119Message* n = new Type119Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type119Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type119Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type119Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type119Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type119Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type119Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type119Message)
  return false;
#undef DO_
}

void Type119Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type119Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type119Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type119Message)
}

::google::protobuf::uint8* Type119Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type119Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type119Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type119Message)
  return target;
}

int Type119Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type119Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type119Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type119Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type119Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type119Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type119Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type119Message)
    MergeFrom(*source);
  }
}

void Type119Message::MergeFrom(const Type119Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type119Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type119Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type119Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type119Message::CopyFrom(const Type119Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type119Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type119Message::IsInitialized() const {

  return true;
}

void Type119Message::Swap(Type119Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type119Message::InternalSwap(Type119Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type119Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type119Message_descriptor_;
  metadata.reflection = Type119Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type119Message

// optional string data = 1;
bool Type119Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type119Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type119Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type119Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type119Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type119Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type119Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type119Message.data)
}
 void Type119Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type119Message.data)
}
 void Type119Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type119Message.data)
}
 ::std::string* Type119Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type119Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type119Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type119Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type119Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type119Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type120Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type120Message::Type120Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type120Message)
}

void Type120Message::InitAsDefaultInstance() {
}

Type120Message::Type120Message(const Type120Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type120Message)
}

void Type120Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type120Message::~Type120Message() {
  // @@protoc_insertion_point(destructor:tests.Type120Message)
  SharedDtor();
}

void Type120Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type120Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type120Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type120Message_descriptor_;
}

const Type120Message& Type120Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type120Message* Type120Message::default_instance_ = NULL;

Type120Message* Type120Message::New(::google::protobuf::Arena* arena) const {
  Type120Message* n = new Type120Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type120Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type120Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type120Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type120Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type120Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type120Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type120Message)
  return false;
#undef DO_
}

void Type120Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type120Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type120Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type120Message)
}

::google::protobuf::uint8* Type120Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type120Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type120Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type120Message)
  return target;
}

int Type120Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type120Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type120Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type120Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type120Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type120Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type120Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type120Message)
    MergeFrom(*source);
  }
}

void Type120Message::MergeFrom(const Type120Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type120Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type120Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type120Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type120Message::CopyFrom(const Type120Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type120Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type120Message::IsInitialized() const {

  return true;
}

void Type120Message::Swap(Type120Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type120Message::InternalSwap(Type120Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type120Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type120Message_descriptor_;
  metadata.reflection = Type120Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type120Message

// optional string data = 1;
bool Type120Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type120Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type120Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type120Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type120Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type120Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type120Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type120Message.data)
}
 void Type120Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type120Message.data)
}
 void Type120Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type120Message.data)
}
 ::std::string* Type120Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type120Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type120Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type120Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type120Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type120Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type121Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type121Message::Type121Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type121Message)
}

void Type121Message::InitAsDefaultInstance() {
}

Type121Message::Type121Message(const Type121Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type121Message)
}

void Type121Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type121Message::~Type121Message() {
  // @@protoc_insertion_point(destructor:tests.Type121Message)
  SharedDtor();
}

void Type121Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type121Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type121Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type121Message_descriptor_;
}

const Type121Message& Type121Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type121Message* Type121Message::default_instance_ = NULL;

Type121Message* Type121Message::New(::google::protobuf::Arena* arena) const {
  Type121Message* n = new Type121Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type121Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type121Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type121Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type121Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type121Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type121Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type121Message)
  return false;
#undef DO_
}

void Type121Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type121Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type121Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type121Message)
}

::google::protobuf::uint8* Type121Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type121Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type121Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type121Message)
  return target;
}

int Type121Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type121Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type121Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type121Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type121Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type121Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type121Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type121Message)
    MergeFrom(*source);
  }
}

void Type121Message::MergeFrom(const Type121Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type121Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type121Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type121Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type121Message::CopyFrom(const Type121Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type121Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type121Message::IsInitialized() const {

  return true;
}

void Type121Message::Swap(Type121Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type121Message::InternalSwap(Type121Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type121Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type121Message_descriptor_;
  metadata.reflection = Type121Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type121Message

// optional string data = 1;
bool Type121Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type121Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type121Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type121Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type121Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type121Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type121Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type121Message.data)
}
 void Type121Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type121Message.data)
}
 void Type121Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type121Message.data)
}
 ::std::string* Type121Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type121Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type121Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type121Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type121Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type121Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type122Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type122Message::Type122Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type122Message)
}

void Type122Message::InitAsDefaultInstance() {
}

Type122Message::Type122Message(const Type122Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type122Message)
}

void Type122Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type122Message::~Type122Message() {
  // @@protoc_insertion_point(destructor:tests.Type122Message)
  SharedDtor();
}

void Type122Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type122Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type122Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type122Message_descriptor_;
}

const Type122Message& Type122Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type122Message* Type122Message::default_instance_ = NULL;

Type122Message* Type122Message::New(::google::protobuf::Arena* arena) const {
  Type122Message* n = new Type122Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type122Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type122Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type122Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type122Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type122Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type122Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type122Message)
  return false;
#undef DO_
}

void Type122Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type122Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type122Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type122Message)
}

::google::protobuf::uint8* Type122Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type122Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type122Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type122Message)
  return target;
}

int Type122Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type122Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type122Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type122Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type122Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type122Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type122Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type122Message)
    MergeFrom(*source);
  }
}

void Type122Message::MergeFrom(const Type122Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type122Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type122Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type122Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type122Message::CopyFrom(const Type122Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type122Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type122Message::IsInitialized() const {

  return true;
}

void Type122Message::Swap(Type122Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type122Message::InternalSwap(Type122Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type122Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type122Message_descriptor_;
  metadata.reflection = Type122Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type122Message

// optional string data = 1;
bool Type122Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type122Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type122Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type122Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type122Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type122Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type122Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type122Message.data)
}
 void Type122Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type122Message.data)
}
 void Type122Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type122Message.data)
}
 ::std::string* Type122Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type122Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type122Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type122Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type122Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type122Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type123Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type123Message::Type123Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type123Message)
}

void Type123Message::InitAsDefaultInstance() {
}

Type123Message::Type123Message(const Type123Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type123Message)
}

void Type123Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type123Message::~Type123Message() {
  // @@protoc_insertion_point(destructor:tests.Type123Message)
  SharedDtor();
}

void Type123Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type123Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type123Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type123Message_descriptor_;
}

const Type123Message& Type123Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type123Message* Type123Message::default_instance_ = NULL;

Type123Message* Type123Message::New(::google::protobuf::Arena* arena) const {
  Type123Message* n = new Type123Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type123Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type123Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type123Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type123Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type123Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type123Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type123Message)
  return false;
#undef DO_
}

void Type123Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type123Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type123Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type123Message)
}

::google::protobuf::uint8* Type123Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type123Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type123Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type123Message)
  return target;
}

int Type123Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type123Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type123Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type123Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type123Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type123Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type123Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type123Message)
    MergeFrom(*source);
  }
}

void Type123Message::MergeFrom(const Type123Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type123Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type123Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type123Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type123Message::CopyFrom(const Type123Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type123Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type123Message::IsInitialized() const {

  return true;
}

void Type123Message::Swap(Type123Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type123Message::InternalSwap(Type123Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type123Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type123Message_descriptor_;
  metadata.reflection = Type123Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type123Message

// optional string data = 1;
bool Type123Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type123Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type123Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type123Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type123Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type123Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type123Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type123Message.data)
}
 void Type123Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type123Message.data)
}
 void Type123Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type123Message.data)
}
 ::std::string* Type123Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type123Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type123Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type123Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type123Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type123Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type124Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type124Message::Type124Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type124Message)
}

void Type124Message::InitAsDefaultInstance() {
}

Type124Message::Type124Message(const Type124Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type124Message)
}

void Type124Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type124Message::~Type124Message() {
  // @@protoc_insertion_point(destructor:tests.Type124Message)
  SharedDtor();
}

void Type124Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type124Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type124Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type124Message_descriptor_;
}

const Type124Message& Type124Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type124Message* Type124Message::default_instance_ = NULL;

Type124Message* Type124Message::New(::google::protobuf::Arena* arena) const {
  Type124Message* n = new Type124Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type124Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type124Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type124Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type124Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type124Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type124Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type124Message)
  return false;
#undef DO_
}

void Type124Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type124Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type124Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type124Message)
}

::google::protobuf::uint8* Type124Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type124Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type124Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type124Message)
  return target;
}

int Type124Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type124Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type124Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type124Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type124Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type124Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type124Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type124Message)
    MergeFrom(*source);
  }
}

void Type124Message::MergeFrom(const Type124Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type124Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type124Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type124Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type124Message::CopyFrom(const Type124Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type124Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type124Message::IsInitialized() const {

  return true;
}

void Type124Message::Swap(Type124Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type124Message::InternalSwap(Type124Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type124Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type124Message_descriptor_;
  metadata.reflection = Type124Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type124Message

// optional string data = 1;
bool Type124Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type124Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type124Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type124Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type124Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type124Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type124Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type124Message.data)
}
 void Type124Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type124Message.data)
}
 void Type124Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type124Message.data)
}
 ::std::string* Type124Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type124Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type124Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type124Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type124Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type124Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type125Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type125Message::Type125Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type125Message)
}

void Type125Message::InitAsDefaultInstance() {
}

Type125Message::Type125Message(const Type125Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type125Message)
}

void Type125Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type125Message::~Type125Message() {
  // @@protoc_insertion_point(destructor:tests.Type125Message)
  SharedDtor();
}

void Type125Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type125Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type125Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type125Message_descriptor_;
}

const Type125Message& Type125Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type125Message* Type125Message::default_instance_ = NULL;

Type125Message* Type125Message::New(::google::protobuf::Arena* arena) const {
  Type125Message* n = new Type125Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type125Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type125Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type125Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type125Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type125Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type125Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type125Message)
  return false;
#undef DO_
}

void Type125Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type125Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type125Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type125Message)
}

::google::protobuf::uint8* Type125Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type125Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type125Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type125Message)
  return target;
}

int Type125Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type125Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type125Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type125Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type125Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type125Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type125Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type125Message)
    MergeFrom(*source);
  }
}

void Type125Message::MergeFrom(const Type125Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type125Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type125Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type125Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type125Message::CopyFrom(const Type125Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type125Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type125Message::IsInitialized() const {

  return true;
}

void Type125Message::Swap(Type125Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type125Message::InternalSwap(Type125Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type125Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type125Message_descriptor_;
  metadata.reflection = Type125Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type125Message

// optional string data = 1;
bool Type125Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type125Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type125Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type125Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type125Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type125Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type125Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type125Message.data)
}
 void Type125Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type125Message.data)
}
 void Type125Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type125Message.data)
}
 ::std::string* Type125Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type125Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type125Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type125Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type125Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type125Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type126Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type126Message::Type126Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type126Message)
}

void Type126Message::InitAsDefaultInstance() {
}

Type126Message::Type126Message(const Type126Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type126Message)
}

void Type126Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type126Message::~Type126Message() {
  // @@protoc_insertion_point(destructor:tests.Type126Message)
  SharedDtor();
}

void Type126Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type126Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type126Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type126Message_descriptor_;
}

const Type126Message& Type126Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type126Message* Type126Message::default_instance_ = NULL;

Type126Message* Type126Message::New(::google::protobuf::Arena* arena) const {
  Type126Message* n = new Type126Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type126Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type126Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type126Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type126Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type126Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type126Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type126Message)
  return false;
#undef DO_
}

void Type126Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type126Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type126Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type126Message)
}

::google::protobuf::uint8* Type126Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type126Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type126Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type126Message)
  return target;
}

int Type126Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type126Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type126Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type126Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type126Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type126Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type126Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type126Message)
    MergeFrom(*source);
  }
}

void Type126Message::MergeFrom(const Type126Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type126Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type126Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type126Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type126Message::CopyFrom(const Type126Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type126Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type126Message::IsInitialized() const {

  return true;
}

void Type126Message::Swap(Type126Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type126Message::InternalSwap(Type126Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type126Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type126Message_descriptor_;
  metadata.reflection = Type126Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type126Message

// optional string data = 1;
bool Type126Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type126Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type126Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type126Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type126Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type126Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type126Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type126Message.data)
}
 void Type126Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type126Message.data)
}
 void Type126Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type126Message.data)
}
 ::std::string* Type126Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type126Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type126Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type126Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type126Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type126Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type127Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type127Message::Type127Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type127Message)
}

void Type127Message::InitAsDefaultInstance() {
}

Type127Message::Type127Message(const Type127Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type127Message)
}

void Type127Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type127Message::~Type127Message() {
  // @@protoc_insertion_point(destructor:tests.Type127Message)
  SharedDtor();
}

void Type127Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type127Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type127Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type127Message_descriptor_;
}

const Type127Message& Type127Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type127Message* Type127Message::default_instance_ = NULL;

Type127Message* Type127Message::New(::google::protobuf::Arena* arena) const {
  Type127Message* n = new Type127Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type127Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type127Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type127Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type127Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type127Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type127Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type127Message)
  return false;
#undef DO_
}

void Type127Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type127Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type127Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type127Message)
}

::google::protobuf::uint8* Type127Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type127Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type127Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type127Message)
  return target;
}

int Type127Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type127Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type127Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type127Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type127Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type127Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type127Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type127Message)
    MergeFrom(*source);
  }
}

void Type127Message::MergeFrom(const Type127Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type127Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type127Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type127Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type127Message::CopyFrom(const Type127Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type127Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type127Message::IsInitialized() const {

  return true;
}

void Type127Message::Swap(Type127Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type127Message::InternalSwap(Type127Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type127Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type127Message_descriptor_;
  metadata.reflection = Type127Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type127Message

// optional string data = 1;
bool Type127Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type127Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type127Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type127Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type127Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type127Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type127Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type127Message.data)
}
 void Type127Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type127Message.data)
}
 void Type127Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type127Message.data)
}
 ::std::string* Type127Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type127Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type127Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type127Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type127Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type127Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type128Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type128Message::Type128Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type128Message)
}

void Type128Message::InitAsDefaultInstance() {
}

Type128Message::Type128Message(const Type128Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type128Message)
}

void Type128Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type128Message::~Type128Message() {
  // @@protoc_insertion_point(destructor:tests.Type128Message)
  SharedDtor();
}

void Type128Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type128Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type128Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type128Message_descriptor_;
}

const Type128Message& Type128Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type128Message* Type128Message::default_instance_ = NULL;

Type128Message* Type128Message::New(::google::protobuf::Arena* arena) const {
  Type128Message* n = new Type128Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type128Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type128Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type128Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type128Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type128Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type128Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type128Message)
  return false;
#undef DO_
}

void Type128Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type128Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type128Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type128Message)
}

::google::protobuf::uint8* Type128Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type128Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type128Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type128Message)
  return target;
}

int Type128Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type128Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type128Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type128Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type128Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type128Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type128Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type128Message)
    MergeFrom(*source);
  }
}

void Type128Message::MergeFrom(const Type128Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type128Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type128Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type128Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type128Message::CopyFrom(const Type128Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type128Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type128Message::IsInitialized() const {

  return true;
}

void Type128Message::Swap(Type128Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type128Message::InternalSwap(Type128Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type128Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type128Message_descriptor_;
  metadata.reflection = Type128Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type128Message

// optional string data = 1;
bool Type128Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type128Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type128Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type128Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type128Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type128Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type128Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type128Message.data)
}
 void Type128Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type128Message.data)
}
 void Type128Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type128Message.data)
}
 ::std::string* Type128Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type128Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type128Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type128Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type128Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type128Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type129Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type129Message::Type129Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type129Message)
}

void Type129Message::InitAsDefaultInstance() {
}

Type129Message::Type129Message(const Type129Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type129Message)
}

void Type129Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type129Message::~Type129Message() {
  // @@protoc_insertion_point(destructor:tests.Type129Message)
  SharedDtor();
}

void Type129Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type129Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type129Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type129Message_descriptor_;
}

const Type129Message& Type129Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type129Message* Type129Message::default_instance_ = NULL;

Type129Message* Type129Message::New(::google::protobuf::Arena* arena) const {
  Type129Message* n = new Type129Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type129Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type129Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type129Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type129Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type129Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type129Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type129Message)
  return false;
#undef DO_
}

void Type129Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type129Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type129Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type129Message)
}

::google::protobuf::uint8* Type129Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type129Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type129Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type129Message)
  return target;
}

int Type129Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type129Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type129Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type129Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type129Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type129Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type129Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type129Message)
    MergeFrom(*source);
  }
}

void Type129Message::MergeFrom(const Type129Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type129Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type129Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type129Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type129Message::CopyFrom(const Type129Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type129Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type129Message::IsInitialized() const {

  return true;
}

void Type129Message::Swap(Type129Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type129Message::InternalSwap(Type129Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type129Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type129Message_descriptor_;
  metadata.reflection = Type129Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type129Message

// optional string data = 1;
bool Type129Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type129Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type129Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type129Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type129Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type129Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type129Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type129Message.data)
}
 void Type129Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type129Message.data)
}
 void Type129Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type129Message.data)
}
 ::std::string* Type129Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type129Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type129Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type129Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type129Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type129Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type130Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type130Message::Type130Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type130Message)
}

void Type130Message::InitAsDefaultInstance() {
}

Type130Message::Type130Message(const Type130Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type130Message)
}

void Type130Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type130Message::~Type130Message() {
  // @@protoc_insertion_point(destructor:tests.Type130Message)
  SharedDtor();
}

void Type130Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type130Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type130Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type130Message_descriptor_;
}

const Type130Message& Type130Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type130Message* Type130Message::default_instance_ = NULL;

Type130Message* Type130Message::New(::google::protobuf::Arena* arena) const {
  Type130Message* n = new Type130Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type130Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type130Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type130Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type130Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type130Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type130Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type130Message)
  return false;
#undef DO_
}

void Type130Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type130Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type130Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type130Message)
}

::google::protobuf::uint8* Type130Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type130Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type130Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type130Message)
  return target;
}

int Type130Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type130Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type130Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type130Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type130Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type130Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type130Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type130Message)
    MergeFrom(*source);
  }
}

void Type130Message::MergeFrom(const Type130Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type130Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type130Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type130Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type130Message::CopyFrom(const Type130Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type130Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type130Message::IsInitialized() const {

  return true;
}

void Type130Message::Swap(Type130Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type130Message::InternalSwap(Type130Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type130Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type130Message_descriptor_;
  metadata.reflection = Type130Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type130Message

// optional string data = 1;
bool Type130Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type130Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type130Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type130Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type130Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type130Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type130Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type130Message.data)
}
 void Type130Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type130Message.data)
}
 void Type130Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type130Message.data)
}
 ::std::string* Type130Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type130Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type130Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type130Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type130Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type130Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type131Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type131Message::Type131Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type131Message)
}

void Type131Message::InitAsDefaultInstance() {
}

Type131Message::Type131Message(const Type131Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type131Message)
}

void Type131Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type131Message::~Type131Message() {
  // @@protoc_insertion_point(destructor:tests.Type131Message)
  SharedDtor();
}

void Type131Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type131Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type131Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type131Message_descriptor_;
}

const Type131Message& Type131Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type131Message* Type131Message::default_instance_ = NULL;

Type131Message* Type131Message::New(::google::protobuf::Arena* arena) const {
  Type131Message* n = new Type131Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type131Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type131Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type131Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type131Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type131Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type131Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type131Message)
  return false;
#undef DO_
}

void Type131Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type131Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type131Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type131Message)
}

::google::protobuf::uint8* Type131Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type131Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type131Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type131Message)
  return target;
}

int Type131Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type131Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type131Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type131Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type131Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type131Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type131Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type131Message)
    MergeFrom(*source);
  }
}

void Type131Message::MergeFrom(const Type131Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type131Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type131Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type131Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type131Message::CopyFrom(const Type131Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type131Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type131Message::IsInitialized() const {

  return true;
}

void Type131Message::Swap(Type131Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type131Message::InternalSwap(Type131Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type131Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type131Message_descriptor_;
  metadata.reflection = Type131Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type131Message

// optional string data = 1;
bool Type131Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type131Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type131Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type131Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type131Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type131Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type131Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type131Message.data)
}
 void Type131Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type131Message.data)
}
 void Type131Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type131Message.data)
}
 ::std::string* Type131Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type131Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type131Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type131Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type131Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type131Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type132Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type132Message::Type132Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type132Message)
}

void Type132Message::InitAsDefaultInstance() {
}

Type132Message::Type132Message(const Type132Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type132Message)
}

void Type132Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type132Message::~Type132Message() {
  // @@protoc_insertion_point(destructor:tests.Type132Message)
  SharedDtor();
}

void Type132Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type132Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type132Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type132Message_descriptor_;
}

const Type132Message& Type132Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type132Message* Type132Message::default_instance_ = NULL;

Type132Message* Type132Message::New(::google::protobuf::Arena* arena) const {
  Type132Message* n = new Type132Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type132Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type132Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type132Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type132Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type132Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type132Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type132Message)
  return false;
#undef DO_
}

void Type132Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type132Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type132Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type132Message)
}

::google::protobuf::uint8* Type132Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type132Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type132Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type132Message)
  return target;
}

int Type132Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type132Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type132Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type132Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type132Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type132Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type132Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type132Message)
    MergeFrom(*source);
  }
}

void Type132Message::MergeFrom(const Type132Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type132Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type132Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type132Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type132Message::CopyFrom(const Type132Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type132Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type132Message::IsInitialized() const {

  return true;
}

void Type132Message::Swap(Type132Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type132Message::InternalSwap(Type132Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type132Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type132Message_descriptor_;
  metadata.reflection = Type132Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type132Message

// optional string data = 1;
bool Type132Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type132Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type132Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type132Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type132Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type132Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type132Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type132Message.data)
}
 void Type132Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type132Message.data)
}
 void Type132Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type132Message.data)
}
 ::std::string* Type132Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type132Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type132Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type132Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type132Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type132Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type133Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type133Message::Type133Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type133Message)
}

void Type133Message::InitAsDefaultInstance() {
}

Type133Message::Type133Message(const Type133Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type133Message)
}

void Type133Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type133Message::~Type133Message() {
  // @@protoc_insertion_point(destructor:tests.Type133Message)
  SharedDtor();
}

void Type133Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type133Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type133Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type133Message_descriptor_;
}

const Type133Message& Type133Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type133Message* Type133Message::default_instance_ = NULL;

Type133Message* Type133Message::New(::google::protobuf::Arena* arena) const {
  Type133Message* n = new Type133Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type133Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type133Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type133Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type133Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type133Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type133Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type133Message)
  return false;
#undef DO_
}

void Type133Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type133Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type133Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type133Message)
}

::google::protobuf::uint8* Type133Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type133Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type133Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type133Message)
  return target;
}

int Type133Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type133Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type133Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type133Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type133Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type133Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type133Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type133Message)
    MergeFrom(*source);
  }
}

void Type133Message::MergeFrom(const Type133Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type133Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type133Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type133Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type133Message::CopyFrom(const Type133Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type133Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type133Message::IsInitialized() const {

  return true;
}

void Type133Message::Swap(Type133Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type133Message::InternalSwap(Type133Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type133Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type133Message_descriptor_;
  metadata.reflection = Type133Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type133Message

// optional string data = 1;
bool Type133Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type133Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type133Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type133Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type133Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type133Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type133Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type133Message.data)
}
 void Type133Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type133Message.data)
}
 void Type133Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type133Message.data)
}
 ::std::string* Type133Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type133Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type133Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type133Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type133Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type133Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type134Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type134Message::Type134Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type134Message)
}

void Type134Message::InitAsDefaultInstance() {
}

Type134Message::Type134Message(const Type134Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type134Message)
}

void Type134Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type134Message::~Type134Message() {
  // @@protoc_insertion_point(destructor:tests.Type134Message)
  SharedDtor();
}

void Type134Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type134Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type134Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type134Message_descriptor_;
}

const Type134Message& Type134Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type134Message* Type134Message::default_instance_ = NULL;

Type134Message* Type134Message::New(::google::protobuf::Arena* arena) const {
  Type134Message* n = new Type134Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type134Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type134Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type134Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type134Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type134Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type134Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type134Message)
  return false;
#undef DO_
}

void Type134Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type134Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type134Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type134Message)
}

::google::protobuf::uint8* Type134Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type134Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type134Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type134Message)
  return target;
}

int Type134Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type134Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type134Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type134Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type134Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type134Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type134Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type134Message)
    MergeFrom(*source);
  }
}

void Type134Message::MergeFrom(const Type134Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type134Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type134Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type134Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type134Message::CopyFrom(const Type134Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type134Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type134Message::IsInitialized() const {

  return true;
}

void Type134Message::Swap(Type134Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type134Message::InternalSwap(Type134Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type134Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type134Message_descriptor_;
  metadata.reflection = Type134Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type134Message

// optional string data = 1;
bool Type134Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type134Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type134Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type134Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type134Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type134Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type134Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type134Message.data)
}
 void Type134Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type134Message.data)
}
 void Type134Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type134Message.data)
}
 ::std::string* Type134Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type134Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type134Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type134Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type134Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type134Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type135Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type135Message::Type135Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type135Message)
}

void Type135Message::InitAsDefaultInstance() {
}

Type135Message::Type135Message(const Type135Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type135Message)
}

void Type135Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type135Message::~Type135Message() {
  // @@protoc_insertion_point(destructor:tests.Type135Message)
  SharedDtor();
}

void Type135Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type135Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type135Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type135Message_descriptor_;
}

const Type135Message& Type135Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type135Message* Type135Message::default_instance_ = NULL;

Type135Message* Type135Message::New(::google::protobuf::Arena* arena) const {
  Type135Message* n = new Type135Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type135Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type135Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type135Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type135Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type135Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type135Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type135Message)
  return false;
#undef DO_
}

void Type135Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type135Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type135Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type135Message)
}

::google::protobuf::uint8* Type135Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type135Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type135Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type135Message)
  return target;
}

int Type135Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type135Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type135Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type135Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type135Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type135Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type135Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type135Message)
    MergeFrom(*source);
  }
}

void Type135Message::MergeFrom(const Type135Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type135Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type135Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type135Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type135Message::CopyFrom(const Type135Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type135Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type135Message::IsInitialized() const {

  return true;
}

void Type135Message::Swap(Type135Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type135Message::InternalSwap(Type135Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type135Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type135Message_descriptor_;
  metadata.reflection = Type135Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type135Message

// optional string data = 1;
bool Type135Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type135Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type135Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type135Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type135Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type135Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type135Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type135Message.data)
}
 void Type135Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type135Message.data)
}
 void Type135Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type135Message.data)
}
 ::std::string* Type135Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type135Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type135Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type135Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type135Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type135Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type136Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type136Message::Type136Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type136Message)
}

void Type136Message::InitAsDefaultInstance() {
}

Type136Message::Type136Message(const Type136Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type136Message)
}

void Type136Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type136Message::~Type136Message() {
  // @@protoc_insertion_point(destructor:tests.Type136Message)
  SharedDtor();
}

void Type136Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type136Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type136Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type136Message_descriptor_;
}

const Type136Message& Type136Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type136Message* Type136Message::default_instance_ = NULL;

Type136Message* Type136Message::New(::google::protobuf::Arena* arena) const {
  Type136Message* n = new Type136Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type136Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type136Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type136Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type136Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type136Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type136Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type136Message)
  return false;
#undef DO_
}

void Type136Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type136Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type136Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type136Message)
}

::google::protobuf::uint8* Type136Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type136Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type136Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type136Message)
  return target;
}

int Type136Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type136Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type136Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type136Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type136Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type136Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type136Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type136Message)
    MergeFrom(*source);
  }
}

void Type136Message::MergeFrom(const Type136Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type136Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type136Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type136Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type136Message::CopyFrom(const Type136Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type136Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type136Message::IsInitialized() const {

  return true;
}

void Type136Message::Swap(Type136Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type136Message::InternalSwap(Type136Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type136Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type136Message_descriptor_;
  metadata.reflection = Type136Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type136Message

// optional string data = 1;
bool Type136Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type136Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type136Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type136Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type136Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type136Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type136Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type136Message.data)
}
 void Type136Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type136Message.data)
}
 void Type136Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type136Message.data)
}
 ::std::string* Type136Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type136Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type136Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type136Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type136Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type136Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type137Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type137Message::Type137Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type137Message)
}

void Type137Message::InitAsDefaultInstance() {
}

Type137Message::Type137Message(const Type137Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type137Message)
}

void Type137Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type137Message::~Type137Message() {
  // @@protoc_insertion_point(destructor:tests.Type137Message)
  SharedDtor();
}

void Type137Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type137Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type137Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type137Message_descriptor_;
}

const Type137Message& Type137Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type137Message* Type137Message::default_instance_ = NULL;

Type137Message* Type137Message::New(::google::protobuf::Arena* arena) const {
  Type137Message* n = new Type137Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type137Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type137Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type137Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type137Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type137Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type137Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type137Message)
  return false;
#undef DO_
}

void Type137Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type137Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type137Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type137Message)
}

::google::protobuf::uint8* Type137Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type137Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type137Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type137Message)
  return target;
}

int Type137Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type137Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type137Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type137Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type137Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type137Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type137Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type137Message)
    MergeFrom(*source);
  }
}

void Type137Message::MergeFrom(const Type137Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type137Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type137Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type137Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type137Message::CopyFrom(const Type137Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type137Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type137Message::IsInitialized() const {

  return true;
}

void Type137Message::Swap(Type137Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type137Message::InternalSwap(Type137Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type137Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type137Message_descriptor_;
  metadata.reflection = Type137Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type137Message

// optional string data = 1;
bool Type137Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type137Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type137Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type137Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type137Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type137Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type137Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type137Message.data)
}
 void Type137Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type137Message.data)
}
 void Type137Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type137Message.data)
}
 ::std::string* Type137Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type137Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type137Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type137Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type137Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type137Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type138Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type138Message::Type138Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type138Message)
}

void Type138Message::InitAsDefaultInstance() {
}

Type138Message::Type138Message(const Type138Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type138Message)
}

void Type138Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type138Message::~Type138Message() {
  // @@protoc_insertion_point(destructor:tests.Type138Message)
  SharedDtor();
}

void Type138Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type138Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type138Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type138Message_descriptor_;
}

const Type138Message& Type138Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type138Message* Type138Message::default_instance_ = NULL;

Type138Message* Type138Message::New(::google::protobuf::Arena* arena) const {
  Type138Message* n = new Type138Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type138Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type138Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type138Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type138Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type138Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type138Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type138Message)
  return false;
#undef DO_
}

void Type138Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type138Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type138Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type138Message)
}

::google::protobuf::uint8* Type138Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type138Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type138Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type138Message)
  return target;
}

int Type138Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type138Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type138Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type138Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type138Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type138Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type138Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type138Message)
    MergeFrom(*source);
  }
}

void Type138Message::MergeFrom(const Type138Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type138Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type138Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type138Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type138Message::CopyFrom(const Type138Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type138Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type138Message::IsInitialized() const {

  return true;
}

void Type138Message::Swap(Type138Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type138Message::InternalSwap(Type138Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type138Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type138Message_descriptor_;
  metadata.reflection = Type138Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type138Message

// optional string data = 1;
bool Type138Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type138Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type138Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type138Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type138Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type138Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type138Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type138Message.data)
}
 void Type138Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type138Message.data)
}
 void Type138Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type138Message.data)
}
 ::std::string* Type138Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type138Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type138Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type138Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type138Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type138Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type139Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type139Message::Type139Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type139Message)
}

void Type139Message::InitAsDefaultInstance() {
}

Type139Message::Type139Message(const Type139Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type139Message)
}

void Type139Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type139Message::~Type139Message() {
  // @@protoc_insertion_point(destructor:tests.Type139Message)
  SharedDtor();
}

void Type139Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type139Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type139Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type139Message_descriptor_;
}

const Type139Message& Type139Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type139Message* Type139Message::default_instance_ = NULL;

Type139Message* Type139Message::New(::google::protobuf::Arena* arena) const {
  Type139Message* n = new Type139Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type139Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type139Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type139Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type139Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type139Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type139Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type139Message)
  return false;
#undef DO_
}

void Type139Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type139Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type139Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type139Message)
}

::google::protobuf::uint8* Type139Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type139Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type139Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type139Message)
  return target;
}

int Type139Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type139Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type139Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type139Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type139Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type139Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type139Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type139Message)
    MergeFrom(*source);
  }
}

void Type139Message::MergeFrom(const Type139Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type139Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type139Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type139Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type139Message::CopyFrom(const Type139Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type139Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type139Message::IsInitialized() const {

  return true;
}

void Type139Message::Swap(Type139Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type139Message::InternalSwap(Type139Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type139Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type139Message_descriptor_;
  metadata.reflection = Type139Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type139Message

// optional string data = 1;
bool Type139Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type139Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type139Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type139Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type139Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type139Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type139Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type139Message.data)
}
 void Type139Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type139Message.data)
}
 void Type139Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type139Message.data)
}
 ::std::string* Type139Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type139Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type139Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type139Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type139Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type139Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type140Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type140Message::Type140Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type140Message)
}

void Type140Message::InitAsDefaultInstance() {
}

Type140Message::Type140Message(const Type140Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type140Message)
}

void Type140Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type140Message::~Type140Message() {
  // @@protoc_insertion_point(destructor:tests.Type140Message)
  SharedDtor();
}

void Type140Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type140Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type140Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type140Message_descriptor_;
}

const Type140Message& Type140Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type140Message* Type140Message::default_instance_ = NULL;

Type140Message* Type140Message::New(::google::protobuf::Arena* arena) const {
  Type140Message* n = new Type140Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type140Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type140Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type140Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type140Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type140Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type140Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type140Message)
  return false;
#undef DO_
}

void Type140Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type140Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type140Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type140Message)
}

::google::protobuf::uint8* Type140Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type140Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type140Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type140Message)
  return target;
}

int Type140Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type140Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type140Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type140Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type140Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type140Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type140Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type140Message)
    MergeFrom(*source);
  }
}

void Type140Message::MergeFrom(const Type140Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type140Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type140Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type140Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type140Message::CopyFrom(const Type140Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type140Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type140Message::IsInitialized() const {

  return true;
}

void Type140Message::Swap(Type140Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type140Message::InternalSwap(Type140Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type140Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type140Message_descriptor_;
  metadata.reflection = Type140Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type140Message

// optional string data = 1;
bool Type140Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type140Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type140Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type140Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type140Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type140Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type140Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type140Message.data)
}
 void Type140Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type140Message.data)
}
 void Type140Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type140Message.data)
}
 ::std::string* Type140Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type140Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type140Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type140Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type140Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type140Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type141Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type141Message::Type141Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type141Message)
}

void Type141Message::InitAsDefaultInstance() {
}

Type141Message::Type141Message(const Type141Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type141Message)
}

void Type141Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type141Message::~Type141Message() {
  // @@protoc_insertion_point(destructor:tests.Type141Message)
  SharedDtor();
}

void Type141Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type141Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type141Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type141Message_descriptor_;
}

const Type141Message& Type141Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type141Message* Type141Message::default_instance_ = NULL;

Type141Message* Type141Message::New(::google::protobuf::Arena* arena) const {
  Type141Message* n = new Type141Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type141Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type141Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type141Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type141Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type141Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type141Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type141Message)
  return false;
#undef DO_
}

void Type141Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type141Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type141Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type141Message)
}

::google::protobuf::uint8* Type141Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type141Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type141Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type141Message)
  return target;
}

int Type141Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type141Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type141Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type141Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type141Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type141Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type141Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type141Message)
    MergeFrom(*source);
  }
}

void Type141Message::MergeFrom(const Type141Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type141Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type141Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type141Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type141Message::CopyFrom(const Type141Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type141Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type141Message::IsInitialized() const {

  return true;
}

void Type141Message::Swap(Type141Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type141Message::InternalSwap(Type141Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type141Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type141Message_descriptor_;
  metadata.reflection = Type141Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type141Message

// optional string data = 1;
bool Type141Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type141Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type141Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type141Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type141Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type141Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type141Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type141Message.data)
}
 void Type141Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type141Message.data)
}
 void Type141Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type141Message.data)
}
 ::std::string* Type141Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type141Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type141Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type141Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type141Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type141Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type142Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type142Message::Type142Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type142Message)
}

void Type142Message::InitAsDefaultInstance() {
}

Type142Message::Type142Message(const Type142Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type142Message)
}

void Type142Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type142Message::~Type142Message() {
  // @@protoc_insertion_point(destructor:tests.Type142Message)
  SharedDtor();
}

void Type142Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type142Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type142Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type142Message_descriptor_;
}

const Type142Message& Type142Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type142Message* Type142Message::default_instance_ = NULL;

Type142Message* Type142Message::New(::google::protobuf::Arena* arena) const {
  Type142Message* n = new Type142Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type142Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type142Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type142Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type142Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type142Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type142Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type142Message)
  return false;
#undef DO_
}

void Type142Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type142Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type142Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type142Message)
}

::google::protobuf::uint8* Type142Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type142Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type142Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type142Message)
  return target;
}

int Type142Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type142Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type142Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type142Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type142Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type142Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type142Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type142Message)
    MergeFrom(*source);
  }
}

void Type142Message::MergeFrom(const Type142Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type142Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type142Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type142Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type142Message::CopyFrom(const Type142Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type142Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type142Message::IsInitialized() const {

  return true;
}

void Type142Message::Swap(Type142Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type142Message::InternalSwap(Type142Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type142Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type142Message_descriptor_;
  metadata.reflection = Type142Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type142Message

// optional string data = 1;
bool Type142Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type142Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type142Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type142Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type142Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type142Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type142Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type142Message.data)
}
 void Type142Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type142Message.data)
}
 void Type142Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type142Message.data)
}
 ::std::string* Type142Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type142Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type142Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type142Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type142Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type142Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type143Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type143Message::Type143Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type143Message)
}

void Type143Message::InitAsDefaultInstance() {
}

Type143Message::Type143Message(const Type143Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type143Message)
}

void Type143Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type143Message::~Type143Message() {
  // @@protoc_insertion_point(destructor:tests.Type143Message)
  SharedDtor();
}

void Type143Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type143Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type143Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type143Message_descriptor_;
}

const Type143Message& Type143Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type143Message* Type143Message::default_instance_ = NULL;

Type143Message* Type143Message::New(::google::protobuf::Arena* arena) const {
  Type143Message* n = new Type143Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type143Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type143Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type143Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type143Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type143Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type143Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type143Message)
  return false;
#undef DO_
}

void Type143Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type143Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type143Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type143Message)
}

::google::protobuf::uint8* Type143Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type143Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type143Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type143Message)
  return target;
}

int Type143Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type143Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type143Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type143Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type143Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type143Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type143Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type143Message)
    MergeFrom(*source);
  }
}

void Type143Message::MergeFrom(const Type143Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type143Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type143Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type143Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type143Message::CopyFrom(const Type143Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type143Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type143Message::IsInitialized() const {

  return true;
}

void Type143Message::Swap(Type143Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type143Message::InternalSwap(Type143Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type143Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type143Message_descriptor_;
  metadata.reflection = Type143Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type143Message

// optional string data = 1;
bool Type143Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type143Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type143Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type143Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type143Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type143Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type143Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type143Message.data)
}
 void Type143Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type143Message.data)
}
 void Type143Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type143Message.data)
}
 ::std::string* Type143Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type143Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type143Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type143Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type143Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type143Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type144Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type144Message::Type144Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type144Message)
}

void Type144Message::InitAsDefaultInstance() {
}

Type144Message::Type144Message(const Type144Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type144Message)
}

void Type144Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type144Message::~Type144Message() {
  // @@protoc_insertion_point(destructor:tests.Type144Message)
  SharedDtor();
}

void Type144Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type144Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type144Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type144Message_descriptor_;
}

const Type144Message& Type144Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type144Message* Type144Message::default_instance_ = NULL;

Type144Message* Type144Message::New(::google::protobuf::Arena* arena) const {
  Type144Message* n = new Type144Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type144Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type144Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type144Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type144Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type144Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type144Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type144Message)
  return false;
#undef DO_
}

void Type144Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type144Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type144Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type144Message)
}

::google::protobuf::uint8* Type144Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type144Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type144Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type144Message)
  return target;
}

int Type144Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type144Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type144Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type144Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type144Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type144Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type144Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type144Message)
    MergeFrom(*source);
  }
}

void Type144Message::MergeFrom(const Type144Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type144Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type144Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type144Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type144Message::CopyFrom(const Type144Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type144Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type144Message::IsInitialized() const {

  return true;
}

void Type144Message::Swap(Type144Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type144Message::InternalSwap(Type144Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type144Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type144Message_descriptor_;
  metadata.reflection = Type144Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type144Message

// optional string data = 1;
bool Type144Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type144Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type144Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type144Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type144Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type144Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type144Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type144Message.data)
}
 void Type144Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type144Message.data)
}
 void Type144Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type144Message.data)
}
 ::std::string* Type144Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type144Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type144Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type144Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type144Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type144Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type145Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type145Message::Type145Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type145Message)
}

void Type145Message::InitAsDefaultInstance() {
}

Type145Message::Type145Message(const Type145Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type145Message)
}

void Type145Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type145Message::~Type145Message() {
  // @@protoc_insertion_point(destructor:tests.Type145Message)
  SharedDtor();
}

void Type145Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type145Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type145Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type145Message_descriptor_;
}

const Type145Message& Type145Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type145Message* Type145Message::default_instance_ = NULL;

Type145Message* Type145Message::New(::google::protobuf::Arena* arena) const {
  Type145Message* n = new Type145Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type145Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type145Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type145Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type145Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type145Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type145Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type145Message)
  return false;
#undef DO_
}

void Type145Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type145Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type145Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type145Message)
}

::google::protobuf::uint8* Type145Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type145Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type145Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type145Message)
  return target;
}

int Type145Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type145Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type145Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type145Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type145Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type145Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type145Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type145Message)
    MergeFrom(*source);
  }
}

void Type145Message::MergeFrom(const Type145Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type145Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type145Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type145Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type145Message::CopyFrom(const Type145Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type145Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type145Message::IsInitialized() const {

  return true;
}

void Type145Message::Swap(Type145Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type145Message::InternalSwap(Type145Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type145Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type145Message_descriptor_;
  metadata.reflection = Type145Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type145Message

// optional string data = 1;
bool Type145Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type145Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type145Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type145Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type145Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type145Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type145Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type145Message.data)
}
 void Type145Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type145Message.data)
}
 void Type145Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type145Message.data)
}
 ::std::string* Type145Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type145Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type145Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type145Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type145Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type145Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type146Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type146Message::Type146Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type146Message)
}

void Type146Message::InitAsDefaultInstance() {
}

Type146Message::Type146Message(const Type146Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type146Message)
}

void Type146Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type146Message::~Type146Message() {
  // @@protoc_insertion_point(destructor:tests.Type146Message)
  SharedDtor();
}

void Type146Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type146Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type146Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type146Message_descriptor_;
}

const Type146Message& Type146Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type146Message* Type146Message::default_instance_ = NULL;

Type146Message* Type146Message::New(::google::protobuf::Arena* arena) const {
  Type146Message* n = new Type146Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type146Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type146Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type146Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type146Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type146Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type146Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type146Message)
  return false;
#undef DO_
}

void Type146Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type146Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type146Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type146Message)
}

::google::protobuf::uint8* Type146Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type146Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type146Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type146Message)
  return target;
}

int Type146Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type146Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type146Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type146Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type146Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type146Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type146Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type146Message)
    MergeFrom(*source);
  }
}

void Type146Message::MergeFrom(const Type146Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type146Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type146Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type146Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type146Message::CopyFrom(const Type146Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type146Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type146Message::IsInitialized() const {

  return true;
}

void Type146Message::Swap(Type146Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type146Message::InternalSwap(Type146Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type146Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type146Message_descriptor_;
  metadata.reflection = Type146Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type146Message

// optional string data = 1;
bool Type146Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type146Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type146Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type146Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type146Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type146Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type146Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type146Message.data)
}
 void Type146Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type146Message.data)
}
 void Type146Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type146Message.data)
}
 ::std::string* Type146Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type146Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type146Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type146Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type146Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type146Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type147Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type147Message::Type147Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type147Message)
}

void Type147Message::InitAsDefaultInstance() {
}

Type147Message::Type147Message(const Type147Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type147Message)
}

void Type147Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type147Message::~Type147Message() {
  // @@protoc_insertion_point(destructor:tests.Type147Message)
  SharedDtor();
}

void Type147Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type147Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type147Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type147Message_descriptor_;
}

const Type147Message& Type147Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type147Message* Type147Message::default_instance_ = NULL;

Type147Message* Type147Message::New(::google::protobuf::Arena* arena) const {
  Type147Message* n = new Type147Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type147Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type147Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type147Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type147Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type147Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type147Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type147Message)
  return false;
#undef DO_
}

void Type147Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type147Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type147Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type147Message)
}

::google::protobuf::uint8* Type147Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type147Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type147Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type147Message)
  return target;
}

int Type147Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type147Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type147Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type147Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type147Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type147Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type147Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type147Message)
    MergeFrom(*source);
  }
}

void Type147Message::MergeFrom(const Type147Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type147Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type147Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type147Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type147Message::CopyFrom(const Type147Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type147Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type147Message::IsInitialized() const {

  return true;
}

void Type147Message::Swap(Type147Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type147Message::InternalSwap(Type147Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type147Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type147Message_descriptor_;
  metadata.reflection = Type147Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type147Message

// optional string data = 1;
bool Type147Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type147Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type147Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type147Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type147Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type147Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type147Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type147Message.data)
}
 void Type147Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type147Message.data)
}
 void Type147Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type147Message.data)
}
 ::std::string* Type147Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type147Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type147Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type147Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type147Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type147Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type148Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type148Message::Type148Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type148Message)
}

void Type148Message::InitAsDefaultInstance() {
}

Type148Message::Type148Message(const Type148Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type148Message)
}

void Type148Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type148Message::~Type148Message() {
  // @@protoc_insertion_point(destructor:tests.Type148Message)
  SharedDtor();
}

void Type148Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type148Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type148Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type148Message_descriptor_;
}

const Type148Message& Type148Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type148Message* Type148Message::default_instance_ = NULL;

Type148Message* Type148Message::New(::google::protobuf::Arena* arena) const {
  Type148Message* n = new Type148Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type148Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type148Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type148Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type148Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type148Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type148Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type148Message)
  return false;
#undef DO_
}

void Type148Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type148Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type148Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type148Message)
}

::google::protobuf::uint8* Type148Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type148Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type148Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type148Message)
  return target;
}

int Type148Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type148Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type148Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type148Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type148Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type148Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type148Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type148Message)
    MergeFrom(*source);
  }
}

void Type148Message::MergeFrom(const Type148Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type148Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type148Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type148Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type148Message::CopyFrom(const Type148Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type148Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type148Message::IsInitialized() const {

  return true;
}

void Type148Message::Swap(Type148Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type148Message::InternalSwap(Type148Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type148Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type148Message_descriptor_;
  metadata.reflection = Type148Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type148Message

// optional string data = 1;
bool Type148Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type148Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type148Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type148Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type148Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type148Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type148Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type148Message.data)
}
 void Type148Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type148Message.data)
}
 void Type148Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type148Message.data)
}
 ::std::string* Type148Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type148Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type148Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type148Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type148Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type148Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type149Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type149Message::Type149Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type149Message)
}

void Type149Message::InitAsDefaultInstance() {
}

Type149Message::Type149Message(const Type149Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type149Message)
}

void Type149Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type149Message::~Type149Message() {
  // @@protoc_insertion_point(destructor:tests.Type149Message)
  SharedDtor();
}

void Type149Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type149Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type149Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type149Message_descriptor_;
}

const Type149Message& Type149Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type149Message* Type149Message::default_instance_ = NULL;

Type149Message* Type149Message::New(::google::protobuf::Arena* arena) const {
  Type149Message* n = new Type149Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type149Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type149Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type149Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type149Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type149Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type149Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type149Message)
  return false;
#undef DO_
}

void Type149Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type149Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type149Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type149Message)
}

::google::protobuf::uint8* Type149Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type149Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type149Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type149Message)
  return target;
}

int Type149Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type149Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type149Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type149Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type149Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type149Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type149Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type149Message)
    MergeFrom(*source);
  }
}

void Type149Message::MergeFrom(const Type149Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type149Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type149Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type149Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type149Message::CopyFrom(const Type149Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type149Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type149Message::IsInitialized() const {

  return true;
}

void Type149Message::Swap(Type149Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type149Message::InternalSwap(Type149Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type149Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type149Message_descriptor_;
  metadata.reflection = Type149Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type149Message

// optional string data = 1;
bool Type149Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type149Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type149Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type149Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type149Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type149Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type149Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type149Message.data)
}
 void Type149Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type149Message.data)
}
 void Type149Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type149Message.data)
}
 ::std::string* Type149Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type149Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type149Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type149Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type149Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type149Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type150Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type150Message::Type150Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type150Message)
}

void Type150Message::InitAsDefaultInstance() {
}

Type150Message::Type150Message(const Type150Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type150Message)
}

void Type150Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type150Message::~Type150Message() {
  // @@protoc_insertion_point(destructor:tests.Type150Message)
  SharedDtor();
}

void Type150Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type150Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type150Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type150Message_descriptor_;
}

const Type150Message& Type150Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type150Message* Type150Message::default_instance_ = NULL;

Type150Message* Type150Message::New(::google::protobuf::Arena* arena) const {
  Type150Message* n = new Type150Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type150Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type150Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type150Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type150Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type150Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type150Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type150Message)
  return false;
#undef DO_
}

void Type150Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type150Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type150Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type150Message)
}

::google::protobuf::uint8* Type150Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type150Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type150Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type150Message)
  return target;
}

int Type150Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type150Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type150Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type150Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type150Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type150Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type150Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type150Message)
    MergeFrom(*source);
  }
}

void Type150Message::MergeFrom(const Type150Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type150Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type150Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type150Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type150Message::CopyFrom(const Type150Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type150Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type150Message::IsInitialized() const {

  return true;
}

void Type150Message::Swap(Type150Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type150Message::InternalSwap(Type150Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type150Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type150Message_descriptor_;
  metadata.reflection = Type150Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type150Message

// optional string data = 1;
bool Type150Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type150Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type150Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type150Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type150Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type150Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type150Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type150Message.data)
}
 void Type150Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type150Message.data)
}
 void Type150Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type150Message.data)
}
 ::std::string* Type150Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type150Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type150Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type150Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type150Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type150Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type151Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type151Message::Type151Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type151Message)
}

void Type151Message::InitAsDefaultInstance() {
}

Type151Message::Type151Message(const Type151Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type151Message)
}

void Type151Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type151Message::~Type151Message() {
  // @@protoc_insertion_point(destructor:tests.Type151Message)
  SharedDtor();
}

void Type151Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type151Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type151Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type151Message_descriptor_;
}

const Type151Message& Type151Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type151Message* Type151Message::default_instance_ = NULL;

Type151Message* Type151Message::New(::google::protobuf::Arena* arena) const {
  Type151Message* n = new Type151Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type151Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type151Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type151Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type151Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type151Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type151Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type151Message)
  return false;
#undef DO_
}

void Type151Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type151Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type151Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type151Message)
}

::google::protobuf::uint8* Type151Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type151Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type151Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type151Message)
  return target;
}

int Type151Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type151Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type151Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type151Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type151Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type151Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type151Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type151Message)
    MergeFrom(*source);
  }
}

void Type151Message::MergeFrom(const Type151Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type151Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type151Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type151Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type151Message::CopyFrom(const Type151Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type151Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type151Message::IsInitialized() const {

  return true;
}

void Type151Message::Swap(Type151Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type151Message::InternalSwap(Type151Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type151Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type151Message_descriptor_;
  metadata.reflection = Type151Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type151Message

// optional string data = 1;
bool Type151Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type151Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type151Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type151Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type151Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type151Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type151Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type151Message.data)
}
 void Type151Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type151Message.data)
}
 void Type151Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type151Message.data)
}
 ::std::string* Type151Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type151Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type151Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type151Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type151Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type151Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type152Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type152Message::Type152Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type152Message)
}

void Type152Message::InitAsDefaultInstance() {
}

Type152Message::Type152Message(const Type152Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type152Message)
}

void Type152Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type152Message::~Type152Message() {
  // @@protoc_insertion_point(destructor:tests.Type152Message)
  SharedDtor();
}

void Type152Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type152Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type152Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type152Message_descriptor_;
}

const Type152Message& Type152Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type152Message* Type152Message::default_instance_ = NULL;

Type152Message* Type152Message::New(::google::protobuf::Arena* arena) const {
  Type152Message* n = new Type152Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type152Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type152Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type152Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type152Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type152Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type152Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type152Message)
  return false;
#undef DO_
}

void Type152Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type152Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type152Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type152Message)
}

::google::protobuf::uint8* Type152Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type152Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type152Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type152Message)
  return target;
}

int Type152Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type152Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type152Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type152Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type152Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type152Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type152Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type152Message)
    MergeFrom(*source);
  }
}

void Type152Message::MergeFrom(const Type152Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type152Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type152Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type152Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type152Message::CopyFrom(const Type152Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type152Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type152Message::IsInitialized() const {

  return true;
}

void Type152Message::Swap(Type152Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type152Message::InternalSwap(Type152Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type152Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type152Message_descriptor_;
  metadata.reflection = Type152Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type152Message

// optional string data = 1;
bool Type152Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type152Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type152Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type152Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type152Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type152Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type152Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type152Message.data)
}
 void Type152Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type152Message.data)
}
 void Type152Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type152Message.data)
}
 ::std::string* Type152Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type152Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type152Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type152Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type152Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type152Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type153Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type153Message::Type153Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type153Message)
}

void Type153Message::InitAsDefaultInstance() {
}

Type153Message::Type153Message(const Type153Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type153Message)
}

void Type153Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type153Message::~Type153Message() {
  // @@protoc_insertion_point(destructor:tests.Type153Message)
  SharedDtor();
}

void Type153Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type153Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type153Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type153Message_descriptor_;
}

const Type153Message& Type153Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type153Message* Type153Message::default_instance_ = NULL;

Type153Message* Type153Message::New(::google::protobuf::Arena* arena) const {
  Type153Message* n = new Type153Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type153Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type153Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type153Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type153Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type153Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type153Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type153Message)
  return false;
#undef DO_
}

void Type153Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type153Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type153Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type153Message)
}

::google::protobuf::uint8* Type153Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type153Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type153Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type153Message)
  return target;
}

int Type153Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type153Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type153Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type153Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type153Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type153Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type153Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type153Message)
    MergeFrom(*source);
  }
}

void Type153Message::MergeFrom(const Type153Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type153Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type153Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type153Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type153Message::CopyFrom(const Type153Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type153Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type153Message::IsInitialized() const {

  return true;
}

void Type153Message::Swap(Type153Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type153Message::InternalSwap(Type153Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type153Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type153Message_descriptor_;
  metadata.reflection = Type153Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type153Message

// optional string data = 1;
bool Type153Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type153Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type153Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type153Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type153Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type153Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type153Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type153Message.data)
}
 void Type153Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type153Message.data)
}
 void Type153Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type153Message.data)
}
 ::std::string* Type153Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type153Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type153Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type153Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type153Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type153Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type154Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type154Message::Type154Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type154Message)
}

void Type154Message::InitAsDefaultInstance() {
}

Type154Message::Type154Message(const Type154Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type154Message)
}

void Type154Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type154Message::~Type154Message() {
  // @@protoc_insertion_point(destructor:tests.Type154Message)
  SharedDtor();
}

void Type154Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type154Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type154Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type154Message_descriptor_;
}

const Type154Message& Type154Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type154Message* Type154Message::default_instance_ = NULL;

Type154Message* Type154Message::New(::google::protobuf::Arena* arena) const {
  Type154Message* n = new Type154Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type154Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type154Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type154Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type154Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type154Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type154Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type154Message)
  return false;
#undef DO_
}

void Type154Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type154Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type154Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type154Message)
}

::google::protobuf::uint8* Type154Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type154Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type154Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type154Message)
  return target;
}

int Type154Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type154Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type154Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type154Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type154Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type154Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type154Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type154Message)
    MergeFrom(*source);
  }
}

void Type154Message::MergeFrom(const Type154Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type154Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type154Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type154Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type154Message::CopyFrom(const Type154Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type154Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type154Message::IsInitialized() const {

  return true;
}

void Type154Message::Swap(Type154Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type154Message::InternalSwap(Type154Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type154Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type154Message_descriptor_;
  metadata.reflection = Type154Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type154Message

// optional string data = 1;
bool Type154Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type154Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type154Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type154Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type154Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type154Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type154Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type154Message.data)
}
 void Type154Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type154Message.data)
}
 void Type154Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type154Message.data)
}
 ::std::string* Type154Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type154Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type154Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type154Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type154Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type154Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type155Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type155Message::Type155Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type155Message)
}

void Type155Message::InitAsDefaultInstance() {
}

Type155Message::Type155Message(const Type155Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type155Message)
}

void Type155Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type155Message::~Type155Message() {
  // @@protoc_insertion_point(destructor:tests.Type155Message)
  SharedDtor();
}

void Type155Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type155Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type155Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type155Message_descriptor_;
}

const Type155Message& Type155Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type155Message* Type155Message::default_instance_ = NULL;

Type155Message* Type155Message::New(::google::protobuf::Arena* arena) const {
  Type155Message* n = new Type155Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type155Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type155Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type155Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type155Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type155Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type155Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type155Message)
  return false;
#undef DO_
}

void Type155Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type155Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type155Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type155Message)
}

::google::protobuf::uint8* Type155Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type155Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type155Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type155Message)
  return target;
}

int Type155Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type155Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type155Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type155Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type155Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type155Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type155Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type155Message)
    MergeFrom(*source);
  }
}

void Type155Message::MergeFrom(const Type155Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type155Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type155Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type155Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type155Message::CopyFrom(const Type155Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type155Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type155Message::IsInitialized() const {

  return true;
}

void Type155Message::Swap(Type155Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type155Message::InternalSwap(Type155Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type155Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type155Message_descriptor_;
  metadata.reflection = Type155Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type155Message

// optional string data = 1;
bool Type155Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type155Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type155Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type155Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type155Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type155Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type155Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type155Message.data)
}
 void Type155Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type155Message.data)
}
 void Type155Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type155Message.data)
}
 ::std::string* Type155Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type155Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type155Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type155Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type155Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type155Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type156Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type156Message::Type156Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type156Message)
}

void Type156Message::InitAsDefaultInstance() {
}

Type156Message::Type156Message(const Type156Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type156Message)
}

void Type156Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type156Message::~Type156Message() {
  // @@protoc_insertion_point(destructor:tests.Type156Message)
  SharedDtor();
}

void Type156Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type156Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type156Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type156Message_descriptor_;
}

const Type156Message& Type156Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type156Message* Type156Message::default_instance_ = NULL;

Type156Message* Type156Message::New(::google::protobuf::Arena* arena) const {
  Type156Message* n = new Type156Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type156Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type156Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type156Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type156Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type156Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type156Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type156Message)
  return false;
#undef DO_
}

void Type156Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type156Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type156Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type156Message)
}

::google::protobuf::uint8* Type156Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type156Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type156Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type156Message)
  return target;
}

int Type156Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type156Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type156Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type156Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type156Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type156Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type156Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type156Message)
    MergeFrom(*source);
  }
}

void Type156Message::MergeFrom(const Type156Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type156Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type156Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type156Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type156Message::CopyFrom(const Type156Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type156Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type156Message::IsInitialized() const {

  return true;
}

void Type156Message::Swap(Type156Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type156Message::InternalSwap(Type156Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type156Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type156Message_descriptor_;
  metadata.reflection = Type156Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type156Message

// optional string data = 1;
bool Type156Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type156Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type156Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type156Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type156Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type156Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type156Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type156Message.data)
}
 void Type156Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type156Message.data)
}
 void Type156Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type156Message.data)
}
 ::std::string* Type156Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type156Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type156Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type156Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type156Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type156Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type157Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type157Message::Type157Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type157Message)
}

void Type157Message::InitAsDefaultInstance() {
}

Type157Message::Type157Message(const Type157Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type157Message)
}

void Type157Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type157Message::~Type157Message() {
  // @@protoc_insertion_point(destructor:tests.Type157Message)
  SharedDtor();
}

void Type157Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type157Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type157Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type157Message_descriptor_;
}

const Type157Message& Type157Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type157Message* Type157Message::default_instance_ = NULL;

Type157Message* Type157Message::New(::google::protobuf::Arena* arena) const {
  Type157Message* n = new Type157Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type157Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type157Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type157Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type157Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type157Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type157Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type157Message)
  return false;
#undef DO_
}

void Type157Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type157Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type157Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type157Message)
}

::google::protobuf::uint8* Type157Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type157Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type157Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type157Message)
  return target;
}

int Type157Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type157Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type157Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type157Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type157Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type157Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type157Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type157Message)
    MergeFrom(*source);
  }
}

void Type157Message::MergeFrom(const Type157Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type157Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type157Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type157Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type157Message::CopyFrom(const Type157Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type157Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type157Message::IsInitialized() const {

  return true;
}

void Type157Message::Swap(Type157Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type157Message::InternalSwap(Type157Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type157Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type157Message_descriptor_;
  metadata.reflection = Type157Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type157Message

// optional string data = 1;
bool Type157Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type157Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type157Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type157Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type157Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type157Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type157Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type157Message.data)
}
 void Type157Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type157Message.data)
}
 void Type157Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type157Message.data)
}
 ::std::string* Type157Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type157Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type157Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type157Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type157Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type157Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type158Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type158Message::Type158Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type158Message)
}

void Type158Message::InitAsDefaultInstance() {
}

Type158Message::Type158Message(const Type158Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type158Message)
}

void Type158Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type158Message::~Type158Message() {
  // @@protoc_insertion_point(destructor:tests.Type158Message)
  SharedDtor();
}

void Type158Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type158Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type158Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type158Message_descriptor_;
}

const Type158Message& Type158Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type158Message* Type158Message::default_instance_ = NULL;

Type158Message* Type158Message::New(::google::protobuf::Arena* arena) const {
  Type158Message* n = new Type158Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type158Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type158Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type158Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type158Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type158Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type158Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type158Message)
  return false;
#undef DO_
}

void Type158Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type158Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type158Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type158Message)
}

::google::protobuf::uint8* Type158Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type158Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type158Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type158Message)
  return target;
}

int Type158Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type158Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type158Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type158Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type158Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type158Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type158Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type158Message)
    MergeFrom(*source);
  }
}

void Type158Message::MergeFrom(const Type158Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type158Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type158Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type158Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type158Message::CopyFrom(const Type158Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type158Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type158Message::IsInitialized() const {

  return true;
}

void Type158Message::Swap(Type158Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type158Message::InternalSwap(Type158Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type158Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type158Message_descriptor_;
  metadata.reflection = Type158Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type158Message

// optional string data = 1;
bool Type158Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type158Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type158Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type158Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type158Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type158Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type158Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type158Message.data)
}
 void Type158Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type158Message.data)
}
 void Type158Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type158Message.data)
}
 ::std::string* Type158Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type158Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type158Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type158Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type158Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type158Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type159Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type159Message::Type159Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type159Message)
}

void Type159Message::InitAsDefaultInstance() {
}

Type159Message::Type159Message(const Type159Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type159Message)
}

void Type159Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type159Message::~Type159Message() {
  // @@protoc_insertion_point(destructor:tests.Type159Message)
  SharedDtor();
}

void Type159Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type159Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type159Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type159Message_descriptor_;
}

const Type159Message& Type159Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type159Message* Type159Message::default_instance_ = NULL;

Type159Message* Type159Message::New(::google::protobuf::Arena* arena) const {
  Type159Message* n = new Type159Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type159Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type159Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type159Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type159Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type159Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type159Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type159Message)
  return false;
#undef DO_
}

void Type159Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type159Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type159Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type159Message)
}

::google::protobuf::uint8* Type159Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type159Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type159Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type159Message)
  return target;
}

int Type159Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type159Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type159Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type159Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type159Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type159Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type159Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type159Message)
    MergeFrom(*source);
  }
}

void Type159Message::MergeFrom(const Type159Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type159Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type159Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type159Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type159Message::CopyFrom(const Type159Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type159Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type159Message::IsInitialized() const {

  return true;
}

void Type159Message::Swap(Type159Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type159Message::InternalSwap(Type159Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type159Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type159Message_descriptor_;
  metadata.reflection = Type159Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type159Message

// optional string data = 1;
bool Type159Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type159Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type159Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type159Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type159Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type159Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type159Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type159Message.data)
}
 void Type159Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type159Message.data)
}
 void Type159Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type159Message.data)
}
 ::std::string* Type159Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type159Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type159Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type159Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type159Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type159Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type160Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type160Message::Type160Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type160Message)
}

void Type160Message::InitAsDefaultInstance() {
}

Type160Message::Type160Message(const Type160Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type160Message)
}

void Type160Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type160Message::~Type160Message() {
  // @@protoc_insertion_point(destructor:tests.Type160Message)
  SharedDtor();
}

void Type160Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type160Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type160Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type160Message_descriptor_;
}

const Type160Message& Type160Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type160Message* Type160Message::default_instance_ = NULL;

Type160Message* Type160Message::New(::google::protobuf::Arena* arena) const {
  Type160Message* n = new Type160Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type160Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type160Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type160Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type160Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type160Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type160Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type160Message)
  return false;
#undef DO_
}

void Type160Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type160Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type160Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type160Message)
}

::google::protobuf::uint8* Type160Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type160Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type160Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type160Message)
  return target;
}

int Type160Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type160Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type160Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type160Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type160Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type160Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type160Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type160Message)
    MergeFrom(*source);
  }
}

void Type160Message::MergeFrom(const Type160Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type160Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type160Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type160Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type160Message::CopyFrom(const Type160Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type160Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type160Message::IsInitialized() const {

  return true;
}

void Type160Message::Swap(Type160Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type160Message::InternalSwap(Type160Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type160Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type160Message_descriptor_;
  metadata.reflection = Type160Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type160Message

// optional string data = 1;
bool Type160Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type160Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type160Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type160Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type160Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type160Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type160Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type160Message.data)
}
 void Type160Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type160Message.data)
}
 void Type160Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type160Message.data)
}
 ::std::string* Type160Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type160Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type160Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type160Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type160Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type160Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type161Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type161Message::Type161Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type161Message)
}

void Type161Message::InitAsDefaultInstance() {
}

Type161Message::Type161Message(const Type161Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type161Message)
}

void Type161Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type161Message::~Type161Message() {
  // @@protoc_insertion_point(destructor:tests.Type161Message)
  SharedDtor();
}

void Type161Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type161Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type161Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type161Message_descriptor_;
}

const Type161Message& Type161Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type161Message* Type161Message::default_instance_ = NULL;

Type161Message* Type161Message::New(::google::protobuf::Arena* arena) const {
  Type161Message* n = new Type161Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type161Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type161Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type161Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type161Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type161Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type161Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type161Message)
  return false;
#undef DO_
}

void Type161Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type161Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type161Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type161Message)
}

::google::protobuf::uint8* Type161Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type161Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type161Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type161Message)
  return target;
}

int Type161Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type161Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type161Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type161Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type161Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type161Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type161Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type161Message)
    MergeFrom(*source);
  }
}

void Type161Message::MergeFrom(const Type161Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type161Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type161Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type161Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type161Message::CopyFrom(const Type161Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type161Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type161Message::IsInitialized() const {

  return true;
}

void Type161Message::Swap(Type161Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type161Message::InternalSwap(Type161Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type161Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type161Message_descriptor_;
  metadata.reflection = Type161Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type161Message

// optional string data = 1;
bool Type161Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type161Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type161Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type161Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type161Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type161Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type161Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type161Message.data)
}
 void Type161Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type161Message.data)
}
 void Type161Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type161Message.data)
}
 ::std::string* Type161Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type161Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type161Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type161Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type161Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type161Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type162Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type162Message::Type162Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type162Message)
}

void Type162Message::InitAsDefaultInstance() {
}

Type162Message::Type162Message(const Type162Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type162Message)
}

void Type162Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type162Message::~Type162Message() {
  // @@protoc_insertion_point(destructor:tests.Type162Message)
  SharedDtor();
}

void Type162Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type162Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type162Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type162Message_descriptor_;
}

const Type162Message& Type162Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type162Message* Type162Message::default_instance_ = NULL;

Type162Message* Type162Message::New(::google::protobuf::Arena* arena) const {
  Type162Message* n = new Type162Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type162Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type162Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type162Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type162Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type162Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type162Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type162Message)
  return false;
#undef DO_
}

void Type162Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type162Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type162Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type162Message)
}

::google::protobuf::uint8* Type162Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type162Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type162Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type162Message)
  return target;
}

int Type162Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type162Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type162Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type162Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type162Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type162Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type162Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type162Message)
    MergeFrom(*source);
  }
}

void Type162Message::MergeFrom(const Type162Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type162Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type162Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type162Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type162Message::CopyFrom(const Type162Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type162Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type162Message::IsInitialized() const {

  return true;
}

void Type162Message::Swap(Type162Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type162Message::InternalSwap(Type162Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type162Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type162Message_descriptor_;
  metadata.reflection = Type162Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type162Message

// optional string data = 1;
bool Type162Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type162Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type162Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type162Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type162Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type162Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type162Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type162Message.data)
}
 void Type162Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type162Message.data)
}
 void Type162Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type162Message.data)
}
 ::std::string* Type162Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type162Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type162Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type162Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type162Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type162Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type163Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type163Message::Type163Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type163Message)
}

void Type163Message::InitAsDefaultInstance() {
}

Type163Message::Type163Message(const Type163Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type163Message)
}

void Type163Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type163Message::~Type163Message() {
  // @@protoc_insertion_point(destructor:tests.Type163Message)
  SharedDtor();
}

void Type163Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type163Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type163Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type163Message_descriptor_;
}

const Type163Message& Type163Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type163Message* Type163Message::default_instance_ = NULL;

Type163Message* Type163Message::New(::google::protobuf::Arena* arena) const {
  Type163Message* n = new Type163Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type163Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type163Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type163Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type163Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type163Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type163Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type163Message)
  return false;
#undef DO_
}

void Type163Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type163Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type163Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type163Message)
}

::google::protobuf::uint8* Type163Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type163Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type163Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type163Message)
  return target;
}

int Type163Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type163Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type163Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type163Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type163Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type163Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type163Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type163Message)
    MergeFrom(*source);
  }
}

void Type163Message::MergeFrom(const Type163Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type163Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type163Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type163Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type163Message::CopyFrom(const Type163Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type163Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type163Message::IsInitialized() const {

  return true;
}

void Type163Message::Swap(Type163Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type163Message::InternalSwap(Type163Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type163Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type163Message_descriptor_;
  metadata.reflection = Type163Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type163Message

// optional string data = 1;
bool Type163Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type163Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type163Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type163Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type163Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type163Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type163Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type163Message.data)
}
 void Type163Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type163Message.data)
}
 void Type163Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type163Message.data)
}
 ::std::string* Type163Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type163Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type163Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type163Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type163Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type163Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type164Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type164Message::Type164Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type164Message)
}

void Type164Message::InitAsDefaultInstance() {
}

Type164Message::Type164Message(const Type164Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type164Message)
}

void Type164Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type164Message::~Type164Message() {
  // @@protoc_insertion_point(destructor:tests.Type164Message)
  SharedDtor();
}

void Type164Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type164Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type164Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type164Message_descriptor_;
}

const Type164Message& Type164Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type164Message* Type164Message::default_instance_ = NULL;

Type164Message* Type164Message::New(::google::protobuf::Arena* arena) const {
  Type164Message* n = new Type164Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type164Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type164Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type164Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type164Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type164Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type164Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type164Message)
  return false;
#undef DO_
}

void Type164Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type164Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type164Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type164Message)
}

::google::protobuf::uint8* Type164Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type164Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type164Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type164Message)
  return target;
}

int Type164Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type164Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type164Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type164Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type164Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type164Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type164Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type164Message)
    MergeFrom(*source);
  }
}

void Type164Message::MergeFrom(const Type164Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type164Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type164Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type164Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type164Message::CopyFrom(const Type164Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type164Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type164Message::IsInitialized() const {

  return true;
}

void Type164Message::Swap(Type164Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type164Message::InternalSwap(Type164Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type164Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type164Message_descriptor_;
  metadata.reflection = Type164Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type164Message

// optional string data = 1;
bool Type164Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type164Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type164Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type164Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type164Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type164Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type164Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type164Message.data)
}
 void Type164Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type164Message.data)
}
 void Type164Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type164Message.data)
}
 ::std::string* Type164Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type164Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type164Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type164Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type164Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type164Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type165Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type165Message::Type165Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type165Message)
}

void Type165Message::InitAsDefaultInstance() {
}

Type165Message::Type165Message(const Type165Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type165Message)
}

void Type165Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type165Message::~Type165Message() {
  // @@protoc_insertion_point(destructor:tests.Type165Message)
  SharedDtor();
}

void Type165Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type165Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type165Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type165Message_descriptor_;
}

const Type165Message& Type165Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type165Message* Type165Message::default_instance_ = NULL;

Type165Message* Type165Message::New(::google::protobuf::Arena* arena) const {
  Type165Message* n = new Type165Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type165Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type165Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type165Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type165Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type165Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type165Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type165Message)
  return false;
#undef DO_
}

void Type165Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type165Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type165Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type165Message)
}

::google::protobuf::uint8* Type165Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type165Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type165Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type165Message)
  return target;
}

int Type165Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type165Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type165Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type165Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type165Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type165Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type165Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type165Message)
    MergeFrom(*source);
  }
}

void Type165Message::MergeFrom(const Type165Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type165Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type165Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type165Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type165Message::CopyFrom(const Type165Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type165Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type165Message::IsInitialized() const {

  return true;
}

void Type165Message::Swap(Type165Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type165Message::InternalSwap(Type165Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type165Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type165Message_descriptor_;
  metadata.reflection = Type165Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type165Message

// optional string data = 1;
bool Type165Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type165Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type165Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type165Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type165Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type165Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type165Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type165Message.data)
}
 void Type165Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type165Message.data)
}
 void Type165Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type165Message.data)
}
 ::std::string* Type165Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type165Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type165Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type165Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type165Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type165Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type166Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type166Message::Type166Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type166Message)
}

void Type166Message::InitAsDefaultInstance() {
}

Type166Message::Type166Message(const Type166Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type166Message)
}

void Type166Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type166Message::~Type166Message() {
  // @@protoc_insertion_point(destructor:tests.Type166Message)
  SharedDtor();
}

void Type166Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type166Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type166Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type166Message_descriptor_;
}

const Type166Message& Type166Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type166Message* Type166Message::default_instance_ = NULL;

Type166Message* Type166Message::New(::google::protobuf::Arena* arena) const {
  Type166Message* n = new Type166Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type166Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type166Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type166Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type166Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type166Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type166Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type166Message)
  return false;
#undef DO_
}

void Type166Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type166Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type166Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type166Message)
}

::google::protobuf::uint8* Type166Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type166Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type166Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type166Message)
  return target;
}

int Type166Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type166Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type166Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type166Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type166Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type166Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type166Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type166Message)
    MergeFrom(*source);
  }
}

void Type166Message::MergeFrom(const Type166Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type166Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type166Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type166Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type166Message::CopyFrom(const Type166Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type166Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type166Message::IsInitialized() const {

  return true;
}

void Type166Message::Swap(Type166Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type166Message::InternalSwap(Type166Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type166Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type166Message_descriptor_;
  metadata.reflection = Type166Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type166Message

// optional string data = 1;
bool Type166Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type166Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type166Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type166Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type166Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type166Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type166Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type166Message.data)
}
 void Type166Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type166Message.data)
}
 void Type166Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type166Message.data)
}
 ::std::string* Type166Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type166Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type166Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type166Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type166Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type166Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type167Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type167Message::Type167Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type167Message)
}

void Type167Message::InitAsDefaultInstance() {
}

Type167Message::Type167Message(const Type167Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type167Message)
}

void Type167Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type167Message::~Type167Message() {
  // @@protoc_insertion_point(destructor:tests.Type167Message)
  SharedDtor();
}

void Type167Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type167Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type167Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type167Message_descriptor_;
}

const Type167Message& Type167Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type167Message* Type167Message::default_instance_ = NULL;

Type167Message* Type167Message::New(::google::protobuf::Arena* arena) const {
  Type167Message* n = new Type167Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type167Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type167Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type167Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type167Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type167Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type167Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type167Message)
  return false;
#undef DO_
}

void Type167Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type167Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type167Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type167Message)
}

::google::protobuf::uint8* Type167Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type167Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type167Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type167Message)
  return target;
}

int Type167Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type167Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type167Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type167Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type167Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type167Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type167Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type167Message)
    MergeFrom(*source);
  }
}

void Type167Message::MergeFrom(const Type167Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type167Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type167Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type167Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type167Message::CopyFrom(const Type167Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type167Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type167Message::IsInitialized() const {

  return true;
}

void Type167Message::Swap(Type167Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type167Message::InternalSwap(Type167Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type167Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type167Message_descriptor_;
  metadata.reflection = Type167Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type167Message

// optional string data = 1;
bool Type167Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type167Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type167Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type167Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type167Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type167Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type167Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type167Message.data)
}
 void Type167Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type167Message.data)
}
 void Type167Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type167Message.data)
}
 ::std::string* Type167Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type167Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type167Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type167Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type167Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type167Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type168Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type168Message::Type168Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type168Message)
}

void Type168Message::InitAsDefaultInstance() {
}

Type168Message::Type168Message(const Type168Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type168Message)
}

void Type168Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type168Message::~Type168Message() {
  // @@protoc_insertion_point(destructor:tests.Type168Message)
  SharedDtor();
}

void Type168Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type168Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type168Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type168Message_descriptor_;
}

const Type168Message& Type168Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type168Message* Type168Message::default_instance_ = NULL;

Type168Message* Type168Message::New(::google::protobuf::Arena* arena) const {
  Type168Message* n = new Type168Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type168Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type168Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type168Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type168Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type168Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type168Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type168Message)
  return false;
#undef DO_
}

void Type168Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type168Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type168Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type168Message)
}

::google::protobuf::uint8* Type168Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type168Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type168Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type168Message)
  return target;
}

int Type168Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type168Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type168Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type168Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type168Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type168Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type168Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type168Message)
    MergeFrom(*source);
  }
}

void Type168Message::MergeFrom(const Type168Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type168Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type168Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type168Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type168Message::CopyFrom(const Type168Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type168Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type168Message::IsInitialized() const {

  return true;
}

void Type168Message::Swap(Type168Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type168Message::InternalSwap(Type168Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type168Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type168Message_descriptor_;
  metadata.reflection = Type168Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type168Message

// optional string data = 1;
bool Type168Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type168Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type168Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type168Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type168Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type168Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type168Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type168Message.data)
}
 void Type168Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type168Message.data)
}
 void Type168Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type168Message.data)
}
 ::std::string* Type168Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type168Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type168Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type168Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type168Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type168Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type169Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type169Message::Type169Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type169Message)
}

void Type169Message::InitAsDefaultInstance() {
}

Type169Message::Type169Message(const Type169Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type169Message)
}

void Type169Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type169Message::~Type169Message() {
  // @@protoc_insertion_point(destructor:tests.Type169Message)
  SharedDtor();
}

void Type169Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type169Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type169Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type169Message_descriptor_;
}

const Type169Message& Type169Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type169Message* Type169Message::default_instance_ = NULL;

Type169Message* Type169Message::New(::google::protobuf::Arena* arena) const {
  Type169Message* n = new Type169Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type169Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type169Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type169Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type169Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type169Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type169Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type169Message)
  return false;
#undef DO_
}

void Type169Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type169Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type169Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type169Message)
}

::google::protobuf::uint8* Type169Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type169Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type169Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type169Message)
  return target;
}

int Type169Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type169Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type169Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type169Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type169Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type169Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type169Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type169Message)
    MergeFrom(*source);
  }
}

void Type169Message::MergeFrom(const Type169Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type169Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type169Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type169Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type169Message::CopyFrom(const Type169Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type169Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type169Message::IsInitialized() const {

  return true;
}

void Type169Message::Swap(Type169Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type169Message::InternalSwap(Type169Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type169Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type169Message_descriptor_;
  metadata.reflection = Type169Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type169Message

// optional string data = 1;
bool Type169Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type169Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type169Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type169Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type169Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type169Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type169Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type169Message.data)
}
 void Type169Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type169Message.data)
}
 void Type169Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type169Message.data)
}
 ::std::string* Type169Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type169Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type169Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type169Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type169Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type169Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type170Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type170Message::Type170Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type170Message)
}

void Type170Message::InitAsDefaultInstance() {
}

Type170Message::Type170Message(const Type170Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type170Message)
}

void Type170Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type170Message::~Type170Message() {
  // @@protoc_insertion_point(destructor:tests.Type170Message)
  SharedDtor();
}

void Type170Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type170Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type170Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type170Message_descriptor_;
}

const Type170Message& Type170Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type170Message* Type170Message::default_instance_ = NULL;

Type170Message* Type170Message::New(::google::protobuf::Arena* arena) const {
  Type170Message* n = new Type170Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type170Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type170Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type170Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type170Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type170Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type170Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type170Message)
  return false;
#undef DO_
}

void Type170Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type170Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type170Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type170Message)
}

::google::protobuf::uint8* Type170Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type170Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type170Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type170Message)
  return target;
}

int Type170Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type170Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type170Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type170Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type170Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type170Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type170Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type170Message)
    MergeFrom(*source);
  }
}

void Type170Message::MergeFrom(const Type170Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type170Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type170Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type170Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type170Message::CopyFrom(const Type170Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type170Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type170Message::IsInitialized() const {

  return true;
}

void Type170Message::Swap(Type170Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type170Message::InternalSwap(Type170Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type170Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type170Message_descriptor_;
  metadata.reflection = Type170Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type170Message

// optional string data = 1;
bool Type170Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type170Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type170Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type170Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type170Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type170Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type170Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type170Message.data)
}
 void Type170Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type170Message.data)
}
 void Type170Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type170Message.data)
}
 ::std::string* Type170Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type170Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type170Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type170Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type170Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type170Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type171Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type171Message::Type171Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type171Message)
}

void Type171Message::InitAsDefaultInstance() {
}

Type171Message::Type171Message(const Type171Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type171Message)
}

void Type171Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type171Message::~Type171Message() {
  // @@protoc_insertion_point(destructor:tests.Type171Message)
  SharedDtor();
}

void Type171Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type171Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type171Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type171Message_descriptor_;
}

const Type171Message& Type171Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type171Message* Type171Message::default_instance_ = NULL;

Type171Message* Type171Message::New(::google::protobuf::Arena* arena) const {
  Type171Message* n = new Type171Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type171Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type171Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type171Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type171Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type171Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type171Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type171Message)
  return false;
#undef DO_
}

void Type171Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type171Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type171Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type171Message)
}

::google::protobuf::uint8* Type171Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type171Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type171Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type171Message)
  return target;
}

int Type171Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type171Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type171Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type171Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type171Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type171Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type171Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type171Message)
    MergeFrom(*source);
  }
}

void Type171Message::MergeFrom(const Type171Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type171Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type171Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type171Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type171Message::CopyFrom(const Type171Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type171Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type171Message::IsInitialized() const {

  return true;
}

void Type171Message::Swap(Type171Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type171Message::InternalSwap(Type171Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type171Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type171Message_descriptor_;
  metadata.reflection = Type171Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type171Message

// optional string data = 1;
bool Type171Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type171Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type171Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type171Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type171Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type171Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type171Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type171Message.data)
}
 void Type171Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type171Message.data)
}
 void Type171Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type171Message.data)
}
 ::std::string* Type171Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type171Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type171Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type171Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type171Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type171Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type172Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type172Message::Type172Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type172Message)
}

void Type172Message::InitAsDefaultInstance() {
}

Type172Message::Type172Message(const Type172Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type172Message)
}

void Type172Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type172Message::~Type172Message() {
  // @@protoc_insertion_point(destructor:tests.Type172Message)
  SharedDtor();
}

void Type172Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type172Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type172Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type172Message_descriptor_;
}

const Type172Message& Type172Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type172Message* Type172Message::default_instance_ = NULL;

Type172Message* Type172Message::New(::google::protobuf::Arena* arena) const {
  Type172Message* n = new Type172Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type172Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type172Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type172Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type172Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type172Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type172Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type172Message)
  return false;
#undef DO_
}

void Type172Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type172Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type172Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type172Message)
}

::google::protobuf::uint8* Type172Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type172Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type172Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type172Message)
  return target;
}

int Type172Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type172Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type172Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type172Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type172Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type172Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type172Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type172Message)
    MergeFrom(*source);
  }
}

void Type172Message::MergeFrom(const Type172Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type172Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type172Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type172Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type172Message::CopyFrom(const Type172Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type172Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type172Message::IsInitialized() const {

  return true;
}

void Type172Message::Swap(Type172Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type172Message::InternalSwap(Type172Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type172Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type172Message_descriptor_;
  metadata.reflection = Type172Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type172Message

// optional string data = 1;
bool Type172Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type172Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type172Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type172Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type172Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type172Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type172Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type172Message.data)
}
 void Type172Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type172Message.data)
}
 void Type172Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type172Message.data)
}
 ::std::string* Type172Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type172Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type172Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type172Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type172Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type172Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type173Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type173Message::Type173Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type173Message)
}

void Type173Message::InitAsDefaultInstance() {
}

Type173Message::Type173Message(const Type173Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type173Message)
}

void Type173Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type173Message::~Type173Message() {
  // @@protoc_insertion_point(destructor:tests.Type173Message)
  SharedDtor();
}

void Type173Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type173Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type173Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type173Message_descriptor_;
}

const Type173Message& Type173Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type173Message* Type173Message::default_instance_ = NULL;

Type173Message* Type173Message::New(::google::protobuf::Arena* arena) const {
  Type173Message* n = new Type173Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type173Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type173Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type173Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type173Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type173Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type173Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type173Message)
  return false;
#undef DO_
}

void Type173Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type173Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type173Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type173Message)
}

::google::protobuf::uint8* Type173Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type173Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type173Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type173Message)
  return target;
}

int Type173Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type173Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type173Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type173Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type173Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type173Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type173Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type173Message)
    MergeFrom(*source);
  }
}

void Type173Message::MergeFrom(const Type173Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type173Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type173Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type173Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type173Message::CopyFrom(const Type173Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type173Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type173Message::IsInitialized() const {

  return true;
}

void Type173Message::Swap(Type173Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type173Message::InternalSwap(Type173Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type173Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type173Message_descriptor_;
  metadata.reflection = Type173Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type173Message

// optional string data = 1;
bool Type173Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type173Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type173Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type173Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type173Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type173Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type173Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type173Message.data)
}
 void Type173Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type173Message.data)
}
 void Type173Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type173Message.data)
}
 ::std::string* Type173Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type173Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type173Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type173Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type173Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type173Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type174Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type174Message::Type174Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type174Message)
}

void Type174Message::InitAsDefaultInstance() {
}

Type174Message::Type174Message(const Type174Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type174Message)
}

void Type174Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type174Message::~Type174Message() {
  // @@protoc_insertion_point(destructor:tests.Type174Message)
  SharedDtor();
}

void Type174Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type174Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type174Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type174Message_descriptor_;
}

const Type174Message& Type174Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type174Message* Type174Message::default_instance_ = NULL;

Type174Message* Type174Message::New(::google::protobuf::Arena* arena) const {
  Type174Message* n = new Type174Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type174Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type174Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type174Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type174Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type174Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type174Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type174Message)
  return false;
#undef DO_
}

void Type174Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type174Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type174Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type174Message)
}

::google::protobuf::uint8* Type174Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type174Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type174Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type174Message)
  return target;
}

int Type174Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type174Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type174Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type174Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type174Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type174Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type174Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type174Message)
    MergeFrom(*source);
  }
}

void Type174Message::MergeFrom(const Type174Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type174Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type174Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type174Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type174Message::CopyFrom(const Type174Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type174Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type174Message::IsInitialized() const {

  return true;
}

void Type174Message::Swap(Type174Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type174Message::InternalSwap(Type174Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type174Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type174Message_descriptor_;
  metadata.reflection = Type174Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type174Message

// optional string data = 1;
bool Type174Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type174Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type174Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type174Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type174Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type174Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type174Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type174Message.data)
}
 void Type174Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type174Message.data)
}
 void Type174Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type174Message.data)
}
 ::std::string* Type174Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type174Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type174Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type174Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type174Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type174Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type175Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type175Message::Type175Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type175Message)
}

void Type175Message::InitAsDefaultInstance() {
}

Type175Message::Type175Message(const Type175Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type175Message)
}

void Type175Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type175Message::~Type175Message() {
  // @@protoc_insertion_point(destructor:tests.Type175Message)
  SharedDtor();
}

void Type175Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type175Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type175Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type175Message_descriptor_;
}

const Type175Message& Type175Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type175Message* Type175Message::default_instance_ = NULL;

Type175Message* Type175Message::New(::google::protobuf::Arena* arena) const {
  Type175Message* n = new Type175Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type175Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type175Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type175Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type175Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type175Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type175Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type175Message)
  return false;
#undef DO_
}

void Type175Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type175Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type175Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type175Message)
}

::google::protobuf::uint8* Type175Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type175Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type175Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type175Message)
  return target;
}

int Type175Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type175Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type175Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type175Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type175Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type175Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type175Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type175Message)
    MergeFrom(*source);
  }
}

void Type175Message::MergeFrom(const Type175Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type175Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type175Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type175Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type175Message::CopyFrom(const Type175Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type175Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type175Message::IsInitialized() const {

  return true;
}

void Type175Message::Swap(Type175Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type175Message::InternalSwap(Type175Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type175Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type175Message_descriptor_;
  metadata.reflection = Type175Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type175Message

// optional string data = 1;
bool Type175Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type175Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type175Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type175Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type175Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type175Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type175Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type175Message.data)
}
 void Type175Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type175Message.data)
}
 void Type175Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type175Message.data)
}
 ::std::string* Type175Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type175Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type175Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type175Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type175Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type175Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type176Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type176Message::Type176Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type176Message)
}

void Type176Message::InitAsDefaultInstance() {
}

Type176Message::Type176Message(const Type176Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type176Message)
}

void Type176Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type176Message::~Type176Message() {
  // @@protoc_insertion_point(destructor:tests.Type176Message)
  SharedDtor();
}

void Type176Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type176Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type176Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type176Message_descriptor_;
}

const Type176Message& Type176Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type176Message* Type176Message::default_instance_ = NULL;

Type176Message* Type176Message::New(::google::protobuf::Arena* arena) const {
  Type176Message* n = new Type176Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type176Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type176Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type176Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type176Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type176Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type176Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type176Message)
  return false;
#undef DO_
}

void Type176Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type176Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type176Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type176Message)
}

::google::protobuf::uint8* Type176Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type176Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type176Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type176Message)
  return target;
}

int Type176Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type176Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type176Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type176Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type176Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type176Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type176Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type176Message)
    MergeFrom(*source);
  }
}

void Type176Message::MergeFrom(const Type176Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type176Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type176Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type176Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type176Message::CopyFrom(const Type176Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type176Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type176Message::IsInitialized() const {

  return true;
}

void Type176Message::Swap(Type176Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type176Message::InternalSwap(Type176Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type176Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type176Message_descriptor_;
  metadata.reflection = Type176Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type176Message

// optional string data = 1;
bool Type176Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type176Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type176Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type176Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type176Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type176Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type176Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type176Message.data)
}
 void Type176Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type176Message.data)
}
 void Type176Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type176Message.data)
}
 ::std::string* Type176Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type176Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type176Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type176Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type176Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type176Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type177Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type177Message::Type177Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type177Message)
}

void Type177Message::InitAsDefaultInstance() {
}

Type177Message::Type177Message(const Type177Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type177Message)
}

void Type177Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type177Message::~Type177Message() {
  // @@protoc_insertion_point(destructor:tests.Type177Message)
  SharedDtor();
}

void Type177Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type177Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type177Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type177Message_descriptor_;
}

const Type177Message& Type177Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type177Message* Type177Message::default_instance_ = NULL;

Type177Message* Type177Message::New(::google::protobuf::Arena* arena) const {
  Type177Message* n = new Type177Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type177Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type177Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type177Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type177Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type177Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type177Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type177Message)
  return false;
#undef DO_
}

void Type177Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type177Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type177Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type177Message)
}

::google::protobuf::uint8* Type177Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type177Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type177Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type177Message)
  return target;
}

int Type177Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type177Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type177Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type177Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type177Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type177Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type177Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type177Message)
    MergeFrom(*source);
  }
}

void Type177Message::MergeFrom(const Type177Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type177Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type177Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type177Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type177Message::CopyFrom(const Type177Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type177Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type177Message::IsInitialized() const {

  return true;
}

void Type177Message::Swap(Type177Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type177Message::InternalSwap(Type177Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type177Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type177Message_descriptor_;
  metadata.reflection = Type177Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type177Message

// optional string data = 1;
bool Type177Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type177Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type177Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type177Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type177Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type177Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type177Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type177Message.data)
}
 void Type177Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type177Message.data)
}
 void Type177Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type177Message.data)
}
 ::std::string* Type177Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type177Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type177Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type177Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type177Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type177Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type178Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type178Message::Type178Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type178Message)
}

void Type178Message::InitAsDefaultInstance() {
}

Type178Message::Type178Message(const Type178Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type178Message)
}

void Type178Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type178Message::~Type178Message() {
  // @@protoc_insertion_point(destructor:tests.Type178Message)
  SharedDtor();
}

void Type178Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type178Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type178Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type178Message_descriptor_;
}

const Type178Message& Type178Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type178Message* Type178Message::default_instance_ = NULL;

Type178Message* Type178Message::New(::google::protobuf::Arena* arena) const {
  Type178Message* n = new Type178Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type178Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type178Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type178Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type178Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type178Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type178Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type178Message)
  return false;
#undef DO_
}

void Type178Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type178Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type178Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type178Message)
}

::google::protobuf::uint8* Type178Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type178Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type178Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type178Message)
  return target;
}

int Type178Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type178Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type178Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type178Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type178Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type178Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type178Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type178Message)
    MergeFrom(*source);
  }
}

void Type178Message::MergeFrom(const Type178Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type178Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type178Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type178Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type178Message::CopyFrom(const Type178Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type178Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type178Message::IsInitialized() const {

  return true;
}

void Type178Message::Swap(Type178Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type178Message::InternalSwap(Type178Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type178Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type178Message_descriptor_;
  metadata.reflection = Type178Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type178Message

// optional string data = 1;
bool Type178Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type178Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type178Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type178Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type178Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type178Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type178Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type178Message.data)
}
 void Type178Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type178Message.data)
}
 void Type178Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type178Message.data)
}
 ::std::string* Type178Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type178Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type178Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type178Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type178Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type178Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type179Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type179Message::Type179Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type179Message)
}

void Type179Message::InitAsDefaultInstance() {
}

Type179Message::Type179Message(const Type179Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type179Message)
}

void Type179Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type179Message::~Type179Message() {
  // @@protoc_insertion_point(destructor:tests.Type179Message)
  SharedDtor();
}

void Type179Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type179Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type179Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type179Message_descriptor_;
}

const Type179Message& Type179Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type179Message* Type179Message::default_instance_ = NULL;

Type179Message* Type179Message::New(::google::protobuf::Arena* arena) const {
  Type179Message* n = new Type179Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type179Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type179Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type179Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type179Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type179Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type179Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type179Message)
  return false;
#undef DO_
}

void Type179Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type179Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type179Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type179Message)
}

::google::protobuf::uint8* Type179Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type179Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type179Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type179Message)
  return target;
}

int Type179Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type179Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type179Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type179Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type179Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type179Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type179Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type179Message)
    MergeFrom(*source);
  }
}

void Type179Message::MergeFrom(const Type179Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type179Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type179Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type179Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type179Message::CopyFrom(const Type179Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type179Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type179Message::IsInitialized() const {

  return true;
}

void Type179Message::Swap(Type179Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type179Message::InternalSwap(Type179Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type179Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type179Message_descriptor_;
  metadata.reflection = Type179Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type179Message

// optional string data = 1;
bool Type179Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type179Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type179Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type179Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type179Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type179Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type179Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type179Message.data)
}
 void Type179Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type179Message.data)
}
 void Type179Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type179Message.data)
}
 ::std::string* Type179Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type179Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type179Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type179Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type179Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type179Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type180Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type180Message::Type180Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type180Message)
}

void Type180Message::InitAsDefaultInstance() {
}

Type180Message::Type180Message(const Type180Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type180Message)
}

void Type180Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type180Message::~Type180Message() {
  // @@protoc_insertion_point(destructor:tests.Type180Message)
  SharedDtor();
}

void Type180Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type180Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type180Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type180Message_descriptor_;
}

const Type180Message& Type180Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type180Message* Type180Message::default_instance_ = NULL;

Type180Message* Type180Message::New(::google::protobuf::Arena* arena) const {
  Type180Message* n = new Type180Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type180Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type180Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type180Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type180Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type180Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type180Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type180Message)
  return false;
#undef DO_
}

void Type180Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type180Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type180Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type180Message)
}

::google::protobuf::uint8* Type180Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type180Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type180Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type180Message)
  return target;
}

int Type180Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type180Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type180Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type180Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type180Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type180Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type180Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type180Message)
    MergeFrom(*source);
  }
}

void Type180Message::MergeFrom(const Type180Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type180Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type180Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type180Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type180Message::CopyFrom(const Type180Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type180Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type180Message::IsInitialized() const {

  return true;
}

void Type180Message::Swap(Type180Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type180Message::InternalSwap(Type180Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type180Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type180Message_descriptor_;
  metadata.reflection = Type180Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type180Message

// optional string data = 1;
bool Type180Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type180Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type180Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type180Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type180Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type180Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type180Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type180Message.data)
}
 void Type180Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type180Message.data)
}
 void Type180Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type180Message.data)
}
 ::std::string* Type180Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type180Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type180Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type180Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type180Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type180Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type181Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type181Message::Type181Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type181Message)
}

void Type181Message::InitAsDefaultInstance() {
}

Type181Message::Type181Message(const Type181Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type181Message)
}

void Type181Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type181Message::~Type181Message() {
  // @@protoc_insertion_point(destructor:tests.Type181Message)
  SharedDtor();
}

void Type181Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type181Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type181Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type181Message_descriptor_;
}

const Type181Message& Type181Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type181Message* Type181Message::default_instance_ = NULL;

Type181Message* Type181Message::New(::google::protobuf::Arena* arena) const {
  Type181Message* n = new Type181Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type181Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type181Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type181Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type181Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type181Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type181Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type181Message)
  return false;
#undef DO_
}

void Type181Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type181Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type181Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type181Message)
}

::google::protobuf::uint8* Type181Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type181Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type181Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type181Message)
  return target;
}

int Type181Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type181Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type181Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type181Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type181Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type181Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type181Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type181Message)
    MergeFrom(*source);
  }
}

void Type181Message::MergeFrom(const Type181Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type181Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type181Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type181Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type181Message::CopyFrom(const Type181Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type181Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type181Message::IsInitialized() const {

  return true;
}

void Type181Message::Swap(Type181Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type181Message::InternalSwap(Type181Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type181Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type181Message_descriptor_;
  metadata.reflection = Type181Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type181Message

// optional string data = 1;
bool Type181Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type181Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type181Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type181Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type181Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type181Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type181Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type181Message.data)
}
 void Type181Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type181Message.data)
}
 void Type181Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type181Message.data)
}
 ::std::string* Type181Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type181Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type181Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type181Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type181Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type181Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type182Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type182Message::Type182Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type182Message)
}

void Type182Message::InitAsDefaultInstance() {
}

Type182Message::Type182Message(const Type182Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type182Message)
}

void Type182Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type182Message::~Type182Message() {
  // @@protoc_insertion_point(destructor:tests.Type182Message)
  SharedDtor();
}

void Type182Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type182Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type182Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type182Message_descriptor_;
}

const Type182Message& Type182Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type182Message* Type182Message::default_instance_ = NULL;

Type182Message* Type182Message::New(::google::protobuf::Arena* arena) const {
  Type182Message* n = new Type182Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type182Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type182Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type182Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type182Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type182Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type182Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type182Message)
  return false;
#undef DO_
}

void Type182Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type182Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type182Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type182Message)
}

::google::protobuf::uint8* Type182Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type182Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type182Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type182Message)
  return target;
}

int Type182Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type182Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type182Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type182Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type182Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type182Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type182Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type182Message)
    MergeFrom(*source);
  }
}

void Type182Message::MergeFrom(const Type182Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type182Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type182Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type182Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type182Message::CopyFrom(const Type182Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type182Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type182Message::IsInitialized() const {

  return true;
}

void Type182Message::Swap(Type182Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type182Message::InternalSwap(Type182Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type182Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type182Message_descriptor_;
  metadata.reflection = Type182Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type182Message

// optional string data = 1;
bool Type182Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type182Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type182Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type182Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type182Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type182Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type182Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type182Message.data)
}
 void Type182Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type182Message.data)
}
 void Type182Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type182Message.data)
}
 ::std::string* Type182Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type182Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type182Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type182Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type182Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type182Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type183Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type183Message::Type183Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type183Message)
}

void Type183Message::InitAsDefaultInstance() {
}

Type183Message::Type183Message(const Type183Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type183Message)
}

void Type183Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type183Message::~Type183Message() {
  // @@protoc_insertion_point(destructor:tests.Type183Message)
  SharedDtor();
}

void Type183Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type183Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type183Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type183Message_descriptor_;
}

const Type183Message& Type183Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type183Message* Type183Message::default_instance_ = NULL;

Type183Message* Type183Message::New(::google::protobuf::Arena* arena) const {
  Type183Message* n = new Type183Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type183Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type183Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type183Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type183Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type183Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type183Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type183Message)
  return false;
#undef DO_
}

void Type183Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type183Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type183Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type183Message)
}

::google::protobuf::uint8* Type183Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type183Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type183Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type183Message)
  return target;
}

int Type183Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type183Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type183Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type183Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type183Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type183Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type183Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type183Message)
    MergeFrom(*source);
  }
}

void Type183Message::MergeFrom(const Type183Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type183Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type183Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type183Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type183Message::CopyFrom(const Type183Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type183Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type183Message::IsInitialized() const {

  return true;
}

void Type183Message::Swap(Type183Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type183Message::InternalSwap(Type183Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type183Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type183Message_descriptor_;
  metadata.reflection = Type183Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type183Message

// optional string data = 1;
bool Type183Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type183Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type183Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type183Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type183Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type183Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type183Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type183Message.data)
}
 void Type183Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type183Message.data)
}
 void Type183Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type183Message.data)
}
 ::std::string* Type183Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type183Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type183Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type183Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type183Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type183Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type184Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type184Message::Type184Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type184Message)
}

void Type184Message::InitAsDefaultInstance() {
}

Type184Message::Type184Message(const Type184Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type184Message)
}

void Type184Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type184Message::~Type184Message() {
  // @@protoc_insertion_point(destructor:tests.Type184Message)
  SharedDtor();
}

void Type184Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type184Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type184Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type184Message_descriptor_;
}

const Type184Message& Type184Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type184Message* Type184Message::default_instance_ = NULL;

Type184Message* Type184Message::New(::google::protobuf::Arena* arena) const {
  Type184Message* n = new Type184Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type184Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type184Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type184Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type184Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type184Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type184Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type184Message)
  return false;
#undef DO_
}

void Type184Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type184Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type184Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type184Message)
}

::google::protobuf::uint8* Type184Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type184Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type184Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type184Message)
  return target;
}

int Type184Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type184Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type184Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type184Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type184Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type184Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type184Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type184Message)
    MergeFrom(*source);
  }
}

void Type184Message::MergeFrom(const Type184Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type184Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type184Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type184Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type184Message::CopyFrom(const Type184Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type184Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type184Message::IsInitialized() const {

  return true;
}

void Type184Message::Swap(Type184Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type184Message::InternalSwap(Type184Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type184Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type184Message_descriptor_;
  metadata.reflection = Type184Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type184Message

// optional string data = 1;
bool Type184Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type184Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type184Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type184Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type184Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type184Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type184Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type184Message.data)
}
 void Type184Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type184Message.data)
}
 void Type184Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type184Message.data)
}
 ::std::string* Type184Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type184Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type184Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type184Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type184Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type184Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type185Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type185Message::Type185Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type185Message)
}

void Type185Message::InitAsDefaultInstance() {
}

Type185Message::Type185Message(const Type185Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type185Message)
}

void Type185Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type185Message::~Type185Message() {
  // @@protoc_insertion_point(destructor:tests.Type185Message)
  SharedDtor();
}

void Type185Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type185Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type185Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type185Message_descriptor_;
}

const Type185Message& Type185Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type185Message* Type185Message::default_instance_ = NULL;

Type185Message* Type185Message::New(::google::protobuf::Arena* arena) const {
  Type185Message* n = new Type185Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type185Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type185Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type185Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type185Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type185Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type185Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type185Message)
  return false;
#undef DO_
}

void Type185Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type185Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type185Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type185Message)
}

::google::protobuf::uint8* Type185Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type185Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type185Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type185Message)
  return target;
}

int Type185Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type185Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type185Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type185Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type185Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type185Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type185Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type185Message)
    MergeFrom(*source);
  }
}

void Type185Message::MergeFrom(const Type185Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type185Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type185Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type185Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type185Message::CopyFrom(const Type185Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type185Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type185Message::IsInitialized() const {

  return true;
}

void Type185Message::Swap(Type185Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type185Message::InternalSwap(Type185Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type185Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type185Message_descriptor_;
  metadata.reflection = Type185Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type185Message

// optional string data = 1;
bool Type185Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type185Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type185Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type185Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type185Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type185Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type185Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type185Message.data)
}
 void Type185Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type185Message.data)
}
 void Type185Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type185Message.data)
}
 ::std::string* Type185Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type185Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type185Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type185Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type185Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type185Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type186Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type186Message::Type186Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type186Message)
}

void Type186Message::InitAsDefaultInstance() {
}

Type186Message::Type186Message(const Type186Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type186Message)
}

void Type186Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type186Message::~Type186Message() {
  // @@protoc_insertion_point(destructor:tests.Type186Message)
  SharedDtor();
}

void Type186Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type186Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type186Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type186Message_descriptor_;
}

const Type186Message& Type186Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type186Message* Type186Message::default_instance_ = NULL;

Type186Message* Type186Message::New(::google::protobuf::Arena* arena) const {
  Type186Message* n = new Type186Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type186Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type186Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type186Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type186Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type186Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type186Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type186Message)
  return false;
#undef DO_
}

void Type186Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type186Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type186Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type186Message)
}

::google::protobuf::uint8* Type186Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type186Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type186Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type186Message)
  return target;
}

int Type186Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type186Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type186Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type186Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type186Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type186Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type186Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type186Message)
    MergeFrom(*source);
  }
}

void Type186Message::MergeFrom(const Type186Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type186Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type186Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type186Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type186Message::CopyFrom(const Type186Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type186Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type186Message::IsInitialized() const {

  return true;
}

void Type186Message::Swap(Type186Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type186Message::InternalSwap(Type186Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type186Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type186Message_descriptor_;
  metadata.reflection = Type186Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type186Message

// optional string data = 1;
bool Type186Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type186Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type186Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type186Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type186Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type186Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type186Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type186Message.data)
}
 void Type186Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type186Message.data)
}
 void Type186Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type186Message.data)
}
 ::std::string* Type186Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type186Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type186Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type186Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type186Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type186Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type187Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type187Message::Type187Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type187Message)
}

void Type187Message::InitAsDefaultInstance() {
}

Type187Message::Type187Message(const Type187Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type187Message)
}

void Type187Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type187Message::~Type187Message() {
  // @@protoc_insertion_point(destructor:tests.Type187Message)
  SharedDtor();
}

void Type187Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type187Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type187Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type187Message_descriptor_;
}

const Type187Message& Type187Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type187Message* Type187Message::default_instance_ = NULL;

Type187Message* Type187Message::New(::google::protobuf::Arena* arena) const {
  Type187Message* n = new Type187Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type187Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type187Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type187Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type187Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type187Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type187Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type187Message)
  return false;
#undef DO_
}

void Type187Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type187Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type187Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type187Message)
}

::google::protobuf::uint8* Type187Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type187Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type187Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type187Message)
  return target;
}

int Type187Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type187Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type187Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type187Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type187Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type187Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type187Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type187Message)
    MergeFrom(*source);
  }
}

void Type187Message::MergeFrom(const Type187Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type187Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type187Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type187Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type187Message::CopyFrom(const Type187Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type187Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type187Message::IsInitialized() const {

  return true;
}

void Type187Message::Swap(Type187Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type187Message::InternalSwap(Type187Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type187Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type187Message_descriptor_;
  metadata.reflection = Type187Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type187Message

// optional string data = 1;
bool Type187Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type187Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type187Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type187Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type187Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type187Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type187Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type187Message.data)
}
 void Type187Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type187Message.data)
}
 void Type187Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type187Message.data)
}
 ::std::string* Type187Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type187Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type187Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type187Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type187Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type187Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type188Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type188Message::Type188Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type188Message)
}

void Type188Message::InitAsDefaultInstance() {
}

Type188Message::Type188Message(const Type188Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type188Message)
}

void Type188Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type188Message::~Type188Message() {
  // @@protoc_insertion_point(destructor:tests.Type188Message)
  SharedDtor();
}

void Type188Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type188Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type188Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type188Message_descriptor_;
}

const Type188Message& Type188Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type188Message* Type188Message::default_instance_ = NULL;

Type188Message* Type188Message::New(::google::protobuf::Arena* arena) const {
  Type188Message* n = new Type188Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type188Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type188Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type188Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type188Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type188Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type188Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type188Message)
  return false;
#undef DO_
}

void Type188Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type188Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type188Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type188Message)
}

::google::protobuf::uint8* Type188Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type188Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type188Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type188Message)
  return target;
}

int Type188Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type188Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type188Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type188Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type188Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type188Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type188Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type188Message)
    MergeFrom(*source);
  }
}

void Type188Message::MergeFrom(const Type188Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type188Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type188Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type188Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type188Message::CopyFrom(const Type188Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type188Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type188Message::IsInitialized() const {

  return true;
}

void Type188Message::Swap(Type188Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type188Message::InternalSwap(Type188Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type188Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type188Message_descriptor_;
  metadata.reflection = Type188Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type188Message

// optional string data = 1;
bool Type188Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type188Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type188Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type188Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type188Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type188Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type188Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type188Message.data)
}
 void Type188Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type188Message.data)
}
 void Type188Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type188Message.data)
}
 ::std::string* Type188Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type188Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type188Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type188Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type188Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type188Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type189Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type189Message::Type189Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type189Message)
}

void Type189Message::InitAsDefaultInstance() {
}

Type189Message::Type189Message(const Type189Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type189Message)
}

void Type189Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type189Message::~Type189Message() {
  // @@protoc_insertion_point(destructor:tests.Type189Message)
  SharedDtor();
}

void Type189Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type189Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type189Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type189Message_descriptor_;
}

const Type189Message& Type189Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type189Message* Type189Message::default_instance_ = NULL;

Type189Message* Type189Message::New(::google::protobuf::Arena* arena) const {
  Type189Message* n = new Type189Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type189Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type189Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type189Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type189Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type189Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type189Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type189Message)
  return false;
#undef DO_
}

void Type189Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type189Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type189Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type189Message)
}

::google::protobuf::uint8* Type189Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type189Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type189Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type189Message)
  return target;
}

int Type189Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type189Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type189Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type189Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type189Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type189Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type189Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type189Message)
    MergeFrom(*source);
  }
}

void Type189Message::MergeFrom(const Type189Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type189Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type189Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type189Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type189Message::CopyFrom(const Type189Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type189Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type189Message::IsInitialized() const {

  return true;
}

void Type189Message::Swap(Type189Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type189Message::InternalSwap(Type189Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type189Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type189Message_descriptor_;
  metadata.reflection = Type189Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type189Message

// optional string data = 1;
bool Type189Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type189Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type189Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type189Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type189Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type189Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type189Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type189Message.data)
}
 void Type189Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type189Message.data)
}
 void Type189Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type189Message.data)
}
 ::std::string* Type189Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type189Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type189Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type189Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type189Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type189Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type190Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type190Message::Type190Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type190Message)
}

void Type190Message::InitAsDefaultInstance() {
}

Type190Message::Type190Message(const Type190Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type190Message)
}

void Type190Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type190Message::~Type190Message() {
  // @@protoc_insertion_point(destructor:tests.Type190Message)
  SharedDtor();
}

void Type190Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type190Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type190Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type190Message_descriptor_;
}

const Type190Message& Type190Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type190Message* Type190Message::default_instance_ = NULL;

Type190Message* Type190Message::New(::google::protobuf::Arena* arena) const {
  Type190Message* n = new Type190Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type190Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type190Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type190Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type190Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type190Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type190Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type190Message)
  return false;
#undef DO_
}

void Type190Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type190Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type190Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type190Message)
}

::google::protobuf::uint8* Type190Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type190Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type190Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type190Message)
  return target;
}

int Type190Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type190Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type190Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type190Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type190Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type190Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type190Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type190Message)
    MergeFrom(*source);
  }
}

void Type190Message::MergeFrom(const Type190Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type190Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type190Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type190Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type190Message::CopyFrom(const Type190Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type190Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type190Message::IsInitialized() const {

  return true;
}

void Type190Message::Swap(Type190Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type190Message::InternalSwap(Type190Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type190Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type190Message_descriptor_;
  metadata.reflection = Type190Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type190Message

// optional string data = 1;
bool Type190Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type190Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type190Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type190Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type190Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type190Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type190Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type190Message.data)
}
 void Type190Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type190Message.data)
}
 void Type190Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type190Message.data)
}
 ::std::string* Type190Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type190Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type190Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type190Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type190Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type190Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type191Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type191Message::Type191Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type191Message)
}

void Type191Message::InitAsDefaultInstance() {
}

Type191Message::Type191Message(const Type191Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type191Message)
}

void Type191Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type191Message::~Type191Message() {
  // @@protoc_insertion_point(destructor:tests.Type191Message)
  SharedDtor();
}

void Type191Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type191Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type191Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type191Message_descriptor_;
}

const Type191Message& Type191Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type191Message* Type191Message::default_instance_ = NULL;

Type191Message* Type191Message::New(::google::protobuf::Arena* arena) const {
  Type191Message* n = new Type191Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type191Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type191Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type191Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type191Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type191Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type191Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type191Message)
  return false;
#undef DO_
}

void Type191Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type191Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type191Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type191Message)
}

::google::protobuf::uint8* Type191Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type191Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type191Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type191Message)
  return target;
}

int Type191Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type191Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type191Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type191Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type191Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type191Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type191Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type191Message)
    MergeFrom(*source);
  }
}

void Type191Message::MergeFrom(const Type191Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type191Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type191Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type191Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type191Message::CopyFrom(const Type191Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type191Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type191Message::IsInitialized() const {

  return true;
}

void Type191Message::Swap(Type191Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type191Message::InternalSwap(Type191Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type191Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type191Message_descriptor_;
  metadata.reflection = Type191Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type191Message

// optional string data = 1;
bool Type191Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type191Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type191Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type191Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type191Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type191Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type191Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type191Message.data)
}
 void Type191Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type191Message.data)
}
 void Type191Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type191Message.data)
}
 ::std::string* Type191Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type191Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type191Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type191Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type191Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type191Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type192Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type192Message::Type192Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type192Message)
}

void Type192Message::InitAsDefaultInstance() {
}

Type192Message::Type192Message(const Type192Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type192Message)
}

void Type192Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type192Message::~Type192Message() {
  // @@protoc_insertion_point(destructor:tests.Type192Message)
  SharedDtor();
}

void Type192Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type192Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type192Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type192Message_descriptor_;
}

const Type192Message& Type192Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type192Message* Type192Message::default_instance_ = NULL;

Type192Message* Type192Message::New(::google::protobuf::Arena* arena) const {
  Type192Message* n = new Type192Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type192Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type192Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type192Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type192Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type192Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type192Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type192Message)
  return false;
#undef DO_
}

void Type192Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type192Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type192Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type192Message)
}

::google::protobuf::uint8* Type192Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type192Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type192Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type192Message)
  return target;
}

int Type192Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type192Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type192Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type192Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type192Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type192Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type192Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type192Message)
    MergeFrom(*source);
  }
}

void Type192Message::MergeFrom(const Type192Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type192Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type192Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type192Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type192Message::CopyFrom(const Type192Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type192Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type192Message::IsInitialized() const {

  return true;
}

void Type192Message::Swap(Type192Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type192Message::InternalSwap(Type192Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type192Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type192Message_descriptor_;
  metadata.reflection = Type192Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type192Message

// optional string data = 1;
bool Type192Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type192Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type192Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type192Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type192Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type192Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type192Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type192Message.data)
}
 void Type192Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type192Message.data)
}
 void Type192Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type192Message.data)
}
 ::std::string* Type192Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type192Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type192Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type192Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type192Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type192Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type193Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type193Message::Type193Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type193Message)
}

void Type193Message::InitAsDefaultInstance() {
}

Type193Message::Type193Message(const Type193Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type193Message)
}

void Type193Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type193Message::~Type193Message() {
  // @@protoc_insertion_point(destructor:tests.Type193Message)
  SharedDtor();
}

void Type193Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type193Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type193Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type193Message_descriptor_;
}

const Type193Message& Type193Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type193Message* Type193Message::default_instance_ = NULL;

Type193Message* Type193Message::New(::google::protobuf::Arena* arena) const {
  Type193Message* n = new Type193Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type193Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type193Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type193Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type193Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type193Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type193Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type193Message)
  return false;
#undef DO_
}

void Type193Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type193Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type193Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type193Message)
}

::google::protobuf::uint8* Type193Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type193Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type193Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type193Message)
  return target;
}

int Type193Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type193Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type193Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type193Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type193Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type193Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type193Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type193Message)
    MergeFrom(*source);
  }
}

void Type193Message::MergeFrom(const Type193Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type193Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type193Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type193Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type193Message::CopyFrom(const Type193Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type193Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type193Message::IsInitialized() const {

  return true;
}

void Type193Message::Swap(Type193Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type193Message::InternalSwap(Type193Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type193Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type193Message_descriptor_;
  metadata.reflection = Type193Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type193Message

// optional string data = 1;
bool Type193Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type193Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type193Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type193Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type193Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type193Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type193Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type193Message.data)
}
 void Type193Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type193Message.data)
}
 void Type193Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type193Message.data)
}
 ::std::string* Type193Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type193Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type193Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type193Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type193Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type193Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type194Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type194Message::Type194Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type194Message)
}

void Type194Message::InitAsDefaultInstance() {
}

Type194Message::Type194Message(const Type194Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type194Message)
}

void Type194Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type194Message::~Type194Message() {
  // @@protoc_insertion_point(destructor:tests.Type194Message)
  SharedDtor();
}

void Type194Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type194Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type194Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type194Message_descriptor_;
}

const Type194Message& Type194Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type194Message* Type194Message::default_instance_ = NULL;

Type194Message* Type194Message::New(::google::protobuf::Arena* arena) const {
  Type194Message* n = new Type194Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type194Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type194Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type194Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type194Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type194Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type194Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type194Message)
  return false;
#undef DO_
}

void Type194Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type194Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type194Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type194Message)
}

::google::protobuf::uint8* Type194Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type194Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type194Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type194Message)
  return target;
}

int Type194Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type194Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type194Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type194Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type194Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type194Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type194Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type194Message)
    MergeFrom(*source);
  }
}

void Type194Message::MergeFrom(const Type194Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type194Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type194Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type194Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type194Message::CopyFrom(const Type194Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type194Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type194Message::IsInitialized() const {

  return true;
}

void Type194Message::Swap(Type194Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type194Message::InternalSwap(Type194Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type194Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type194Message_descriptor_;
  metadata.reflection = Type194Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type194Message

// optional string data = 1;
bool Type194Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type194Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type194Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type194Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type194Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type194Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type194Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type194Message.data)
}
 void Type194Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type194Message.data)
}
 void Type194Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type194Message.data)
}
 ::std::string* Type194Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type194Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type194Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type194Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type194Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type194Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type195Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type195Message::Type195Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type195Message)
}

void Type195Message::InitAsDefaultInstance() {
}

Type195Message::Type195Message(const Type195Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type195Message)
}

void Type195Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type195Message::~Type195Message() {
  // @@protoc_insertion_point(destructor:tests.Type195Message)
  SharedDtor();
}

void Type195Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type195Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type195Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type195Message_descriptor_;
}

const Type195Message& Type195Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type195Message* Type195Message::default_instance_ = NULL;

Type195Message* Type195Message::New(::google::protobuf::Arena* arena) const {
  Type195Message* n = new Type195Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type195Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type195Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type195Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type195Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type195Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type195Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type195Message)
  return false;
#undef DO_
}

void Type195Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type195Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type195Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type195Message)
}

::google::protobuf::uint8* Type195Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type195Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type195Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type195Message)
  return target;
}

int Type195Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type195Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type195Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type195Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type195Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type195Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type195Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type195Message)
    MergeFrom(*source);
  }
}

void Type195Message::MergeFrom(const Type195Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type195Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type195Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type195Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type195Message::CopyFrom(const Type195Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type195Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type195Message::IsInitialized() const {

  return true;
}

void Type195Message::Swap(Type195Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type195Message::InternalSwap(Type195Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type195Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type195Message_descriptor_;
  metadata.reflection = Type195Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type195Message

// optional string data = 1;
bool Type195Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type195Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type195Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type195Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type195Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type195Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type195Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type195Message.data)
}
 void Type195Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type195Message.data)
}
 void Type195Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type195Message.data)
}
 ::std::string* Type195Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type195Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type195Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type195Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type195Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type195Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type196Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type196Message::Type196Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type196Message)
}

void Type196Message::InitAsDefaultInstance() {
}

Type196Message::Type196Message(const Type196Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type196Message)
}

void Type196Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type196Message::~Type196Message() {
  // @@protoc_insertion_point(destructor:tests.Type196Message)
  SharedDtor();
}

void Type196Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type196Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type196Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type196Message_descriptor_;
}

const Type196Message& Type196Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type196Message* Type196Message::default_instance_ = NULL;

Type196Message* Type196Message::New(::google::protobuf::Arena* arena) const {
  Type196Message* n = new Type196Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type196Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type196Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type196Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type196Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type196Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type196Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type196Message)
  return false;
#undef DO_
}

void Type196Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type196Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type196Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type196Message)
}

::google::protobuf::uint8* Type196Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type196Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type196Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type196Message)
  return target;
}

int Type196Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type196Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type196Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type196Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type196Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type196Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type196Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type196Message)
    MergeFrom(*source);
  }
}

void Type196Message::MergeFrom(const Type196Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type196Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type196Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type196Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type196Message::CopyFrom(const Type196Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type196Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type196Message::IsInitialized() const {

  return true;
}

void Type196Message::Swap(Type196Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type196Message::InternalSwap(Type196Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type196Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type196Message_descriptor_;
  metadata.reflection = Type196Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type196Message

// optional string data = 1;
bool Type196Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type196Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type196Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type196Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type196Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type196Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type196Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type196Message.data)
}
 void Type196Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type196Message.data)
}
 void Type196Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type196Message.data)
}
 ::std::string* Type196Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type196Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type196Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type196Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type196Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type196Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type197Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type197Message::Type197Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type197Message)
}

void Type197Message::InitAsDefaultInstance() {
}

Type197Message::Type197Message(const Type197Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type197Message)
}

void Type197Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type197Message::~Type197Message() {
  // @@protoc_insertion_point(destructor:tests.Type197Message)
  SharedDtor();
}

void Type197Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type197Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type197Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type197Message_descriptor_;
}

const Type197Message& Type197Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type197Message* Type197Message::default_instance_ = NULL;

Type197Message* Type197Message::New(::google::protobuf::Arena* arena) const {
  Type197Message* n = new Type197Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type197Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type197Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type197Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type197Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type197Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type197Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type197Message)
  return false;
#undef DO_
}

void Type197Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type197Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type197Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type197Message)
}

::google::protobuf::uint8* Type197Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type197Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type197Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type197Message)
  return target;
}

int Type197Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type197Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type197Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type197Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type197Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type197Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type197Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type197Message)
    MergeFrom(*source);
  }
}

void Type197Message::MergeFrom(const Type197Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type197Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type197Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type197Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type197Message::CopyFrom(const Type197Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type197Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type197Message::IsInitialized() const {

  return true;
}

void Type197Message::Swap(Type197Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type197Message::InternalSwap(Type197Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type197Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type197Message_descriptor_;
  metadata.reflection = Type197Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type197Message

// optional string data = 1;
bool Type197Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type197Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type197Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type197Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type197Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type197Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type197Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type197Message.data)
}
 void Type197Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type197Message.data)
}
 void Type197Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type197Message.data)
}
 ::std::string* Type197Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type197Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type197Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type197Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type197Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type197Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type198Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type198Message::Type198Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type198Message)
}

void Type198Message::InitAsDefaultInstance() {
}

Type198Message::Type198Message(const Type198Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type198Message)
}

void Type198Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type198Message::~Type198Message() {
  // @@protoc_insertion_point(destructor:tests.Type198Message)
  SharedDtor();
}

void Type198Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type198Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type198Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type198Message_descriptor_;
}

const Type198Message& Type198Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type198Message* Type198Message::default_instance_ = NULL;

Type198Message* Type198Message::New(::google::protobuf::Arena* arena) const {
  Type198Message* n = new Type198Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type198Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type198Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type198Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type198Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type198Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type198Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type198Message)
  return false;
#undef DO_
}

void Type198Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type198Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type198Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type198Message)
}

::google::protobuf::uint8* Type198Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type198Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type198Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type198Message)
  return target;
}

int Type198Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type198Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type198Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type198Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type198Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type198Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type198Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type198Message)
    MergeFrom(*source);
  }
}

void Type198Message::MergeFrom(const Type198Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type198Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type198Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type198Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type198Message::CopyFrom(const Type198Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type198Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type198Message::IsInitialized() const {

  return true;
}

void Type198Message::Swap(Type198Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type198Message::InternalSwap(Type198Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type198Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type198Message_descriptor_;
  metadata.reflection = Type198Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type198Message

// optional string data = 1;
bool Type198Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type198Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type198Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type198Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type198Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type198Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type198Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type198Message.data)
}
 void Type198Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type198Message.data)
}
 void Type198Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type198Message.data)
}
 ::std::string* Type198Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type198Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type198Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type198Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type198Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type198Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type199Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type199Message::Type199Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type199Message)
}

void Type199Message::InitAsDefaultInstance() {
}

Type199Message::Type199Message(const Type199Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type199Message)
}

void Type199Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type199Message::~Type199Message() {
  // @@protoc_insertion_point(destructor:tests.Type199Message)
  SharedDtor();
}

void Type199Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type199Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type199Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type199Message_descriptor_;
}

const Type199Message& Type199Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type199Message* Type199Message::default_instance_ = NULL;

Type199Message* Type199Message::New(::google::protobuf::Arena* arena) const {
  Type199Message* n = new Type199Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type199Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type199Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type199Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type199Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type199Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type199Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type199Message)
  return false;
#undef DO_
}

void Type199Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type199Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type199Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type199Message)
}

::google::protobuf::uint8* Type199Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type199Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type199Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type199Message)
  return target;
}

int Type199Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type199Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type199Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type199Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type199Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type199Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type199Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type199Message)
    MergeFrom(*source);
  }
}

void Type199Message::MergeFrom(const Type199Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type199Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type199Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type199Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type199Message::CopyFrom(const Type199Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type199Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type199Message::IsInitialized() const {

  return true;
}

void Type199Message::Swap(Type199Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type199Message::InternalSwap(Type199Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type199Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type199Message_descriptor_;
  metadata.reflection = Type199Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type199Message

// optional string data = 1;
bool Type199Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type199Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type199Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type199Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type199Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type199Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type199Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type199Message.data)
}
 void Type199Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type199Message.data)
}
 void Type199Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type199Message.data)
}
 ::std::string* Type199Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type199Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type199Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type199Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type199Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type199Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type200Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type200Message::Type200Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type200Message)
}

void Type200Message::InitAsDefaultInstance() {
}

Type200Message::Type200Message(const Type200Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type200Message)
}

void Type200Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type200Message::~Type200Message() {
  // @@protoc_insertion_point(destructor:tests.Type200Message)
  SharedDtor();
}

void Type200Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type200Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type200Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type200Message_descriptor_;
}

const Type200Message& Type200Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type200Message* Type200Message::default_instance_ = NULL;

Type200Message* Type200Message::New(::google::protobuf::Arena* arena) const {
  Type200Message* n = new Type200Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type200Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type200Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type200Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type200Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type200Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type200Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type200Message)
  return false;
#undef DO_
}

void Type200Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type200Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type200Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type200Message)
}

::google::protobuf::uint8* Type200Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type200Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type200Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type200Message)
  return target;
}

int Type200Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type200Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type200Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type200Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type200Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type200Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type200Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type200Message)
    MergeFrom(*source);
  }
}

void Type200Message::MergeFrom(const Type200Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type200Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type200Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type200Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type200Message::CopyFrom(const Type200Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type200Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type200Message::IsInitialized() const {

  return true;
}

void Type200Message::Swap(Type200Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type200Message::InternalSwap(Type200Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type200Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type200Message_descriptor_;
  metadata.reflection = Type200Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type200Message

// optional string data = 1;
bool Type200Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type200Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type200Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type200Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type200Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type200Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type200Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type200Message.data)
}
 void Type200Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type200Message.data)
}
 void Type200Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type200Message.data)
}
 ::std::string* Type200Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type200Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type200Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type200Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type200Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type200Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type201Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type201Message::Type201Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type201Message)
}

void Type201Message::InitAsDefaultInstance() {
}

Type201Message::Type201Message(const Type201Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type201Message)
}

void Type201Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type201Message::~Type201Message() {
  // @@protoc_insertion_point(destructor:tests.Type201Message)
  SharedDtor();
}

void Type201Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type201Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type201Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type201Message_descriptor_;
}

const Type201Message& Type201Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type201Message* Type201Message::default_instance_ = NULL;

Type201Message* Type201Message::New(::google::protobuf::Arena* arena) const {
  Type201Message* n = new Type201Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type201Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type201Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type201Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type201Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type201Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type201Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type201Message)
  return false;
#undef DO_
}

void Type201Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type201Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type201Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type201Message)
}

::google::protobuf::uint8* Type201Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type201Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type201Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type201Message)
  return target;
}

int Type201Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type201Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type201Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type201Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type201Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type201Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type201Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type201Message)
    MergeFrom(*source);
  }
}

void Type201Message::MergeFrom(const Type201Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type201Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type201Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type201Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type201Message::CopyFrom(const Type201Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type201Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type201Message::IsInitialized() const {

  return true;
}

void Type201Message::Swap(Type201Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type201Message::InternalSwap(Type201Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type201Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type201Message_descriptor_;
  metadata.reflection = Type201Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type201Message

// optional string data = 1;
bool Type201Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type201Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type201Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type201Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type201Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type201Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type201Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type201Message.data)
}
 void Type201Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type201Message.data)
}
 void Type201Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type201Message.data)
}
 ::std::string* Type201Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type201Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type201Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type201Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type201Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type201Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type202Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type202Message::Type202Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type202Message)
}

void Type202Message::InitAsDefaultInstance() {
}

Type202Message::Type202Message(const Type202Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type202Message)
}

void Type202Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type202Message::~Type202Message() {
  // @@protoc_insertion_point(destructor:tests.Type202Message)
  SharedDtor();
}

void Type202Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type202Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type202Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type202Message_descriptor_;
}

const Type202Message& Type202Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type202Message* Type202Message::default_instance_ = NULL;

Type202Message* Type202Message::New(::google::protobuf::Arena* arena) const {
  Type202Message* n = new Type202Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type202Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type202Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type202Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type202Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type202Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type202Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type202Message)
  return false;
#undef DO_
}

void Type202Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type202Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type202Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type202Message)
}

::google::protobuf::uint8* Type202Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type202Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type202Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type202Message)
  return target;
}

int Type202Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type202Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type202Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type202Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type202Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type202Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type202Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type202Message)
    MergeFrom(*source);
  }
}

void Type202Message::MergeFrom(const Type202Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type202Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type202Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type202Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type202Message::CopyFrom(const Type202Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type202Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type202Message::IsInitialized() const {

  return true;
}

void Type202Message::Swap(Type202Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type202Message::InternalSwap(Type202Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type202Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type202Message_descriptor_;
  metadata.reflection = Type202Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type202Message

// optional string data = 1;
bool Type202Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type202Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type202Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type202Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type202Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type202Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type202Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type202Message.data)
}
 void Type202Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type202Message.data)
}
 void Type202Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type202Message.data)
}
 ::std::string* Type202Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type202Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type202Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type202Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type202Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type202Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type203Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type203Message::Type203Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type203Message)
}

void Type203Message::InitAsDefaultInstance() {
}

Type203Message::Type203Message(const Type203Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type203Message)
}

void Type203Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type203Message::~Type203Message() {
  // @@protoc_insertion_point(destructor:tests.Type203Message)
  SharedDtor();
}

void Type203Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type203Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type203Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type203Message_descriptor_;
}

const Type203Message& Type203Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type203Message* Type203Message::default_instance_ = NULL;

Type203Message* Type203Message::New(::google::protobuf::Arena* arena) const {
  Type203Message* n = new Type203Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type203Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type203Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type203Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type203Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type203Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type203Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type203Message)
  return false;
#undef DO_
}

void Type203Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type203Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type203Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type203Message)
}

::google::protobuf::uint8* Type203Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type203Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type203Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type203Message)
  return target;
}

int Type203Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type203Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type203Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type203Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type203Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type203Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type203Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type203Message)
    MergeFrom(*source);
  }
}

void Type203Message::MergeFrom(const Type203Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type203Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type203Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type203Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type203Message::CopyFrom(const Type203Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type203Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type203Message::IsInitialized() const {

  return true;
}

void Type203Message::Swap(Type203Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type203Message::InternalSwap(Type203Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type203Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type203Message_descriptor_;
  metadata.reflection = Type203Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type203Message

// optional string data = 1;
bool Type203Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type203Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type203Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type203Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type203Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type203Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type203Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type203Message.data)
}
 void Type203Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type203Message.data)
}
 void Type203Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type203Message.data)
}
 ::std::string* Type203Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type203Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type203Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type203Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type203Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type203Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type204Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type204Message::Type204Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type204Message)
}

void Type204Message::InitAsDefaultInstance() {
}

Type204Message::Type204Message(const Type204Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type204Message)
}

void Type204Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type204Message::~Type204Message() {
  // @@protoc_insertion_point(destructor:tests.Type204Message)
  SharedDtor();
}

void Type204Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type204Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type204Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type204Message_descriptor_;
}

const Type204Message& Type204Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type204Message* Type204Message::default_instance_ = NULL;

Type204Message* Type204Message::New(::google::protobuf::Arena* arena) const {
  Type204Message* n = new Type204Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type204Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type204Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type204Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type204Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type204Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type204Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type204Message)
  return false;
#undef DO_
}

void Type204Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type204Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type204Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type204Message)
}

::google::protobuf::uint8* Type204Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type204Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type204Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type204Message)
  return target;
}

int Type204Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type204Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type204Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type204Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type204Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type204Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type204Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type204Message)
    MergeFrom(*source);
  }
}

void Type204Message::MergeFrom(const Type204Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type204Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type204Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type204Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type204Message::CopyFrom(const Type204Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type204Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type204Message::IsInitialized() const {

  return true;
}

void Type204Message::Swap(Type204Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type204Message::InternalSwap(Type204Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type204Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type204Message_descriptor_;
  metadata.reflection = Type204Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type204Message

// optional string data = 1;
bool Type204Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type204Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type204Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type204Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type204Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type204Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type204Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type204Message.data)
}
 void Type204Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type204Message.data)
}
 void Type204Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type204Message.data)
}
 ::std::string* Type204Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type204Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type204Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type204Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type204Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type204Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type205Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type205Message::Type205Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type205Message)
}

void Type205Message::InitAsDefaultInstance() {
}

Type205Message::Type205Message(const Type205Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type205Message)
}

void Type205Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type205Message::~Type205Message() {
  // @@protoc_insertion_point(destructor:tests.Type205Message)
  SharedDtor();
}

void Type205Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type205Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type205Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type205Message_descriptor_;
}

const Type205Message& Type205Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type205Message* Type205Message::default_instance_ = NULL;

Type205Message* Type205Message::New(::google::protobuf::Arena* arena) const {
  Type205Message* n = new Type205Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type205Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type205Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type205Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type205Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type205Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type205Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type205Message)
  return false;
#undef DO_
}

void Type205Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type205Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type205Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type205Message)
}

::google::protobuf::uint8* Type205Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type205Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type205Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type205Message)
  return target;
}

int Type205Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type205Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type205Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type205Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type205Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type205Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type205Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type205Message)
    MergeFrom(*source);
  }
}

void Type205Message::MergeFrom(const Type205Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type205Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type205Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type205Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type205Message::CopyFrom(const Type205Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type205Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type205Message::IsInitialized() const {

  return true;
}

void Type205Message::Swap(Type205Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type205Message::InternalSwap(Type205Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type205Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type205Message_descriptor_;
  metadata.reflection = Type205Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type205Message

// optional string data = 1;
bool Type205Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type205Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type205Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type205Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type205Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type205Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type205Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type205Message.data)
}
 void Type205Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type205Message.data)
}
 void Type205Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type205Message.data)
}
 ::std::string* Type205Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type205Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type205Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type205Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type205Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type205Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type206Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type206Message::Type206Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type206Message)
}

void Type206Message::InitAsDefaultInstance() {
}

Type206Message::Type206Message(const Type206Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type206Message)
}

void Type206Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type206Message::~Type206Message() {
  // @@protoc_insertion_point(destructor:tests.Type206Message)
  SharedDtor();
}

void Type206Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type206Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type206Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type206Message_descriptor_;
}

const Type206Message& Type206Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type206Message* Type206Message::default_instance_ = NULL;

Type206Message* Type206Message::New(::google::protobuf::Arena* arena) const {
  Type206Message* n = new Type206Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type206Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type206Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type206Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type206Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type206Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type206Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type206Message)
  return false;
#undef DO_
}

void Type206Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type206Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type206Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type206Message)
}

::google::protobuf::uint8* Type206Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type206Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type206Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type206Message)
  return target;
}

int Type206Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type206Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type206Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type206Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type206Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type206Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type206Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type206Message)
    MergeFrom(*source);
  }
}

void Type206Message::MergeFrom(const Type206Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type206Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type206Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type206Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type206Message::CopyFrom(const Type206Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type206Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type206Message::IsInitialized() const {

  return true;
}

void Type206Message::Swap(Type206Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type206Message::InternalSwap(Type206Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type206Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type206Message_descriptor_;
  metadata.reflection = Type206Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type206Message

// optional string data = 1;
bool Type206Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type206Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type206Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type206Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type206Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type206Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type206Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type206Message.data)
}
 void Type206Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type206Message.data)
}
 void Type206Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type206Message.data)
}
 ::std::string* Type206Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type206Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type206Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type206Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type206Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type206Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type207Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type207Message::Type207Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type207Message)
}

void Type207Message::InitAsDefaultInstance() {
}

Type207Message::Type207Message(const Type207Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type207Message)
}

void Type207Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type207Message::~Type207Message() {
  // @@protoc_insertion_point(destructor:tests.Type207Message)
  SharedDtor();
}

void Type207Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type207Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type207Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type207Message_descriptor_;
}

const Type207Message& Type207Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type207Message* Type207Message::default_instance_ = NULL;

Type207Message* Type207Message::New(::google::protobuf::Arena* arena) const {
  Type207Message* n = new Type207Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type207Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type207Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type207Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type207Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type207Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type207Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type207Message)
  return false;
#undef DO_
}

void Type207Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type207Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type207Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type207Message)
}

::google::protobuf::uint8* Type207Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type207Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type207Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type207Message)
  return target;
}

int Type207Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type207Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type207Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type207Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type207Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type207Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type207Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type207Message)
    MergeFrom(*source);
  }
}

void Type207Message::MergeFrom(const Type207Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type207Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type207Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type207Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type207Message::CopyFrom(const Type207Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type207Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type207Message::IsInitialized() const {

  return true;
}

void Type207Message::Swap(Type207Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type207Message::InternalSwap(Type207Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type207Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type207Message_descriptor_;
  metadata.reflection = Type207Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type207Message

// optional string data = 1;
bool Type207Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type207Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type207Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type207Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type207Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type207Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type207Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type207Message.data)
}
 void Type207Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type207Message.data)
}
 void Type207Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type207Message.data)
}
 ::std::string* Type207Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type207Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type207Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type207Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type207Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type207Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type208Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type208Message::Type208Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type208Message)
}

void Type208Message::InitAsDefaultInstance() {
}

Type208Message::Type208Message(const Type208Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type208Message)
}

void Type208Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type208Message::~Type208Message() {
  // @@protoc_insertion_point(destructor:tests.Type208Message)
  SharedDtor();
}

void Type208Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type208Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type208Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type208Message_descriptor_;
}

const Type208Message& Type208Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type208Message* Type208Message::default_instance_ = NULL;

Type208Message* Type208Message::New(::google::protobuf::Arena* arena) const {
  Type208Message* n = new Type208Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type208Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type208Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type208Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type208Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type208Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type208Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type208Message)
  return false;
#undef DO_
}

void Type208Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type208Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type208Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type208Message)
}

::google::protobuf::uint8* Type208Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type208Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type208Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type208Message)
  return target;
}

int Type208Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type208Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type208Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type208Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type208Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type208Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type208Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type208Message)
    MergeFrom(*source);
  }
}

void Type208Message::MergeFrom(const Type208Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type208Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type208Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type208Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type208Message::CopyFrom(const Type208Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type208Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type208Message::IsInitialized() const {

  return true;
}

void Type208Message::Swap(Type208Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type208Message::InternalSwap(Type208Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type208Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type208Message_descriptor_;
  metadata.reflection = Type208Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type208Message

// optional string data = 1;
bool Type208Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type208Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type208Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type208Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type208Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type208Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type208Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type208Message.data)
}
 void Type208Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type208Message.data)
}
 void Type208Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type208Message.data)
}
 ::std::string* Type208Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type208Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type208Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type208Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type208Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type208Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type209Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type209Message::Type209Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type209Message)
}

void Type209Message::InitAsDefaultInstance() {
}

Type209Message::Type209Message(const Type209Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type209Message)
}

void Type209Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type209Message::~Type209Message() {
  // @@protoc_insertion_point(destructor:tests.Type209Message)
  SharedDtor();
}

void Type209Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type209Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type209Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type209Message_descriptor_;
}

const Type209Message& Type209Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type209Message* Type209Message::default_instance_ = NULL;

Type209Message* Type209Message::New(::google::protobuf::Arena* arena) const {
  Type209Message* n = new Type209Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type209Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type209Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type209Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type209Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type209Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type209Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type209Message)
  return false;
#undef DO_
}

void Type209Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type209Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type209Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type209Message)
}

::google::protobuf::uint8* Type209Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type209Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type209Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type209Message)
  return target;
}

int Type209Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type209Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type209Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type209Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type209Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type209Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type209Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type209Message)
    MergeFrom(*source);
  }
}

void Type209Message::MergeFrom(const Type209Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type209Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type209Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type209Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type209Message::CopyFrom(const Type209Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type209Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type209Message::IsInitialized() const {

  return true;
}

void Type209Message::Swap(Type209Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type209Message::InternalSwap(Type209Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type209Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type209Message_descriptor_;
  metadata.reflection = Type209Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type209Message

// optional string data = 1;
bool Type209Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type209Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type209Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type209Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type209Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type209Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type209Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type209Message.data)
}
 void Type209Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type209Message.data)
}
 void Type209Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type209Message.data)
}
 ::std::string* Type209Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type209Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type209Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type209Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type209Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type209Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type210Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type210Message::Type210Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type210Message)
}

void Type210Message::InitAsDefaultInstance() {
}

Type210Message::Type210Message(const Type210Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type210Message)
}

void Type210Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type210Message::~Type210Message() {
  // @@protoc_insertion_point(destructor:tests.Type210Message)
  SharedDtor();
}

void Type210Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type210Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type210Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type210Message_descriptor_;
}

const Type210Message& Type210Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type210Message* Type210Message::default_instance_ = NULL;

Type210Message* Type210Message::New(::google::protobuf::Arena* arena) const {
  Type210Message* n = new Type210Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type210Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type210Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type210Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type210Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type210Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type210Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type210Message)
  return false;
#undef DO_
}

void Type210Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type210Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type210Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type210Message)
}

::google::protobuf::uint8* Type210Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type210Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type210Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type210Message)
  return target;
}

int Type210Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type210Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type210Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type210Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type210Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type210Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type210Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type210Message)
    MergeFrom(*source);
  }
}

void Type210Message::MergeFrom(const Type210Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type210Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type210Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type210Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type210Message::CopyFrom(const Type210Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type210Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type210Message::IsInitialized() const {

  return true;
}

void Type210Message::Swap(Type210Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type210Message::InternalSwap(Type210Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type210Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type210Message_descriptor_;
  metadata.reflection = Type210Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type210Message

// optional string data = 1;
bool Type210Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type210Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type210Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type210Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type210Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type210Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type210Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type210Message.data)
}
 void Type210Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type210Message.data)
}
 void Type210Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type210Message.data)
}
 ::std::string* Type210Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type210Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type210Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type210Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type210Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type210Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type211Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type211Message::Type211Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type211Message)
}

void Type211Message::InitAsDefaultInstance() {
}

Type211Message::Type211Message(const Type211Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type211Message)
}

void Type211Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type211Message::~Type211Message() {
  // @@protoc_insertion_point(destructor:tests.Type211Message)
  SharedDtor();
}

void Type211Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type211Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type211Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type211Message_descriptor_;
}

const Type211Message& Type211Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type211Message* Type211Message::default_instance_ = NULL;

Type211Message* Type211Message::New(::google::protobuf::Arena* arena) const {
  Type211Message* n = new Type211Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type211Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type211Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type211Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type211Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type211Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type211Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type211Message)
  return false;
#undef DO_
}

void Type211Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type211Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type211Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type211Message)
}

::google::protobuf::uint8* Type211Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type211Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type211Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type211Message)
  return target;
}

int Type211Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type211Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type211Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type211Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type211Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type211Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type211Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type211Message)
    MergeFrom(*source);
  }
}

void Type211Message::MergeFrom(const Type211Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type211Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type211Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type211Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type211Message::CopyFrom(const Type211Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type211Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type211Message::IsInitialized() const {

  return true;
}

void Type211Message::Swap(Type211Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type211Message::InternalSwap(Type211Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type211Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type211Message_descriptor_;
  metadata.reflection = Type211Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type211Message

// optional string data = 1;
bool Type211Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type211Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type211Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type211Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type211Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type211Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type211Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type211Message.data)
}
 void Type211Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type211Message.data)
}
 void Type211Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type211Message.data)
}
 ::std::string* Type211Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type211Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type211Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type211Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type211Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type211Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type212Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type212Message::Type212Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type212Message)
}

void Type212Message::InitAsDefaultInstance() {
}

Type212Message::Type212Message(const Type212Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type212Message)
}

void Type212Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type212Message::~Type212Message() {
  // @@protoc_insertion_point(destructor:tests.Type212Message)
  SharedDtor();
}

void Type212Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type212Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type212Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type212Message_descriptor_;
}

const Type212Message& Type212Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type212Message* Type212Message::default_instance_ = NULL;

Type212Message* Type212Message::New(::google::protobuf::Arena* arena) const {
  Type212Message* n = new Type212Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type212Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type212Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type212Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type212Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type212Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type212Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type212Message)
  return false;
#undef DO_
}

void Type212Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type212Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type212Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type212Message)
}

::google::protobuf::uint8* Type212Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type212Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type212Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type212Message)
  return target;
}

int Type212Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type212Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type212Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type212Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type212Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type212Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type212Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type212Message)
    MergeFrom(*source);
  }
}

void Type212Message::MergeFrom(const Type212Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type212Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type212Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type212Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type212Message::CopyFrom(const Type212Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type212Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type212Message::IsInitialized() const {

  return true;
}

void Type212Message::Swap(Type212Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type212Message::InternalSwap(Type212Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type212Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type212Message_descriptor_;
  metadata.reflection = Type212Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type212Message

// optional string data = 1;
bool Type212Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type212Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type212Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type212Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type212Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type212Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type212Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type212Message.data)
}
 void Type212Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type212Message.data)
}
 void Type212Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type212Message.data)
}
 ::std::string* Type212Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type212Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type212Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type212Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type212Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type212Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type213Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type213Message::Type213Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type213Message)
}

void Type213Message::InitAsDefaultInstance() {
}

Type213Message::Type213Message(const Type213Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type213Message)
}

void Type213Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type213Message::~Type213Message() {
  // @@protoc_insertion_point(destructor:tests.Type213Message)
  SharedDtor();
}

void Type213Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type213Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type213Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type213Message_descriptor_;
}

const Type213Message& Type213Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type213Message* Type213Message::default_instance_ = NULL;

Type213Message* Type213Message::New(::google::protobuf::Arena* arena) const {
  Type213Message* n = new Type213Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type213Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type213Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type213Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type213Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type213Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type213Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type213Message)
  return false;
#undef DO_
}

void Type213Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type213Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type213Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type213Message)
}

::google::protobuf::uint8* Type213Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type213Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type213Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type213Message)
  return target;
}

int Type213Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type213Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type213Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type213Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type213Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type213Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type213Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type213Message)
    MergeFrom(*source);
  }
}

void Type213Message::MergeFrom(const Type213Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type213Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type213Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type213Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type213Message::CopyFrom(const Type213Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type213Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type213Message::IsInitialized() const {

  return true;
}

void Type213Message::Swap(Type213Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type213Message::InternalSwap(Type213Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type213Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type213Message_descriptor_;
  metadata.reflection = Type213Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type213Message

// optional string data = 1;
bool Type213Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type213Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type213Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type213Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type213Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type213Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type213Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type213Message.data)
}
 void Type213Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type213Message.data)
}
 void Type213Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type213Message.data)
}
 ::std::string* Type213Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type213Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type213Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type213Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type213Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type213Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type214Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type214Message::Type214Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type214Message)
}

void Type214Message::InitAsDefaultInstance() {
}

Type214Message::Type214Message(const Type214Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type214Message)
}

void Type214Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type214Message::~Type214Message() {
  // @@protoc_insertion_point(destructor:tests.Type214Message)
  SharedDtor();
}

void Type214Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type214Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type214Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type214Message_descriptor_;
}

const Type214Message& Type214Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type214Message* Type214Message::default_instance_ = NULL;

Type214Message* Type214Message::New(::google::protobuf::Arena* arena) const {
  Type214Message* n = new Type214Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type214Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type214Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type214Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type214Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type214Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type214Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type214Message)
  return false;
#undef DO_
}

void Type214Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type214Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type214Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type214Message)
}

::google::protobuf::uint8* Type214Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type214Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type214Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type214Message)
  return target;
}

int Type214Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type214Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type214Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type214Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type214Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type214Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type214Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type214Message)
    MergeFrom(*source);
  }
}

void Type214Message::MergeFrom(const Type214Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type214Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type214Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type214Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type214Message::CopyFrom(const Type214Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type214Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type214Message::IsInitialized() const {

  return true;
}

void Type214Message::Swap(Type214Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type214Message::InternalSwap(Type214Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type214Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type214Message_descriptor_;
  metadata.reflection = Type214Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type214Message

// optional string data = 1;
bool Type214Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type214Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type214Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type214Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type214Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type214Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type214Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type214Message.data)
}
 void Type214Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type214Message.data)
}
 void Type214Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type214Message.data)
}
 ::std::string* Type214Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type214Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type214Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type214Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type214Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type214Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type215Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type215Message::Type215Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type215Message)
}

void Type215Message::InitAsDefaultInstance() {
}

Type215Message::Type215Message(const Type215Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type215Message)
}

void Type215Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type215Message::~Type215Message() {
  // @@protoc_insertion_point(destructor:tests.Type215Message)
  SharedDtor();
}

void Type215Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type215Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type215Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type215Message_descriptor_;
}

const Type215Message& Type215Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type215Message* Type215Message::default_instance_ = NULL;

Type215Message* Type215Message::New(::google::protobuf::Arena* arena) const {
  Type215Message* n = new Type215Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type215Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type215Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type215Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type215Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type215Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type215Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type215Message)
  return false;
#undef DO_
}

void Type215Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type215Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type215Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type215Message)
}

::google::protobuf::uint8* Type215Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type215Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type215Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type215Message)
  return target;
}

int Type215Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type215Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type215Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type215Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type215Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type215Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type215Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type215Message)
    MergeFrom(*source);
  }
}

void Type215Message::MergeFrom(const Type215Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type215Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type215Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type215Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type215Message::CopyFrom(const Type215Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type215Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type215Message::IsInitialized() const {

  return true;
}

void Type215Message::Swap(Type215Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type215Message::InternalSwap(Type215Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type215Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type215Message_descriptor_;
  metadata.reflection = Type215Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type215Message

// optional string data = 1;
bool Type215Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type215Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type215Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type215Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type215Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type215Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type215Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type215Message.data)
}
 void Type215Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type215Message.data)
}
 void Type215Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type215Message.data)
}
 ::std::string* Type215Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type215Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type215Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type215Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type215Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type215Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type216Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type216Message::Type216Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type216Message)
}

void Type216Message::InitAsDefaultInstance() {
}

Type216Message::Type216Message(const Type216Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type216Message)
}

void Type216Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type216Message::~Type216Message() {
  // @@protoc_insertion_point(destructor:tests.Type216Message)
  SharedDtor();
}

void Type216Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type216Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type216Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type216Message_descriptor_;
}

const Type216Message& Type216Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type216Message* Type216Message::default_instance_ = NULL;

Type216Message* Type216Message::New(::google::protobuf::Arena* arena) const {
  Type216Message* n = new Type216Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type216Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type216Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type216Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type216Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type216Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type216Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type216Message)
  return false;
#undef DO_
}

void Type216Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type216Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type216Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type216Message)
}

::google::protobuf::uint8* Type216Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type216Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type216Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type216Message)
  return target;
}

int Type216Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type216Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type216Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type216Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type216Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type216Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type216Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type216Message)
    MergeFrom(*source);
  }
}

void Type216Message::MergeFrom(const Type216Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type216Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type216Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type216Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type216Message::CopyFrom(const Type216Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type216Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type216Message::IsInitialized() const {

  return true;
}

void Type216Message::Swap(Type216Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type216Message::InternalSwap(Type216Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type216Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type216Message_descriptor_;
  metadata.reflection = Type216Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type216Message

// optional string data = 1;
bool Type216Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type216Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type216Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type216Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type216Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type216Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type216Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type216Message.data)
}
 void Type216Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type216Message.data)
}
 void Type216Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type216Message.data)
}
 ::std::string* Type216Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type216Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type216Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type216Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type216Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type216Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type217Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type217Message::Type217Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type217Message)
}

void Type217Message::InitAsDefaultInstance() {
}

Type217Message::Type217Message(const Type217Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type217Message)
}

void Type217Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type217Message::~Type217Message() {
  // @@protoc_insertion_point(destructor:tests.Type217Message)
  SharedDtor();
}

void Type217Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type217Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type217Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type217Message_descriptor_;
}

const Type217Message& Type217Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type217Message* Type217Message::default_instance_ = NULL;

Type217Message* Type217Message::New(::google::protobuf::Arena* arena) const {
  Type217Message* n = new Type217Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type217Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type217Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type217Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type217Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type217Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type217Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type217Message)
  return false;
#undef DO_
}

void Type217Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type217Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type217Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type217Message)
}

::google::protobuf::uint8* Type217Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type217Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type217Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type217Message)
  return target;
}

int Type217Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type217Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type217Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type217Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type217Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type217Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type217Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type217Message)
    MergeFrom(*source);
  }
}

void Type217Message::MergeFrom(const Type217Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type217Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type217Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type217Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type217Message::CopyFrom(const Type217Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type217Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type217Message::IsInitialized() const {

  return true;
}

void Type217Message::Swap(Type217Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type217Message::InternalSwap(Type217Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type217Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type217Message_descriptor_;
  metadata.reflection = Type217Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type217Message

// optional string data = 1;
bool Type217Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type217Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type217Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type217Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type217Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type217Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type217Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type217Message.data)
}
 void Type217Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type217Message.data)
}
 void Type217Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type217Message.data)
}
 ::std::string* Type217Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type217Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type217Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type217Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type217Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type217Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type218Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type218Message::Type218Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type218Message)
}

void Type218Message::InitAsDefaultInstance() {
}

Type218Message::Type218Message(const Type218Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type218Message)
}

void Type218Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type218Message::~Type218Message() {
  // @@protoc_insertion_point(destructor:tests.Type218Message)
  SharedDtor();
}

void Type218Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type218Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type218Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type218Message_descriptor_;
}

const Type218Message& Type218Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type218Message* Type218Message::default_instance_ = NULL;

Type218Message* Type218Message::New(::google::protobuf::Arena* arena) const {
  Type218Message* n = new Type218Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type218Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type218Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type218Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type218Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type218Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type218Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type218Message)
  return false;
#undef DO_
}

void Type218Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type218Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type218Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type218Message)
}

::google::protobuf::uint8* Type218Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type218Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type218Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type218Message)
  return target;
}

int Type218Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type218Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type218Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type218Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type218Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type218Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type218Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type218Message)
    MergeFrom(*source);
  }
}

void Type218Message::MergeFrom(const Type218Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type218Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type218Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type218Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type218Message::CopyFrom(const Type218Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type218Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type218Message::IsInitialized() const {

  return true;
}

void Type218Message::Swap(Type218Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type218Message::InternalSwap(Type218Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type218Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type218Message_descriptor_;
  metadata.reflection = Type218Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type218Message

// optional string data = 1;
bool Type218Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type218Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type218Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type218Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type218Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type218Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type218Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type218Message.data)
}
 void Type218Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type218Message.data)
}
 void Type218Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type218Message.data)
}
 ::std::string* Type218Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type218Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type218Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type218Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type218Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type218Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type219Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type219Message::Type219Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type219Message)
}

void Type219Message::InitAsDefaultInstance() {
}

Type219Message::Type219Message(const Type219Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type219Message)
}

void Type219Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type219Message::~Type219Message() {
  // @@protoc_insertion_point(destructor:tests.Type219Message)
  SharedDtor();
}

void Type219Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type219Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type219Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type219Message_descriptor_;
}

const Type219Message& Type219Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type219Message* Type219Message::default_instance_ = NULL;

Type219Message* Type219Message::New(::google::protobuf::Arena* arena) const {
  Type219Message* n = new Type219Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type219Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type219Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type219Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type219Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type219Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type219Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type219Message)
  return false;
#undef DO_
}

void Type219Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type219Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type219Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type219Message)
}

::google::protobuf::uint8* Type219Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type219Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type219Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type219Message)
  return target;
}

int Type219Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type219Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type219Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type219Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type219Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type219Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type219Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type219Message)
    MergeFrom(*source);
  }
}

void Type219Message::MergeFrom(const Type219Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type219Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type219Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type219Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type219Message::CopyFrom(const Type219Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type219Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type219Message::IsInitialized() const {

  return true;
}

void Type219Message::Swap(Type219Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type219Message::InternalSwap(Type219Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type219Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type219Message_descriptor_;
  metadata.reflection = Type219Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type219Message

// optional string data = 1;
bool Type219Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type219Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type219Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type219Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type219Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type219Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type219Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type219Message.data)
}
 void Type219Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type219Message.data)
}
 void Type219Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type219Message.data)
}
 ::std::string* Type219Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type219Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type219Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type219Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type219Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type219Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type220Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type220Message::Type220Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type220Message)
}

void Type220Message::InitAsDefaultInstance() {
}

Type220Message::Type220Message(const Type220Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type220Message)
}

void Type220Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type220Message::~Type220Message() {
  // @@protoc_insertion_point(destructor:tests.Type220Message)
  SharedDtor();
}

void Type220Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type220Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type220Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type220Message_descriptor_;
}

const Type220Message& Type220Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type220Message* Type220Message::default_instance_ = NULL;

Type220Message* Type220Message::New(::google::protobuf::Arena* arena) const {
  Type220Message* n = new Type220Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type220Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type220Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type220Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type220Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type220Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type220Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type220Message)
  return false;
#undef DO_
}

void Type220Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type220Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type220Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type220Message)
}

::google::protobuf::uint8* Type220Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type220Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type220Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type220Message)
  return target;
}

int Type220Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type220Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type220Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type220Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type220Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type220Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type220Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type220Message)
    MergeFrom(*source);
  }
}

void Type220Message::MergeFrom(const Type220Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type220Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type220Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type220Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type220Message::CopyFrom(const Type220Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type220Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type220Message::IsInitialized() const {

  return true;
}

void Type220Message::Swap(Type220Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type220Message::InternalSwap(Type220Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type220Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type220Message_descriptor_;
  metadata.reflection = Type220Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type220Message

// optional string data = 1;
bool Type220Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type220Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type220Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type220Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type220Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type220Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type220Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type220Message.data)
}
 void Type220Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type220Message.data)
}
 void Type220Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type220Message.data)
}
 ::std::string* Type220Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type220Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type220Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type220Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type220Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type220Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type221Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type221Message::Type221Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type221Message)
}

void Type221Message::InitAsDefaultInstance() {
}

Type221Message::Type221Message(const Type221Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type221Message)
}

void Type221Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type221Message::~Type221Message() {
  // @@protoc_insertion_point(destructor:tests.Type221Message)
  SharedDtor();
}

void Type221Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type221Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type221Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type221Message_descriptor_;
}

const Type221Message& Type221Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type221Message* Type221Message::default_instance_ = NULL;

Type221Message* Type221Message::New(::google::protobuf::Arena* arena) const {
  Type221Message* n = new Type221Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type221Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type221Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type221Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type221Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type221Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type221Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type221Message)
  return false;
#undef DO_
}

void Type221Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type221Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type221Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type221Message)
}

::google::protobuf::uint8* Type221Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type221Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type221Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type221Message)
  return target;
}

int Type221Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type221Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type221Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type221Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type221Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type221Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type221Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type221Message)
    MergeFrom(*source);
  }
}

void Type221Message::MergeFrom(const Type221Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type221Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type221Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type221Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type221Message::CopyFrom(const Type221Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type221Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type221Message::IsInitialized() const {

  return true;
}

void Type221Message::Swap(Type221Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type221Message::InternalSwap(Type221Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type221Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type221Message_descriptor_;
  metadata.reflection = Type221Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type221Message

// optional string data = 1;
bool Type221Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type221Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type221Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type221Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type221Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type221Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type221Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type221Message.data)
}
 void Type221Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type221Message.data)
}
 void Type221Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type221Message.data)
}
 ::std::string* Type221Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type221Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type221Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type221Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type221Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type221Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type222Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type222Message::Type222Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type222Message)
}

void Type222Message::InitAsDefaultInstance() {
}

Type222Message::Type222Message(const Type222Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type222Message)
}

void Type222Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type222Message::~Type222Message() {
  // @@protoc_insertion_point(destructor:tests.Type222Message)
  SharedDtor();
}

void Type222Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type222Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type222Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type222Message_descriptor_;
}

const Type222Message& Type222Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type222Message* Type222Message::default_instance_ = NULL;

Type222Message* Type222Message::New(::google::protobuf::Arena* arena) const {
  Type222Message* n = new Type222Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type222Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type222Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type222Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type222Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type222Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type222Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type222Message)
  return false;
#undef DO_
}

void Type222Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type222Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type222Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type222Message)
}

::google::protobuf::uint8* Type222Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type222Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type222Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type222Message)
  return target;
}

int Type222Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type222Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type222Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type222Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type222Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type222Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type222Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type222Message)
    MergeFrom(*source);
  }
}

void Type222Message::MergeFrom(const Type222Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type222Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type222Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type222Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type222Message::CopyFrom(const Type222Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type222Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type222Message::IsInitialized() const {

  return true;
}

void Type222Message::Swap(Type222Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type222Message::InternalSwap(Type222Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type222Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type222Message_descriptor_;
  metadata.reflection = Type222Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type222Message

// optional string data = 1;
bool Type222Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type222Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type222Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type222Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type222Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type222Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type222Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type222Message.data)
}
 void Type222Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type222Message.data)
}
 void Type222Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type222Message.data)
}
 ::std::string* Type222Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type222Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type222Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type222Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type222Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type222Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type223Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type223Message::Type223Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type223Message)
}

void Type223Message::InitAsDefaultInstance() {
}

Type223Message::Type223Message(const Type223Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type223Message)
}

void Type223Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type223Message::~Type223Message() {
  // @@protoc_insertion_point(destructor:tests.Type223Message)
  SharedDtor();
}

void Type223Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type223Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type223Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type223Message_descriptor_;
}

const Type223Message& Type223Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type223Message* Type223Message::default_instance_ = NULL;

Type223Message* Type223Message::New(::google::protobuf::Arena* arena) const {
  Type223Message* n = new Type223Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type223Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type223Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type223Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type223Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type223Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type223Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type223Message)
  return false;
#undef DO_
}

void Type223Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type223Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type223Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type223Message)
}

::google::protobuf::uint8* Type223Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type223Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type223Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type223Message)
  return target;
}

int Type223Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type223Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type223Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type223Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type223Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type223Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type223Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type223Message)
    MergeFrom(*source);
  }
}

void Type223Message::MergeFrom(const Type223Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type223Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type223Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type223Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type223Message::CopyFrom(const Type223Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type223Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type223Message::IsInitialized() const {

  return true;
}

void Type223Message::Swap(Type223Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type223Message::InternalSwap(Type223Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type223Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type223Message_descriptor_;
  metadata.reflection = Type223Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type223Message

// optional string data = 1;
bool Type223Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type223Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type223Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type223Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type223Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type223Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type223Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type223Message.data)
}
 void Type223Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type223Message.data)
}
 void Type223Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type223Message.data)
}
 ::std::string* Type223Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type223Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type223Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type223Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type223Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type223Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type224Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type224Message::Type224Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type224Message)
}

void Type224Message::InitAsDefaultInstance() {
}

Type224Message::Type224Message(const Type224Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type224Message)
}

void Type224Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type224Message::~Type224Message() {
  // @@protoc_insertion_point(destructor:tests.Type224Message)
  SharedDtor();
}

void Type224Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type224Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type224Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type224Message_descriptor_;
}

const Type224Message& Type224Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type224Message* Type224Message::default_instance_ = NULL;

Type224Message* Type224Message::New(::google::protobuf::Arena* arena) const {
  Type224Message* n = new Type224Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type224Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type224Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type224Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type224Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type224Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type224Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type224Message)
  return false;
#undef DO_
}

void Type224Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type224Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type224Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type224Message)
}

::google::protobuf::uint8* Type224Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type224Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type224Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type224Message)
  return target;
}

int Type224Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type224Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type224Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type224Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type224Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type224Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type224Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type224Message)
    MergeFrom(*source);
  }
}

void Type224Message::MergeFrom(const Type224Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type224Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type224Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type224Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type224Message::CopyFrom(const Type224Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type224Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type224Message::IsInitialized() const {

  return true;
}

void Type224Message::Swap(Type224Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type224Message::InternalSwap(Type224Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type224Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type224Message_descriptor_;
  metadata.reflection = Type224Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type224Message

// optional string data = 1;
bool Type224Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type224Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type224Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type224Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type224Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type224Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type224Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type224Message.data)
}
 void Type224Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type224Message.data)
}
 void Type224Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type224Message.data)
}
 ::std::string* Type224Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type224Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type224Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type224Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type224Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type224Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type225Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type225Message::Type225Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type225Message)
}

void Type225Message::InitAsDefaultInstance() {
}

Type225Message::Type225Message(const Type225Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type225Message)
}

void Type225Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type225Message::~Type225Message() {
  // @@protoc_insertion_point(destructor:tests.Type225Message)
  SharedDtor();
}

void Type225Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type225Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type225Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type225Message_descriptor_;
}

const Type225Message& Type225Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type225Message* Type225Message::default_instance_ = NULL;

Type225Message* Type225Message::New(::google::protobuf::Arena* arena) const {
  Type225Message* n = new Type225Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type225Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type225Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type225Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type225Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type225Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type225Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type225Message)
  return false;
#undef DO_
}

void Type225Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type225Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type225Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type225Message)
}

::google::protobuf::uint8* Type225Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type225Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type225Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type225Message)
  return target;
}

int Type225Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type225Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type225Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type225Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type225Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type225Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type225Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type225Message)
    MergeFrom(*source);
  }
}

void Type225Message::MergeFrom(const Type225Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type225Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type225Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type225Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type225Message::CopyFrom(const Type225Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type225Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type225Message::IsInitialized() const {

  return true;
}

void Type225Message::Swap(Type225Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type225Message::InternalSwap(Type225Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type225Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type225Message_descriptor_;
  metadata.reflection = Type225Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type225Message

// optional string data = 1;
bool Type225Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type225Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type225Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type225Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type225Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type225Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type225Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type225Message.data)
}
 void Type225Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type225Message.data)
}
 void Type225Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type225Message.data)
}
 ::std::string* Type225Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type225Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type225Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type225Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type225Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type225Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type226Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type226Message::Type226Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type226Message)
}

void Type226Message::InitAsDefaultInstance() {
}

Type226Message::Type226Message(const Type226Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type226Message)
}

void Type226Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type226Message::~Type226Message() {
  // @@protoc_insertion_point(destructor:tests.Type226Message)
  SharedDtor();
}

void Type226Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type226Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type226Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type226Message_descriptor_;
}

const Type226Message& Type226Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type226Message* Type226Message::default_instance_ = NULL;

Type226Message* Type226Message::New(::google::protobuf::Arena* arena) const {
  Type226Message* n = new Type226Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type226Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type226Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type226Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type226Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type226Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type226Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type226Message)
  return false;
#undef DO_
}

void Type226Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type226Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type226Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type226Message)
}

::google::protobuf::uint8* Type226Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type226Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type226Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type226Message)
  return target;
}

int Type226Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type226Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type226Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type226Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type226Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type226Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type226Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type226Message)
    MergeFrom(*source);
  }
}

void Type226Message::MergeFrom(const Type226Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type226Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type226Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type226Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type226Message::CopyFrom(const Type226Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type226Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type226Message::IsInitialized() const {

  return true;
}

void Type226Message::Swap(Type226Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type226Message::InternalSwap(Type226Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type226Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type226Message_descriptor_;
  metadata.reflection = Type226Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type226Message

// optional string data = 1;
bool Type226Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type226Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type226Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type226Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type226Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type226Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type226Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type226Message.data)
}
 void Type226Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type226Message.data)
}
 void Type226Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type226Message.data)
}
 ::std::string* Type226Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type226Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type226Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type226Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type226Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type226Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type227Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type227Message::Type227Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type227Message)
}

void Type227Message::InitAsDefaultInstance() {
}

Type227Message::Type227Message(const Type227Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type227Message)
}

void Type227Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type227Message::~Type227Message() {
  // @@protoc_insertion_point(destructor:tests.Type227Message)
  SharedDtor();
}

void Type227Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type227Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type227Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type227Message_descriptor_;
}

const Type227Message& Type227Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type227Message* Type227Message::default_instance_ = NULL;

Type227Message* Type227Message::New(::google::protobuf::Arena* arena) const {
  Type227Message* n = new Type227Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type227Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type227Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type227Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type227Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type227Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type227Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type227Message)
  return false;
#undef DO_
}

void Type227Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type227Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type227Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type227Message)
}

::google::protobuf::uint8* Type227Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type227Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type227Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type227Message)
  return target;
}

int Type227Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type227Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type227Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type227Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type227Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type227Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type227Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type227Message)
    MergeFrom(*source);
  }
}

void Type227Message::MergeFrom(const Type227Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type227Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type227Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type227Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type227Message::CopyFrom(const Type227Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type227Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type227Message::IsInitialized() const {

  return true;
}

void Type227Message::Swap(Type227Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type227Message::InternalSwap(Type227Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type227Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type227Message_descriptor_;
  metadata.reflection = Type227Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type227Message

// optional string data = 1;
bool Type227Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type227Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type227Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type227Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type227Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type227Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type227Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type227Message.data)
}
 void Type227Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type227Message.data)
}
 void Type227Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type227Message.data)
}
 ::std::string* Type227Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type227Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type227Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type227Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type227Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type227Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type228Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type228Message::Type228Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type228Message)
}

void Type228Message::InitAsDefaultInstance() {
}

Type228Message::Type228Message(const Type228Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type228Message)
}

void Type228Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type228Message::~Type228Message() {
  // @@protoc_insertion_point(destructor:tests.Type228Message)
  SharedDtor();
}

void Type228Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type228Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type228Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type228Message_descriptor_;
}

const Type228Message& Type228Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type228Message* Type228Message::default_instance_ = NULL;

Type228Message* Type228Message::New(::google::protobuf::Arena* arena) const {
  Type228Message* n = new Type228Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type228Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type228Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type228Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type228Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type228Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type228Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type228Message)
  return false;
#undef DO_
}

void Type228Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type228Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type228Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type228Message)
}

::google::protobuf::uint8* Type228Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type228Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type228Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type228Message)
  return target;
}

int Type228Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type228Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type228Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type228Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type228Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type228Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type228Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type228Message)
    MergeFrom(*source);
  }
}

void Type228Message::MergeFrom(const Type228Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type228Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type228Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type228Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type228Message::CopyFrom(const Type228Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type228Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type228Message::IsInitialized() const {

  return true;
}

void Type228Message::Swap(Type228Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type228Message::InternalSwap(Type228Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type228Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type228Message_descriptor_;
  metadata.reflection = Type228Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type228Message

// optional string data = 1;
bool Type228Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type228Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type228Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type228Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type228Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type228Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type228Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type228Message.data)
}
 void Type228Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type228Message.data)
}
 void Type228Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type228Message.data)
}
 ::std::string* Type228Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type228Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type228Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type228Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type228Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type228Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type229Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type229Message::Type229Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type229Message)
}

void Type229Message::InitAsDefaultInstance() {
}

Type229Message::Type229Message(const Type229Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type229Message)
}

void Type229Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type229Message::~Type229Message() {
  // @@protoc_insertion_point(destructor:tests.Type229Message)
  SharedDtor();
}

void Type229Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type229Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type229Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type229Message_descriptor_;
}

const Type229Message& Type229Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type229Message* Type229Message::default_instance_ = NULL;

Type229Message* Type229Message::New(::google::protobuf::Arena* arena) const {
  Type229Message* n = new Type229Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type229Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type229Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type229Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type229Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type229Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type229Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type229Message)
  return false;
#undef DO_
}

void Type229Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type229Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type229Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type229Message)
}

::google::protobuf::uint8* Type229Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type229Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type229Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type229Message)
  return target;
}

int Type229Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type229Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type229Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type229Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type229Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type229Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type229Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type229Message)
    MergeFrom(*source);
  }
}

void Type229Message::MergeFrom(const Type229Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type229Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type229Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type229Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type229Message::CopyFrom(const Type229Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type229Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type229Message::IsInitialized() const {

  return true;
}

void Type229Message::Swap(Type229Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type229Message::InternalSwap(Type229Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type229Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type229Message_descriptor_;
  metadata.reflection = Type229Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type229Message

// optional string data = 1;
bool Type229Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type229Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type229Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type229Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type229Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type229Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type229Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type229Message.data)
}
 void Type229Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type229Message.data)
}
 void Type229Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type229Message.data)
}
 ::std::string* Type229Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type229Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type229Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type229Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type229Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type229Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type230Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type230Message::Type230Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type230Message)
}

void Type230Message::InitAsDefaultInstance() {
}

Type230Message::Type230Message(const Type230Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type230Message)
}

void Type230Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type230Message::~Type230Message() {
  // @@protoc_insertion_point(destructor:tests.Type230Message)
  SharedDtor();
}

void Type230Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type230Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type230Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type230Message_descriptor_;
}

const Type230Message& Type230Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type230Message* Type230Message::default_instance_ = NULL;

Type230Message* Type230Message::New(::google::protobuf::Arena* arena) const {
  Type230Message* n = new Type230Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type230Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type230Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type230Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type230Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type230Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type230Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type230Message)
  return false;
#undef DO_
}

void Type230Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type230Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type230Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type230Message)
}

::google::protobuf::uint8* Type230Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type230Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type230Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type230Message)
  return target;
}

int Type230Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type230Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type230Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type230Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type230Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type230Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type230Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type230Message)
    MergeFrom(*source);
  }
}

void Type230Message::MergeFrom(const Type230Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type230Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type230Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type230Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type230Message::CopyFrom(const Type230Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type230Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type230Message::IsInitialized() const {

  return true;
}

void Type230Message::Swap(Type230Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type230Message::InternalSwap(Type230Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type230Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type230Message_descriptor_;
  metadata.reflection = Type230Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type230Message

// optional string data = 1;
bool Type230Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type230Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type230Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type230Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type230Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type230Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type230Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type230Message.data)
}
 void Type230Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type230Message.data)
}
 void Type230Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type230Message.data)
}
 ::std::string* Type230Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type230Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type230Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type230Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type230Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type230Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type231Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type231Message::Type231Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type231Message)
}

void Type231Message::InitAsDefaultInstance() {
}

Type231Message::Type231Message(const Type231Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type231Message)
}

void Type231Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type231Message::~Type231Message() {
  // @@protoc_insertion_point(destructor:tests.Type231Message)
  SharedDtor();
}

void Type231Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type231Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type231Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type231Message_descriptor_;
}

const Type231Message& Type231Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type231Message* Type231Message::default_instance_ = NULL;

Type231Message* Type231Message::New(::google::protobuf::Arena* arena) const {
  Type231Message* n = new Type231Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type231Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type231Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type231Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type231Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type231Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type231Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type231Message)
  return false;
#undef DO_
}

void Type231Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type231Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type231Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type231Message)
}

::google::protobuf::uint8* Type231Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type231Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type231Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type231Message)
  return target;
}

int Type231Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type231Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type231Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type231Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type231Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type231Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type231Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type231Message)
    MergeFrom(*source);
  }
}

void Type231Message::MergeFrom(const Type231Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type231Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type231Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type231Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type231Message::CopyFrom(const Type231Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type231Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type231Message::IsInitialized() const {

  return true;
}

void Type231Message::Swap(Type231Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type231Message::InternalSwap(Type231Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type231Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type231Message_descriptor_;
  metadata.reflection = Type231Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type231Message

// optional string data = 1;
bool Type231Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type231Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type231Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type231Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type231Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type231Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type231Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type231Message.data)
}
 void Type231Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type231Message.data)
}
 void Type231Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type231Message.data)
}
 ::std::string* Type231Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type231Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type231Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type231Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type231Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type231Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type232Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type232Message::Type232Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type232Message)
}

void Type232Message::InitAsDefaultInstance() {
}

Type232Message::Type232Message(const Type232Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type232Message)
}

void Type232Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type232Message::~Type232Message() {
  // @@protoc_insertion_point(destructor:tests.Type232Message)
  SharedDtor();
}

void Type232Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type232Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type232Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type232Message_descriptor_;
}

const Type232Message& Type232Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type232Message* Type232Message::default_instance_ = NULL;

Type232Message* Type232Message::New(::google::protobuf::Arena* arena) const {
  Type232Message* n = new Type232Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type232Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type232Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type232Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type232Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type232Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type232Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type232Message)
  return false;
#undef DO_
}

void Type232Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type232Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type232Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type232Message)
}

::google::protobuf::uint8* Type232Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type232Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type232Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type232Message)
  return target;
}

int Type232Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type232Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type232Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type232Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type232Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type232Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type232Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type232Message)
    MergeFrom(*source);
  }
}

void Type232Message::MergeFrom(const Type232Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type232Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type232Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type232Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type232Message::CopyFrom(const Type232Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type232Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type232Message::IsInitialized() const {

  return true;
}

void Type232Message::Swap(Type232Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type232Message::InternalSwap(Type232Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type232Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type232Message_descriptor_;
  metadata.reflection = Type232Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type232Message

// optional string data = 1;
bool Type232Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type232Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type232Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type232Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type232Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type232Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type232Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type232Message.data)
}
 void Type232Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type232Message.data)
}
 void Type232Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type232Message.data)
}
 ::std::string* Type232Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type232Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type232Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type232Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type232Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type232Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type233Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type233Message::Type233Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type233Message)
}

void Type233Message::InitAsDefaultInstance() {
}

Type233Message::Type233Message(const Type233Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type233Message)
}

void Type233Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type233Message::~Type233Message() {
  // @@protoc_insertion_point(destructor:tests.Type233Message)
  SharedDtor();
}

void Type233Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type233Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type233Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type233Message_descriptor_;
}

const Type233Message& Type233Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type233Message* Type233Message::default_instance_ = NULL;

Type233Message* Type233Message::New(::google::protobuf::Arena* arena) const {
  Type233Message* n = new Type233Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type233Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type233Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type233Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type233Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type233Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type233Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type233Message)
  return false;
#undef DO_
}

void Type233Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type233Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type233Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type233Message)
}

::google::protobuf::uint8* Type233Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type233Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type233Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type233Message)
  return target;
}

int Type233Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type233Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type233Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type233Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type233Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type233Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type233Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type233Message)
    MergeFrom(*source);
  }
}

void Type233Message::MergeFrom(const Type233Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type233Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type233Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type233Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type233Message::CopyFrom(const Type233Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type233Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type233Message::IsInitialized() const {

  return true;
}

void Type233Message::Swap(Type233Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type233Message::InternalSwap(Type233Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type233Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type233Message_descriptor_;
  metadata.reflection = Type233Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type233Message

// optional string data = 1;
bool Type233Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type233Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type233Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type233Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type233Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type233Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type233Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type233Message.data)
}
 void Type233Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type233Message.data)
}
 void Type233Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type233Message.data)
}
 ::std::string* Type233Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type233Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type233Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type233Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type233Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type233Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type234Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type234Message::Type234Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type234Message)
}

void Type234Message::InitAsDefaultInstance() {
}

Type234Message::Type234Message(const Type234Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type234Message)
}

void Type234Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type234Message::~Type234Message() {
  // @@protoc_insertion_point(destructor:tests.Type234Message)
  SharedDtor();
}

void Type234Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type234Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type234Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type234Message_descriptor_;
}

const Type234Message& Type234Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type234Message* Type234Message::default_instance_ = NULL;

Type234Message* Type234Message::New(::google::protobuf::Arena* arena) const {
  Type234Message* n = new Type234Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type234Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type234Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type234Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type234Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type234Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type234Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type234Message)
  return false;
#undef DO_
}

void Type234Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type234Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type234Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type234Message)
}

::google::protobuf::uint8* Type234Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type234Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type234Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type234Message)
  return target;
}

int Type234Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type234Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type234Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type234Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type234Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type234Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type234Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type234Message)
    MergeFrom(*source);
  }
}

void Type234Message::MergeFrom(const Type234Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type234Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type234Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type234Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type234Message::CopyFrom(const Type234Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type234Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type234Message::IsInitialized() const {

  return true;
}

void Type234Message::Swap(Type234Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type234Message::InternalSwap(Type234Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type234Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type234Message_descriptor_;
  metadata.reflection = Type234Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type234Message

// optional string data = 1;
bool Type234Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type234Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type234Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type234Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type234Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type234Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type234Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type234Message.data)
}
 void Type234Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type234Message.data)
}
 void Type234Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type234Message.data)
}
 ::std::string* Type234Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type234Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type234Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type234Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type234Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type234Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type235Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type235Message::Type235Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type235Message)
}

void Type235Message::InitAsDefaultInstance() {
}

Type235Message::Type235Message(const Type235Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type235Message)
}

void Type235Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type235Message::~Type235Message() {
  // @@protoc_insertion_point(destructor:tests.Type235Message)
  SharedDtor();
}

void Type235Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type235Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type235Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type235Message_descriptor_;
}

const Type235Message& Type235Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type235Message* Type235Message::default_instance_ = NULL;

Type235Message* Type235Message::New(::google::protobuf::Arena* arena) const {
  Type235Message* n = new Type235Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type235Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type235Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type235Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type235Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type235Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type235Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type235Message)
  return false;
#undef DO_
}

void Type235Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type235Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type235Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type235Message)
}

::google::protobuf::uint8* Type235Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type235Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type235Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type235Message)
  return target;
}

int Type235Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type235Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type235Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type235Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type235Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type235Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type235Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type235Message)
    MergeFrom(*source);
  }
}

void Type235Message::MergeFrom(const Type235Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type235Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type235Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type235Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type235Message::CopyFrom(const Type235Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type235Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type235Message::IsInitialized() const {

  return true;
}

void Type235Message::Swap(Type235Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type235Message::InternalSwap(Type235Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type235Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type235Message_descriptor_;
  metadata.reflection = Type235Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type235Message

// optional string data = 1;
bool Type235Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type235Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type235Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type235Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type235Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type235Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type235Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type235Message.data)
}
 void Type235Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type235Message.data)
}
 void Type235Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type235Message.data)
}
 ::std::string* Type235Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type235Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type235Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type235Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type235Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type235Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type236Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type236Message::Type236Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type236Message)
}

void Type236Message::InitAsDefaultInstance() {
}

Type236Message::Type236Message(const Type236Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type236Message)
}

void Type236Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type236Message::~Type236Message() {
  // @@protoc_insertion_point(destructor:tests.Type236Message)
  SharedDtor();
}

void Type236Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type236Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type236Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type236Message_descriptor_;
}

const Type236Message& Type236Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type236Message* Type236Message::default_instance_ = NULL;

Type236Message* Type236Message::New(::google::protobuf::Arena* arena) const {
  Type236Message* n = new Type236Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type236Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type236Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type236Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type236Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type236Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type236Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type236Message)
  return false;
#undef DO_
}

void Type236Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type236Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type236Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type236Message)
}

::google::protobuf::uint8* Type236Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type236Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type236Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type236Message)
  return target;
}

int Type236Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type236Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type236Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type236Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type236Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type236Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type236Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type236Message)
    MergeFrom(*source);
  }
}

void Type236Message::MergeFrom(const Type236Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type236Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type236Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type236Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type236Message::CopyFrom(const Type236Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type236Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type236Message::IsInitialized() const {

  return true;
}

void Type236Message::Swap(Type236Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type236Message::InternalSwap(Type236Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type236Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type236Message_descriptor_;
  metadata.reflection = Type236Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type236Message

// optional string data = 1;
bool Type236Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type236Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type236Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type236Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type236Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type236Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type236Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type236Message.data)
}
 void Type236Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type236Message.data)
}
 void Type236Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type236Message.data)
}
 ::std::string* Type236Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type236Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type236Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type236Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type236Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type236Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type237Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type237Message::Type237Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type237Message)
}

void Type237Message::InitAsDefaultInstance() {
}

Type237Message::Type237Message(const Type237Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type237Message)
}

void Type237Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type237Message::~Type237Message() {
  // @@protoc_insertion_point(destructor:tests.Type237Message)
  SharedDtor();
}

void Type237Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type237Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type237Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type237Message_descriptor_;
}

const Type237Message& Type237Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type237Message* Type237Message::default_instance_ = NULL;

Type237Message* Type237Message::New(::google::protobuf::Arena* arena) const {
  Type237Message* n = new Type237Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type237Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type237Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type237Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type237Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type237Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type237Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type237Message)
  return false;
#undef DO_
}

void Type237Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type237Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type237Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type237Message)
}

::google::protobuf::uint8* Type237Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type237Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type237Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type237Message)
  return target;
}

int Type237Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type237Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type237Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type237Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type237Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type237Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type237Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type237Message)
    MergeFrom(*source);
  }
}

void Type237Message::MergeFrom(const Type237Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type237Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type237Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type237Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type237Message::CopyFrom(const Type237Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type237Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type237Message::IsInitialized() const {

  return true;
}

void Type237Message::Swap(Type237Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type237Message::InternalSwap(Type237Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type237Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type237Message_descriptor_;
  metadata.reflection = Type237Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type237Message

// optional string data = 1;
bool Type237Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type237Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type237Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type237Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type237Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type237Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type237Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type237Message.data)
}
 void Type237Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type237Message.data)
}
 void Type237Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type237Message.data)
}
 ::std::string* Type237Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type237Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type237Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type237Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type237Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type237Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type238Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type238Message::Type238Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type238Message)
}

void Type238Message::InitAsDefaultInstance() {
}

Type238Message::Type238Message(const Type238Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type238Message)
}

void Type238Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type238Message::~Type238Message() {
  // @@protoc_insertion_point(destructor:tests.Type238Message)
  SharedDtor();
}

void Type238Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type238Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type238Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type238Message_descriptor_;
}

const Type238Message& Type238Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type238Message* Type238Message::default_instance_ = NULL;

Type238Message* Type238Message::New(::google::protobuf::Arena* arena) const {
  Type238Message* n = new Type238Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type238Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type238Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type238Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type238Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type238Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type238Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type238Message)
  return false;
#undef DO_
}

void Type238Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type238Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type238Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type238Message)
}

::google::protobuf::uint8* Type238Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type238Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type238Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type238Message)
  return target;
}

int Type238Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type238Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type238Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type238Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type238Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type238Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type238Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type238Message)
    MergeFrom(*source);
  }
}

void Type238Message::MergeFrom(const Type238Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type238Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type238Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type238Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type238Message::CopyFrom(const Type238Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type238Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type238Message::IsInitialized() const {

  return true;
}

void Type238Message::Swap(Type238Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type238Message::InternalSwap(Type238Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type238Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type238Message_descriptor_;
  metadata.reflection = Type238Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type238Message

// optional string data = 1;
bool Type238Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type238Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type238Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type238Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type238Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type238Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type238Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type238Message.data)
}
 void Type238Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type238Message.data)
}
 void Type238Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type238Message.data)
}
 ::std::string* Type238Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type238Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type238Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type238Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type238Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type238Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type239Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type239Message::Type239Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type239Message)
}

void Type239Message::InitAsDefaultInstance() {
}

Type239Message::Type239Message(const Type239Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type239Message)
}

void Type239Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type239Message::~Type239Message() {
  // @@protoc_insertion_point(destructor:tests.Type239Message)
  SharedDtor();
}

void Type239Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type239Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type239Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type239Message_descriptor_;
}

const Type239Message& Type239Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type239Message* Type239Message::default_instance_ = NULL;

Type239Message* Type239Message::New(::google::protobuf::Arena* arena) const {
  Type239Message* n = new Type239Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type239Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type239Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type239Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type239Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type239Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type239Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type239Message)
  return false;
#undef DO_
}

void Type239Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type239Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type239Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type239Message)
}

::google::protobuf::uint8* Type239Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type239Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type239Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type239Message)
  return target;
}

int Type239Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type239Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type239Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type239Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type239Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type239Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type239Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type239Message)
    MergeFrom(*source);
  }
}

void Type239Message::MergeFrom(const Type239Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type239Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type239Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type239Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type239Message::CopyFrom(const Type239Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type239Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type239Message::IsInitialized() const {

  return true;
}

void Type239Message::Swap(Type239Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type239Message::InternalSwap(Type239Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type239Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type239Message_descriptor_;
  metadata.reflection = Type239Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type239Message

// optional string data = 1;
bool Type239Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type239Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type239Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type239Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type239Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type239Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type239Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type239Message.data)
}
 void Type239Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type239Message.data)
}
 void Type239Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type239Message.data)
}
 ::std::string* Type239Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type239Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type239Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type239Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type239Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type239Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type240Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type240Message::Type240Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type240Message)
}

void Type240Message::InitAsDefaultInstance() {
}

Type240Message::Type240Message(const Type240Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type240Message)
}

void Type240Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type240Message::~Type240Message() {
  // @@protoc_insertion_point(destructor:tests.Type240Message)
  SharedDtor();
}

void Type240Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type240Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type240Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type240Message_descriptor_;
}

const Type240Message& Type240Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type240Message* Type240Message::default_instance_ = NULL;

Type240Message* Type240Message::New(::google::protobuf::Arena* arena) const {
  Type240Message* n = new Type240Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type240Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type240Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type240Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type240Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type240Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type240Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type240Message)
  return false;
#undef DO_
}

void Type240Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type240Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type240Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type240Message)
}

::google::protobuf::uint8* Type240Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type240Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type240Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type240Message)
  return target;
}

int Type240Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type240Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type240Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type240Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type240Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type240Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type240Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type240Message)
    MergeFrom(*source);
  }
}

void Type240Message::MergeFrom(const Type240Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type240Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type240Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type240Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type240Message::CopyFrom(const Type240Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type240Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type240Message::IsInitialized() const {

  return true;
}

void Type240Message::Swap(Type240Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type240Message::InternalSwap(Type240Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type240Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type240Message_descriptor_;
  metadata.reflection = Type240Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type240Message

// optional string data = 1;
bool Type240Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type240Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type240Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type240Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type240Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type240Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type240Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type240Message.data)
}
 void Type240Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type240Message.data)
}
 void Type240Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type240Message.data)
}
 ::std::string* Type240Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type240Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type240Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type240Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type240Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type240Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type241Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type241Message::Type241Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type241Message)
}

void Type241Message::InitAsDefaultInstance() {
}

Type241Message::Type241Message(const Type241Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type241Message)
}

void Type241Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type241Message::~Type241Message() {
  // @@protoc_insertion_point(destructor:tests.Type241Message)
  SharedDtor();
}

void Type241Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type241Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type241Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type241Message_descriptor_;
}

const Type241Message& Type241Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type241Message* Type241Message::default_instance_ = NULL;

Type241Message* Type241Message::New(::google::protobuf::Arena* arena) const {
  Type241Message* n = new Type241Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type241Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type241Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type241Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type241Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type241Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type241Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type241Message)
  return false;
#undef DO_
}

void Type241Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type241Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type241Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type241Message)
}

::google::protobuf::uint8* Type241Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type241Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type241Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type241Message)
  return target;
}

int Type241Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type241Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type241Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type241Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type241Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type241Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type241Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type241Message)
    MergeFrom(*source);
  }
}

void Type241Message::MergeFrom(const Type241Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type241Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type241Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type241Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type241Message::CopyFrom(const Type241Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type241Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type241Message::IsInitialized() const {

  return true;
}

void Type241Message::Swap(Type241Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type241Message::InternalSwap(Type241Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type241Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type241Message_descriptor_;
  metadata.reflection = Type241Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type241Message

// optional string data = 1;
bool Type241Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type241Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type241Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type241Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type241Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type241Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type241Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type241Message.data)
}
 void Type241Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type241Message.data)
}
 void Type241Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type241Message.data)
}
 ::std::string* Type241Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type241Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type241Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type241Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type241Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type241Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type242Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type242Message::Type242Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type242Message)
}

void Type242Message::InitAsDefaultInstance() {
}

Type242Message::Type242Message(const Type242Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type242Message)
}

void Type242Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type242Message::~Type242Message() {
  // @@protoc_insertion_point(destructor:tests.Type242Message)
  SharedDtor();
}

void Type242Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type242Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type242Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type242Message_descriptor_;
}

const Type242Message& Type242Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type242Message* Type242Message::default_instance_ = NULL;

Type242Message* Type242Message::New(::google::protobuf::Arena* arena) const {
  Type242Message* n = new Type242Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type242Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type242Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type242Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type242Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type242Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type242Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type242Message)
  return false;
#undef DO_
}

void Type242Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type242Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type242Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type242Message)
}

::google::protobuf::uint8* Type242Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type242Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type242Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type242Message)
  return target;
}

int Type242Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type242Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type242Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type242Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type242Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type242Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type242Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type242Message)
    MergeFrom(*source);
  }
}

void Type242Message::MergeFrom(const Type242Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type242Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type242Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type242Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type242Message::CopyFrom(const Type242Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type242Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type242Message::IsInitialized() const {

  return true;
}

void Type242Message::Swap(Type242Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type242Message::InternalSwap(Type242Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type242Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type242Message_descriptor_;
  metadata.reflection = Type242Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type242Message

// optional string data = 1;
bool Type242Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type242Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type242Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type242Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type242Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type242Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type242Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type242Message.data)
}
 void Type242Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type242Message.data)
}
 void Type242Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type242Message.data)
}
 ::std::string* Type242Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type242Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type242Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type242Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type242Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type242Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type243Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type243Message::Type243Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type243Message)
}

void Type243Message::InitAsDefaultInstance() {
}

Type243Message::Type243Message(const Type243Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type243Message)
}

void Type243Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type243Message::~Type243Message() {
  // @@protoc_insertion_point(destructor:tests.Type243Message)
  SharedDtor();
}

void Type243Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type243Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type243Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type243Message_descriptor_;
}

const Type243Message& Type243Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type243Message* Type243Message::default_instance_ = NULL;

Type243Message* Type243Message::New(::google::protobuf::Arena* arena) const {
  Type243Message* n = new Type243Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type243Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type243Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type243Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type243Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type243Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type243Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type243Message)
  return false;
#undef DO_
}

void Type243Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type243Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type243Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type243Message)
}

::google::protobuf::uint8* Type243Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type243Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type243Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type243Message)
  return target;
}

int Type243Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type243Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type243Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type243Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type243Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type243Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type243Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type243Message)
    MergeFrom(*source);
  }
}

void Type243Message::MergeFrom(const Type243Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type243Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type243Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type243Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type243Message::CopyFrom(const Type243Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type243Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type243Message::IsInitialized() const {

  return true;
}

void Type243Message::Swap(Type243Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type243Message::InternalSwap(Type243Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type243Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type243Message_descriptor_;
  metadata.reflection = Type243Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type243Message

// optional string data = 1;
bool Type243Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type243Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type243Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type243Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type243Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type243Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type243Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type243Message.data)
}
 void Type243Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type243Message.data)
}
 void Type243Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type243Message.data)
}
 ::std::string* Type243Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type243Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type243Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type243Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type243Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type243Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type244Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type244Message::Type244Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type244Message)
}

void Type244Message::InitAsDefaultInstance() {
}

Type244Message::Type244Message(const Type244Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type244Message)
}

void Type244Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type244Message::~Type244Message() {
  // @@protoc_insertion_point(destructor:tests.Type244Message)
  SharedDtor();
}

void Type244Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type244Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type244Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type244Message_descriptor_;
}

const Type244Message& Type244Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type244Message* Type244Message::default_instance_ = NULL;

Type244Message* Type244Message::New(::google::protobuf::Arena* arena) const {
  Type244Message* n = new Type244Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type244Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type244Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type244Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type244Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type244Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type244Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type244Message)
  return false;
#undef DO_
}

void Type244Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type244Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type244Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type244Message)
}

::google::protobuf::uint8* Type244Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type244Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type244Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type244Message)
  return target;
}

int Type244Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type244Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type244Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type244Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type244Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type244Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type244Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type244Message)
    MergeFrom(*source);
  }
}

void Type244Message::MergeFrom(const Type244Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type244Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type244Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type244Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type244Message::CopyFrom(const Type244Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type244Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type244Message::IsInitialized() const {

  return true;
}

void Type244Message::Swap(Type244Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type244Message::InternalSwap(Type244Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type244Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type244Message_descriptor_;
  metadata.reflection = Type244Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type244Message

// optional string data = 1;
bool Type244Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type244Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type244Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type244Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type244Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type244Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type244Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type244Message.data)
}
 void Type244Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type244Message.data)
}
 void Type244Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type244Message.data)
}
 ::std::string* Type244Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type244Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type244Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type244Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type244Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type244Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type245Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type245Message::Type245Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type245Message)
}

void Type245Message::InitAsDefaultInstance() {
}

Type245Message::Type245Message(const Type245Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type245Message)
}

void Type245Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type245Message::~Type245Message() {
  // @@protoc_insertion_point(destructor:tests.Type245Message)
  SharedDtor();
}

void Type245Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type245Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type245Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type245Message_descriptor_;
}

const Type245Message& Type245Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type245Message* Type245Message::default_instance_ = NULL;

Type245Message* Type245Message::New(::google::protobuf::Arena* arena) const {
  Type245Message* n = new Type245Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type245Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type245Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type245Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type245Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type245Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type245Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type245Message)
  return false;
#undef DO_
}

void Type245Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type245Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type245Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type245Message)
}

::google::protobuf::uint8* Type245Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type245Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type245Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type245Message)
  return target;
}

int Type245Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type245Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type245Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type245Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type245Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type245Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type245Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type245Message)
    MergeFrom(*source);
  }
}

void Type245Message::MergeFrom(const Type245Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type245Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type245Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type245Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type245Message::CopyFrom(const Type245Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type245Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type245Message::IsInitialized() const {

  return true;
}

void Type245Message::Swap(Type245Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type245Message::InternalSwap(Type245Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type245Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type245Message_descriptor_;
  metadata.reflection = Type245Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type245Message

// optional string data = 1;
bool Type245Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type245Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type245Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type245Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type245Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type245Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type245Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type245Message.data)
}
 void Type245Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type245Message.data)
}
 void Type245Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type245Message.data)
}
 ::std::string* Type245Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type245Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type245Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type245Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type245Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type245Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type246Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type246Message::Type246Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type246Message)
}

void Type246Message::InitAsDefaultInstance() {
}

Type246Message::Type246Message(const Type246Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type246Message)
}

void Type246Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type246Message::~Type246Message() {
  // @@protoc_insertion_point(destructor:tests.Type246Message)
  SharedDtor();
}

void Type246Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type246Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type246Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type246Message_descriptor_;
}

const Type246Message& Type246Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type246Message* Type246Message::default_instance_ = NULL;

Type246Message* Type246Message::New(::google::protobuf::Arena* arena) const {
  Type246Message* n = new Type246Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type246Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type246Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type246Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type246Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type246Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type246Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type246Message)
  return false;
#undef DO_
}

void Type246Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type246Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type246Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type246Message)
}

::google::protobuf::uint8* Type246Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type246Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type246Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type246Message)
  return target;
}

int Type246Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type246Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type246Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type246Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type246Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type246Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type246Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type246Message)
    MergeFrom(*source);
  }
}

void Type246Message::MergeFrom(const Type246Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type246Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type246Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type246Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type246Message::CopyFrom(const Type246Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type246Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type246Message::IsInitialized() const {

  return true;
}

void Type246Message::Swap(Type246Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type246Message::InternalSwap(Type246Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type246Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type246Message_descriptor_;
  metadata.reflection = Type246Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type246Message

// optional string data = 1;
bool Type246Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type246Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type246Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type246Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type246Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type246Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type246Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type246Message.data)
}
 void Type246Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type246Message.data)
}
 void Type246Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type246Message.data)
}
 ::std::string* Type246Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type246Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type246Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type246Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type246Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type246Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type247Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type247Message::Type247Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type247Message)
}

void Type247Message::InitAsDefaultInstance() {
}

Type247Message::Type247Message(const Type247Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type247Message)
}

void Type247Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type247Message::~Type247Message() {
  // @@protoc_insertion_point(destructor:tests.Type247Message)
  SharedDtor();
}

void Type247Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type247Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type247Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type247Message_descriptor_;
}

const Type247Message& Type247Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type247Message* Type247Message::default_instance_ = NULL;

Type247Message* Type247Message::New(::google::protobuf::Arena* arena) const {
  Type247Message* n = new Type247Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type247Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type247Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type247Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type247Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type247Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type247Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type247Message)
  return false;
#undef DO_
}

void Type247Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type247Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type247Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type247Message)
}

::google::protobuf::uint8* Type247Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type247Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type247Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type247Message)
  return target;
}

int Type247Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type247Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type247Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type247Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type247Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type247Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type247Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type247Message)
    MergeFrom(*source);
  }
}

void Type247Message::MergeFrom(const Type247Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type247Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type247Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type247Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type247Message::CopyFrom(const Type247Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type247Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type247Message::IsInitialized() const {

  return true;
}

void Type247Message::Swap(Type247Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type247Message::InternalSwap(Type247Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type247Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type247Message_descriptor_;
  metadata.reflection = Type247Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type247Message

// optional string data = 1;
bool Type247Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type247Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type247Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type247Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type247Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type247Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type247Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type247Message.data)
}
 void Type247Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type247Message.data)
}
 void Type247Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type247Message.data)
}
 ::std::string* Type247Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type247Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type247Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type247Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type247Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type247Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type248Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type248Message::Type248Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type248Message)
}

void Type248Message::InitAsDefaultInstance() {
}

Type248Message::Type248Message(const Type248Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type248Message)
}

void Type248Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type248Message::~Type248Message() {
  // @@protoc_insertion_point(destructor:tests.Type248Message)
  SharedDtor();
}

void Type248Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type248Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type248Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type248Message_descriptor_;
}

const Type248Message& Type248Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type248Message* Type248Message::default_instance_ = NULL;

Type248Message* Type248Message::New(::google::protobuf::Arena* arena) const {
  Type248Message* n = new Type248Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type248Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type248Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type248Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type248Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type248Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type248Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type248Message)
  return false;
#undef DO_
}

void Type248Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type248Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type248Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type248Message)
}

::google::protobuf::uint8* Type248Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type248Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type248Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type248Message)
  return target;
}

int Type248Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type248Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type248Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type248Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type248Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type248Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type248Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type248Message)
    MergeFrom(*source);
  }
}

void Type248Message::MergeFrom(const Type248Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type248Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type248Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type248Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type248Message::CopyFrom(const Type248Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type248Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type248Message::IsInitialized() const {

  return true;
}

void Type248Message::Swap(Type248Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type248Message::InternalSwap(Type248Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type248Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type248Message_descriptor_;
  metadata.reflection = Type248Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type248Message

// optional string data = 1;
bool Type248Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type248Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type248Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type248Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type248Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type248Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type248Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type248Message.data)
}
 void Type248Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type248Message.data)
}
 void Type248Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type248Message.data)
}
 ::std::string* Type248Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type248Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type248Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type248Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type248Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type248Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type249Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type249Message::Type249Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type249Message)
}

void Type249Message::InitAsDefaultInstance() {
}

Type249Message::Type249Message(const Type249Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type249Message)
}

void Type249Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type249Message::~Type249Message() {
  // @@protoc_insertion_point(destructor:tests.Type249Message)
  SharedDtor();
}

void Type249Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type249Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type249Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type249Message_descriptor_;
}

const Type249Message& Type249Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type249Message* Type249Message::default_instance_ = NULL;

Type249Message* Type249Message::New(::google::protobuf::Arena* arena) const {
  Type249Message* n = new Type249Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type249Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type249Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type249Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type249Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type249Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type249Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type249Message)
  return false;
#undef DO_
}

void Type249Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type249Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type249Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type249Message)
}

::google::protobuf::uint8* Type249Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type249Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type249Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type249Message)
  return target;
}

int Type249Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type249Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type249Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type249Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type249Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type249Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type249Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type249Message)
    MergeFrom(*source);
  }
}

void Type249Message::MergeFrom(const Type249Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type249Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type249Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type249Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type249Message::CopyFrom(const Type249Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type249Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type249Message::IsInitialized() const {

  return true;
}

void Type249Message::Swap(Type249Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type249Message::InternalSwap(Type249Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type249Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type249Message_descriptor_;
  metadata.reflection = Type249Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type249Message

// optional string data = 1;
bool Type249Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type249Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type249Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type249Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type249Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type249Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type249Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type249Message.data)
}
 void Type249Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type249Message.data)
}
 void Type249Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type249Message.data)
}
 ::std::string* Type249Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type249Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type249Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type249Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type249Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type249Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type250Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type250Message::Type250Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type250Message)
}

void Type250Message::InitAsDefaultInstance() {
}

Type250Message::Type250Message(const Type250Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type250Message)
}

void Type250Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type250Message::~Type250Message() {
  // @@protoc_insertion_point(destructor:tests.Type250Message)
  SharedDtor();
}

void Type250Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type250Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type250Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type250Message_descriptor_;
}

const Type250Message& Type250Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type250Message* Type250Message::default_instance_ = NULL;

Type250Message* Type250Message::New(::google::protobuf::Arena* arena) const {
  Type250Message* n = new Type250Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type250Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type250Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type250Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type250Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type250Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type250Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type250Message)
  return false;
#undef DO_
}

void Type250Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type250Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type250Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type250Message)
}

::google::protobuf::uint8* Type250Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type250Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type250Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type250Message)
  return target;
}

int Type250Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type250Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type250Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type250Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type250Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type250Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type250Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type250Message)
    MergeFrom(*source);
  }
}

void Type250Message::MergeFrom(const Type250Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type250Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type250Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type250Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type250Message::CopyFrom(const Type250Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type250Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type250Message::IsInitialized() const {

  return true;
}

void Type250Message::Swap(Type250Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type250Message::InternalSwap(Type250Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type250Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type250Message_descriptor_;
  metadata.reflection = Type250Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type250Message

// optional string data = 1;
bool Type250Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type250Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type250Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type250Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type250Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type250Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type250Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type250Message.data)
}
 void Type250Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type250Message.data)
}
 void Type250Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type250Message.data)
}
 ::std::string* Type250Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type250Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type250Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type250Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type250Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type250Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type251Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type251Message::Type251Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type251Message)
}

void Type251Message::InitAsDefaultInstance() {
}

Type251Message::Type251Message(const Type251Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type251Message)
}

void Type251Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type251Message::~Type251Message() {
  // @@protoc_insertion_point(destructor:tests.Type251Message)
  SharedDtor();
}

void Type251Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type251Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type251Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type251Message_descriptor_;
}

const Type251Message& Type251Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type251Message* Type251Message::default_instance_ = NULL;

Type251Message* Type251Message::New(::google::protobuf::Arena* arena) const {
  Type251Message* n = new Type251Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type251Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type251Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type251Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type251Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type251Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type251Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type251Message)
  return false;
#undef DO_
}

void Type251Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type251Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type251Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type251Message)
}

::google::protobuf::uint8* Type251Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type251Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type251Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type251Message)
  return target;
}

int Type251Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type251Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type251Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type251Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type251Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type251Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type251Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type251Message)
    MergeFrom(*source);
  }
}

void Type251Message::MergeFrom(const Type251Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type251Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type251Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type251Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type251Message::CopyFrom(const Type251Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type251Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type251Message::IsInitialized() const {

  return true;
}

void Type251Message::Swap(Type251Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type251Message::InternalSwap(Type251Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type251Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type251Message_descriptor_;
  metadata.reflection = Type251Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type251Message

// optional string data = 1;
bool Type251Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type251Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type251Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type251Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type251Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type251Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type251Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type251Message.data)
}
 void Type251Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type251Message.data)
}
 void Type251Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type251Message.data)
}
 ::std::string* Type251Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type251Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type251Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type251Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type251Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type251Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type252Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type252Message::Type252Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type252Message)
}

void Type252Message::InitAsDefaultInstance() {
}

Type252Message::Type252Message(const Type252Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type252Message)
}

void Type252Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type252Message::~Type252Message() {
  // @@protoc_insertion_point(destructor:tests.Type252Message)
  SharedDtor();
}

void Type252Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type252Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type252Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type252Message_descriptor_;
}

const Type252Message& Type252Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type252Message* Type252Message::default_instance_ = NULL;

Type252Message* Type252Message::New(::google::protobuf::Arena* arena) const {
  Type252Message* n = new Type252Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type252Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type252Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type252Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type252Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type252Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type252Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type252Message)
  return false;
#undef DO_
}

void Type252Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type252Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type252Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type252Message)
}

::google::protobuf::uint8* Type252Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type252Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type252Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type252Message)
  return target;
}

int Type252Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type252Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type252Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type252Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type252Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type252Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type252Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type252Message)
    MergeFrom(*source);
  }
}

void Type252Message::MergeFrom(const Type252Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type252Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type252Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type252Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type252Message::CopyFrom(const Type252Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type252Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type252Message::IsInitialized() const {

  return true;
}

void Type252Message::Swap(Type252Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type252Message::InternalSwap(Type252Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type252Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type252Message_descriptor_;
  metadata.reflection = Type252Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type252Message

// optional string data = 1;
bool Type252Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type252Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type252Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type252Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type252Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type252Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type252Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type252Message.data)
}
 void Type252Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type252Message.data)
}
 void Type252Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type252Message.data)
}
 ::std::string* Type252Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type252Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type252Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type252Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type252Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type252Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type253Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type253Message::Type253Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type253Message)
}

void Type253Message::InitAsDefaultInstance() {
}

Type253Message::Type253Message(const Type253Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type253Message)
}

void Type253Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type253Message::~Type253Message() {
  // @@protoc_insertion_point(destructor:tests.Type253Message)
  SharedDtor();
}

void Type253Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type253Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type253Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type253Message_descriptor_;
}

const Type253Message& Type253Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type253Message* Type253Message::default_instance_ = NULL;

Type253Message* Type253Message::New(::google::protobuf::Arena* arena) const {
  Type253Message* n = new Type253Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type253Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type253Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type253Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type253Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type253Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type253Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type253Message)
  return false;
#undef DO_
}

void Type253Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type253Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type253Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type253Message)
}

::google::protobuf::uint8* Type253Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type253Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type253Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type253Message)
  return target;
}

int Type253Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type253Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type253Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type253Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type253Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type253Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type253Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type253Message)
    MergeFrom(*source);
  }
}

void Type253Message::MergeFrom(const Type253Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type253Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type253Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type253Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type253Message::CopyFrom(const Type253Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type253Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type253Message::IsInitialized() const {

  return true;
}

void Type253Message::Swap(Type253Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type253Message::InternalSwap(Type253Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type253Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type253Message_descriptor_;
  metadata.reflection = Type253Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type253Message

// optional string data = 1;
bool Type253Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type253Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type253Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type253Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type253Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type253Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type253Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type253Message.data)
}
 void Type253Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type253Message.data)
}
 void Type253Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type253Message.data)
}
 ::std::string* Type253Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type253Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type253Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type253Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type253Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type253Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type254Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type254Message::Type254Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type254Message)
}

void Type254Message::InitAsDefaultInstance() {
}

Type254Message::Type254Message(const Type254Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type254Message)
}

void Type254Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type254Message::~Type254Message() {
  // @@protoc_insertion_point(destructor:tests.Type254Message)
  SharedDtor();
}

void Type254Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type254Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type254Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type254Message_descriptor_;
}

const Type254Message& Type254Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type254Message* Type254Message::default_instance_ = NULL;

Type254Message* Type254Message::New(::google::protobuf::Arena* arena) const {
  Type254Message* n = new Type254Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type254Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type254Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type254Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type254Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type254Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type254Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type254Message)
  return false;
#undef DO_
}

void Type254Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type254Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type254Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type254Message)
}

::google::protobuf::uint8* Type254Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type254Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type254Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type254Message)
  return target;
}

int Type254Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type254Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type254Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type254Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type254Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type254Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type254Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type254Message)
    MergeFrom(*source);
  }
}

void Type254Message::MergeFrom(const Type254Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type254Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type254Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type254Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type254Message::CopyFrom(const Type254Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type254Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type254Message::IsInitialized() const {

  return true;
}

void Type254Message::Swap(Type254Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type254Message::InternalSwap(Type254Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type254Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type254Message_descriptor_;
  metadata.reflection = Type254Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type254Message

// optional string data = 1;
bool Type254Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type254Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type254Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type254Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type254Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type254Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type254Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type254Message.data)
}
 void Type254Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type254Message.data)
}
 void Type254Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type254Message.data)
}
 ::std::string* Type254Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type254Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type254Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type254Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type254Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type254Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type255Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type255Message::Type255Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type255Message)
}

void Type255Message::InitAsDefaultInstance() {
}

Type255Message::Type255Message(const Type255Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type255Message)
}

void Type255Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type255Message::~Type255Message() {
  // @@protoc_insertion_point(destructor:tests.Type255Message)
  SharedDtor();
}

void Type255Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type255Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type255Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type255Message_descriptor_;
}

const Type255Message& Type255Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type255Message* Type255Message::default_instance_ = NULL;

Type255Message* Type255Message::New(::google::protobuf::Arena* arena) const {
  Type255Message* n = new Type255Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type255Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type255Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type255Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type255Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type255Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type255Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type255Message)
  return false;
#undef DO_
}

void Type255Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type255Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type255Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type255Message)
}

::google::protobuf::uint8* Type255Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type255Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type255Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type255Message)
  return target;
}

int Type255Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type255Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type255Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type255Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type255Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type255Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type255Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type255Message)
    MergeFrom(*source);
  }
}

void Type255Message::MergeFrom(const Type255Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type255Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type255Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type255Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type255Message::CopyFrom(const Type255Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type255Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type255Message::IsInitialized() const {

  return true;
}

void Type255Message::Swap(Type255Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type255Message::InternalSwap(Type255Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type255Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type255Message_descriptor_;
  metadata.reflection = Type255Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type255Message

// optional string data = 1;
bool Type255Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type255Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type255Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type255Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type255Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type255Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type255Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type255Message.data)
}
 void Type255Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type255Message.data)
}
 void Type255Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type255Message.data)
}
 ::std::string* Type255Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type255Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type255Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type255Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type255Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type255Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type256Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type256Message::Type256Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type256Message)
}

void Type256Message::InitAsDefaultInstance() {
}

Type256Message::Type256Message(const Type256Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type256Message)
}

void Type256Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type256Message::~Type256Message() {
  // @@protoc_insertion_point(destructor:tests.Type256Message)
  SharedDtor();
}

void Type256Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type256Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type256Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type256Message_descriptor_;
}

const Type256Message& Type256Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type256Message* Type256Message::default_instance_ = NULL;

Type256Message* Type256Message::New(::google::protobuf::Arena* arena) const {
  Type256Message* n = new Type256Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type256Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type256Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type256Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type256Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type256Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type256Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type256Message)
  return false;
#undef DO_
}

void Type256Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type256Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type256Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type256Message)
}

::google::protobuf::uint8* Type256Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type256Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type256Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type256Message)
  return target;
}

int Type256Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type256Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type256Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type256Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type256Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type256Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type256Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type256Message)
    MergeFrom(*source);
  }
}

void Type256Message::MergeFrom(const Type256Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type256Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type256Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type256Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type256Message::CopyFrom(const Type256Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type256Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type256Message::IsInitialized() const {

  return true;
}

void Type256Message::Swap(Type256Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type256Message::InternalSwap(Type256Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type256Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type256Message_descriptor_;
  metadata.reflection = Type256Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type256Message

// optional string data = 1;
bool Type256Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type256Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type256Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type256Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type256Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type256Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type256Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type256Message.data)
}
 void Type256Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type256Message.data)
}
 void Type256Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type256Message.data)
}
 ::std::string* Type256Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type256Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type256Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type256Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type256Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type256Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tests

// @@protoc_insertion_point(global_scope)
