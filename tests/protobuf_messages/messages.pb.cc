// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tests {

namespace {

const ::google::protobuf::Descriptor* Type1Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type1Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type2Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type2Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type3Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type3Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type4Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type4Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type5Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type5Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type6Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type6Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type7Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type7Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type8Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type8Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Type9Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type9Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* SimpleClientMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SimpleClientMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_messages_2eproto() {
  protobuf_AddDesc_messages_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "messages.proto");
  GOOGLE_CHECK(file != NULL);
  Type1Message_descriptor_ = file->message_type(0);
  static const int Type1Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type1Message, data_),
  };
  Type1Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type1Message_descriptor_,
      Type1Message::default_instance_,
      Type1Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type1Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type1Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type1Message, _internal_metadata_),
      -1);
  Type2Message_descriptor_ = file->message_type(1);
  static const int Type2Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type2Message, data_),
  };
  Type2Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type2Message_descriptor_,
      Type2Message::default_instance_,
      Type2Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type2Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type2Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type2Message, _internal_metadata_),
      -1);
  Type3Message_descriptor_ = file->message_type(2);
  static const int Type3Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type3Message, data_),
  };
  Type3Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type3Message_descriptor_,
      Type3Message::default_instance_,
      Type3Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type3Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type3Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type3Message, _internal_metadata_),
      -1);
  Type4Message_descriptor_ = file->message_type(3);
  static const int Type4Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type4Message, data_),
  };
  Type4Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type4Message_descriptor_,
      Type4Message::default_instance_,
      Type4Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type4Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type4Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type4Message, _internal_metadata_),
      -1);
  Type5Message_descriptor_ = file->message_type(4);
  static const int Type5Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type5Message, data_),
  };
  Type5Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type5Message_descriptor_,
      Type5Message::default_instance_,
      Type5Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type5Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type5Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type5Message, _internal_metadata_),
      -1);
  Type6Message_descriptor_ = file->message_type(5);
  static const int Type6Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type6Message, data_),
  };
  Type6Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type6Message_descriptor_,
      Type6Message::default_instance_,
      Type6Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type6Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type6Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type6Message, _internal_metadata_),
      -1);
  Type7Message_descriptor_ = file->message_type(6);
  static const int Type7Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type7Message, data_),
  };
  Type7Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type7Message_descriptor_,
      Type7Message::default_instance_,
      Type7Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type7Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type7Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type7Message, _internal_metadata_),
      -1);
  Type8Message_descriptor_ = file->message_type(7);
  static const int Type8Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type8Message, data_),
  };
  Type8Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type8Message_descriptor_,
      Type8Message::default_instance_,
      Type8Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type8Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type8Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type8Message, _internal_metadata_),
      -1);
  Type9Message_descriptor_ = file->message_type(8);
  static const int Type9Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type9Message, data_),
  };
  Type9Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Type9Message_descriptor_,
      Type9Message::default_instance_,
      Type9Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type9Message, _has_bits_[0]),
      -1,
      -1,
      sizeof(Type9Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type9Message, _internal_metadata_),
      -1);
  SimpleClientMessage_descriptor_ = file->message_type(9);
  static const int SimpleClientMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleClientMessage, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleClientMessage, payload_),
  };
  SimpleClientMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SimpleClientMessage_descriptor_,
      SimpleClientMessage::default_instance_,
      SimpleClientMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleClientMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(SimpleClientMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SimpleClientMessage, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_messages_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type1Message_descriptor_, &Type1Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type2Message_descriptor_, &Type2Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type3Message_descriptor_, &Type3Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type4Message_descriptor_, &Type4Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type5Message_descriptor_, &Type5Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type6Message_descriptor_, &Type6Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type7Message_descriptor_, &Type7Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type8Message_descriptor_, &Type8Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Type9Message_descriptor_, &Type9Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SimpleClientMessage_descriptor_, &SimpleClientMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_messages_2eproto() {
  delete Type1Message::default_instance_;
  delete Type1Message_reflection_;
  delete Type2Message::default_instance_;
  delete Type2Message_reflection_;
  delete Type3Message::default_instance_;
  delete Type3Message_reflection_;
  delete Type4Message::default_instance_;
  delete Type4Message_reflection_;
  delete Type5Message::default_instance_;
  delete Type5Message_reflection_;
  delete Type6Message::default_instance_;
  delete Type6Message_reflection_;
  delete Type7Message::default_instance_;
  delete Type7Message_reflection_;
  delete Type8Message::default_instance_;
  delete Type8Message_reflection_;
  delete Type9Message::default_instance_;
  delete Type9Message_reflection_;
  delete SimpleClientMessage::default_instance_;
  delete SimpleClientMessage_reflection_;
}

void protobuf_AddDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016messages.proto\022\005tests\"\034\n\014Type1Message\022"
    "\014\n\004data\030\001 \001(\005\"\034\n\014Type2Message\022\014\n\004data\030\001 "
    "\001(\003\"\034\n\014Type3Message\022\014\n\004data\030\001 \001(\t\"\034\n\014Typ"
    "e4Message\022\014\n\004data\030\001 \001(\002\"\034\n\014Type5Message\022"
    "\014\n\004data\030\001 \001(\t\"\034\n\014Type6Message\022\014\n\004data\030\001 "
    "\001(\t\"\034\n\014Type7Message\022\014\n\004data\030\001 \001(\t\"\034\n\014Typ"
    "e8Message\022\014\n\004data\030\001 \001(\t\"\034\n\014Type9Message\022"
    "\014\n\004data\030\001 \001(\t\"9\n\023SimpleClientMessage\022\021\n\t"
    "timestamp\030\001 \002(\005\022\017\n\007payload\030\002 \001(\t", 352);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages.proto", &protobuf_RegisterTypes);
  Type1Message::default_instance_ = new Type1Message();
  Type2Message::default_instance_ = new Type2Message();
  Type3Message::default_instance_ = new Type3Message();
  Type4Message::default_instance_ = new Type4Message();
  Type5Message::default_instance_ = new Type5Message();
  Type6Message::default_instance_ = new Type6Message();
  Type7Message::default_instance_ = new Type7Message();
  Type8Message::default_instance_ = new Type8Message();
  Type9Message::default_instance_ = new Type9Message();
  SimpleClientMessage::default_instance_ = new SimpleClientMessage();
  Type1Message::default_instance_->InitAsDefaultInstance();
  Type2Message::default_instance_->InitAsDefaultInstance();
  Type3Message::default_instance_->InitAsDefaultInstance();
  Type4Message::default_instance_->InitAsDefaultInstance();
  Type5Message::default_instance_->InitAsDefaultInstance();
  Type6Message::default_instance_->InitAsDefaultInstance();
  Type7Message::default_instance_->InitAsDefaultInstance();
  Type8Message::default_instance_->InitAsDefaultInstance();
  Type9Message::default_instance_->InitAsDefaultInstance();
  SimpleClientMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2eproto {
  StaticDescriptorInitializer_messages_2eproto() {
    protobuf_AddDesc_messages_2eproto();
  }
} static_descriptor_initializer_messages_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type1Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type1Message::Type1Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type1Message)
}

void Type1Message::InitAsDefaultInstance() {
}

Type1Message::Type1Message(const Type1Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type1Message)
}

void Type1Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type1Message::~Type1Message() {
  // @@protoc_insertion_point(destructor:tests.Type1Message)
  SharedDtor();
}

void Type1Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type1Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type1Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type1Message_descriptor_;
}

const Type1Message& Type1Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type1Message* Type1Message::default_instance_ = NULL;

Type1Message* Type1Message::New(::google::protobuf::Arena* arena) const {
  Type1Message* n = new Type1Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type1Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type1Message)
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type1Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type1Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type1Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type1Message)
  return false;
#undef DO_
}

void Type1Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type1Message)
  // optional int32 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type1Message)
}

::google::protobuf::uint8* Type1Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type1Message)
  // optional int32 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type1Message)
  return target;
}

int Type1Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type1Message)
  int total_size = 0;

  // optional int32 data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type1Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type1Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type1Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type1Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type1Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type1Message)
    MergeFrom(*source);
  }
}

void Type1Message::MergeFrom(const Type1Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type1Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type1Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type1Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type1Message::CopyFrom(const Type1Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type1Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type1Message::IsInitialized() const {

  return true;
}

void Type1Message::Swap(Type1Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type1Message::InternalSwap(Type1Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type1Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type1Message_descriptor_;
  metadata.reflection = Type1Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type1Message

// optional int32 data = 1;
bool Type1Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type1Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type1Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type1Message::clear_data() {
  data_ = 0;
  clear_has_data();
}
 ::google::protobuf::int32 Type1Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type1Message.data)
  return data_;
}
 void Type1Message::set_data(::google::protobuf::int32 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:tests.Type1Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type2Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type2Message::Type2Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type2Message)
}

void Type2Message::InitAsDefaultInstance() {
}

Type2Message::Type2Message(const Type2Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type2Message)
}

void Type2Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type2Message::~Type2Message() {
  // @@protoc_insertion_point(destructor:tests.Type2Message)
  SharedDtor();
}

void Type2Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type2Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type2Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type2Message_descriptor_;
}

const Type2Message& Type2Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type2Message* Type2Message::default_instance_ = NULL;

Type2Message* Type2Message::New(::google::protobuf::Arena* arena) const {
  Type2Message* n = new Type2Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type2Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type2Message)
  data_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type2Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type2Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 data = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type2Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type2Message)
  return false;
#undef DO_
}

void Type2Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type2Message)
  // optional int64 data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type2Message)
}

::google::protobuf::uint8* Type2Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type2Message)
  // optional int64 data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type2Message)
  return target;
}

int Type2Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type2Message)
  int total_size = 0;

  // optional int64 data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type2Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type2Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type2Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type2Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type2Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type2Message)
    MergeFrom(*source);
  }
}

void Type2Message::MergeFrom(const Type2Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type2Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type2Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type2Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type2Message::CopyFrom(const Type2Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type2Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type2Message::IsInitialized() const {

  return true;
}

void Type2Message::Swap(Type2Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type2Message::InternalSwap(Type2Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type2Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type2Message_descriptor_;
  metadata.reflection = Type2Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type2Message

// optional int64 data = 1;
bool Type2Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type2Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type2Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type2Message::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
  clear_has_data();
}
 ::google::protobuf::int64 Type2Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type2Message.data)
  return data_;
}
 void Type2Message::set_data(::google::protobuf::int64 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:tests.Type2Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type3Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type3Message::Type3Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type3Message)
}

void Type3Message::InitAsDefaultInstance() {
}

Type3Message::Type3Message(const Type3Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type3Message)
}

void Type3Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type3Message::~Type3Message() {
  // @@protoc_insertion_point(destructor:tests.Type3Message)
  SharedDtor();
}

void Type3Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type3Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type3Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type3Message_descriptor_;
}

const Type3Message& Type3Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type3Message* Type3Message::default_instance_ = NULL;

Type3Message* Type3Message::New(::google::protobuf::Arena* arena) const {
  Type3Message* n = new Type3Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type3Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type3Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type3Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type3Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type3Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type3Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type3Message)
  return false;
#undef DO_
}

void Type3Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type3Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type3Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type3Message)
}

::google::protobuf::uint8* Type3Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type3Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type3Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type3Message)
  return target;
}

int Type3Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type3Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type3Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type3Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type3Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type3Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type3Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type3Message)
    MergeFrom(*source);
  }
}

void Type3Message::MergeFrom(const Type3Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type3Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type3Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type3Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type3Message::CopyFrom(const Type3Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type3Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type3Message::IsInitialized() const {

  return true;
}

void Type3Message::Swap(Type3Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type3Message::InternalSwap(Type3Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type3Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type3Message_descriptor_;
  metadata.reflection = Type3Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type3Message

// optional string data = 1;
bool Type3Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type3Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type3Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type3Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type3Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type3Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type3Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type3Message.data)
}
 void Type3Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type3Message.data)
}
 void Type3Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type3Message.data)
}
 ::std::string* Type3Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type3Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type3Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type3Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type3Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type3Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type4Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type4Message::Type4Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type4Message)
}

void Type4Message::InitAsDefaultInstance() {
}

Type4Message::Type4Message(const Type4Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type4Message)
}

void Type4Message::SharedCtor() {
  _cached_size_ = 0;
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type4Message::~Type4Message() {
  // @@protoc_insertion_point(destructor:tests.Type4Message)
  SharedDtor();
}

void Type4Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type4Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type4Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type4Message_descriptor_;
}

const Type4Message& Type4Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type4Message* Type4Message::default_instance_ = NULL;

Type4Message* Type4Message::New(::google::protobuf::Arena* arena) const {
  Type4Message* n = new Type4Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type4Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type4Message)
  data_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type4Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type4Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float data = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_)));
          set_has_data();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type4Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type4Message)
  return false;
#undef DO_
}

void Type4Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type4Message)
  // optional float data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type4Message)
}

::google::protobuf::uint8* Type4Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type4Message)
  // optional float data = 1;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type4Message)
  return target;
}

int Type4Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type4Message)
  int total_size = 0;

  // optional float data = 1;
  if (has_data()) {
    total_size += 1 + 4;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type4Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type4Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type4Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type4Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type4Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type4Message)
    MergeFrom(*source);
  }
}

void Type4Message::MergeFrom(const Type4Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type4Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type4Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type4Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type4Message::CopyFrom(const Type4Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type4Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type4Message::IsInitialized() const {

  return true;
}

void Type4Message::Swap(Type4Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type4Message::InternalSwap(Type4Message* other) {
  std::swap(data_, other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type4Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type4Message_descriptor_;
  metadata.reflection = Type4Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type4Message

// optional float data = 1;
bool Type4Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type4Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type4Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type4Message::clear_data() {
  data_ = 0;
  clear_has_data();
}
 float Type4Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type4Message.data)
  return data_;
}
 void Type4Message::set_data(float value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:tests.Type4Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type5Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type5Message::Type5Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type5Message)
}

void Type5Message::InitAsDefaultInstance() {
}

Type5Message::Type5Message(const Type5Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type5Message)
}

void Type5Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type5Message::~Type5Message() {
  // @@protoc_insertion_point(destructor:tests.Type5Message)
  SharedDtor();
}

void Type5Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type5Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type5Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type5Message_descriptor_;
}

const Type5Message& Type5Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type5Message* Type5Message::default_instance_ = NULL;

Type5Message* Type5Message::New(::google::protobuf::Arena* arena) const {
  Type5Message* n = new Type5Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type5Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type5Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type5Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type5Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type5Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type5Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type5Message)
  return false;
#undef DO_
}

void Type5Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type5Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type5Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type5Message)
}

::google::protobuf::uint8* Type5Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type5Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type5Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type5Message)
  return target;
}

int Type5Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type5Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type5Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type5Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type5Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type5Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type5Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type5Message)
    MergeFrom(*source);
  }
}

void Type5Message::MergeFrom(const Type5Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type5Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type5Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type5Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type5Message::CopyFrom(const Type5Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type5Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type5Message::IsInitialized() const {

  return true;
}

void Type5Message::Swap(Type5Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type5Message::InternalSwap(Type5Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type5Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type5Message_descriptor_;
  metadata.reflection = Type5Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type5Message

// optional string data = 1;
bool Type5Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type5Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type5Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type5Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type5Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type5Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type5Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type5Message.data)
}
 void Type5Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type5Message.data)
}
 void Type5Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type5Message.data)
}
 ::std::string* Type5Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type5Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type5Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type5Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type5Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type5Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type6Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type6Message::Type6Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type6Message)
}

void Type6Message::InitAsDefaultInstance() {
}

Type6Message::Type6Message(const Type6Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type6Message)
}

void Type6Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type6Message::~Type6Message() {
  // @@protoc_insertion_point(destructor:tests.Type6Message)
  SharedDtor();
}

void Type6Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type6Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type6Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type6Message_descriptor_;
}

const Type6Message& Type6Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type6Message* Type6Message::default_instance_ = NULL;

Type6Message* Type6Message::New(::google::protobuf::Arena* arena) const {
  Type6Message* n = new Type6Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type6Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type6Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type6Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type6Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type6Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type6Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type6Message)
  return false;
#undef DO_
}

void Type6Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type6Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type6Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type6Message)
}

::google::protobuf::uint8* Type6Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type6Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type6Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type6Message)
  return target;
}

int Type6Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type6Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type6Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type6Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type6Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type6Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type6Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type6Message)
    MergeFrom(*source);
  }
}

void Type6Message::MergeFrom(const Type6Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type6Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type6Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type6Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type6Message::CopyFrom(const Type6Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type6Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type6Message::IsInitialized() const {

  return true;
}

void Type6Message::Swap(Type6Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type6Message::InternalSwap(Type6Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type6Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type6Message_descriptor_;
  metadata.reflection = Type6Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type6Message

// optional string data = 1;
bool Type6Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type6Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type6Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type6Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type6Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type6Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type6Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type6Message.data)
}
 void Type6Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type6Message.data)
}
 void Type6Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type6Message.data)
}
 ::std::string* Type6Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type6Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type6Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type6Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type6Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type6Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type7Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type7Message::Type7Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type7Message)
}

void Type7Message::InitAsDefaultInstance() {
}

Type7Message::Type7Message(const Type7Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type7Message)
}

void Type7Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type7Message::~Type7Message() {
  // @@protoc_insertion_point(destructor:tests.Type7Message)
  SharedDtor();
}

void Type7Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type7Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type7Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type7Message_descriptor_;
}

const Type7Message& Type7Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type7Message* Type7Message::default_instance_ = NULL;

Type7Message* Type7Message::New(::google::protobuf::Arena* arena) const {
  Type7Message* n = new Type7Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type7Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type7Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type7Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type7Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type7Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type7Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type7Message)
  return false;
#undef DO_
}

void Type7Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type7Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type7Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type7Message)
}

::google::protobuf::uint8* Type7Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type7Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type7Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type7Message)
  return target;
}

int Type7Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type7Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type7Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type7Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type7Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type7Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type7Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type7Message)
    MergeFrom(*source);
  }
}

void Type7Message::MergeFrom(const Type7Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type7Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type7Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type7Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type7Message::CopyFrom(const Type7Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type7Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type7Message::IsInitialized() const {

  return true;
}

void Type7Message::Swap(Type7Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type7Message::InternalSwap(Type7Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type7Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type7Message_descriptor_;
  metadata.reflection = Type7Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type7Message

// optional string data = 1;
bool Type7Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type7Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type7Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type7Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type7Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type7Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type7Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type7Message.data)
}
 void Type7Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type7Message.data)
}
 void Type7Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type7Message.data)
}
 ::std::string* Type7Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type7Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type7Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type7Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type7Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type7Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type8Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type8Message::Type8Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type8Message)
}

void Type8Message::InitAsDefaultInstance() {
}

Type8Message::Type8Message(const Type8Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type8Message)
}

void Type8Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type8Message::~Type8Message() {
  // @@protoc_insertion_point(destructor:tests.Type8Message)
  SharedDtor();
}

void Type8Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type8Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type8Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type8Message_descriptor_;
}

const Type8Message& Type8Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type8Message* Type8Message::default_instance_ = NULL;

Type8Message* Type8Message::New(::google::protobuf::Arena* arena) const {
  Type8Message* n = new Type8Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type8Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type8Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type8Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type8Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type8Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type8Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type8Message)
  return false;
#undef DO_
}

void Type8Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type8Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type8Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type8Message)
}

::google::protobuf::uint8* Type8Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type8Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type8Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type8Message)
  return target;
}

int Type8Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type8Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type8Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type8Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type8Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type8Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type8Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type8Message)
    MergeFrom(*source);
  }
}

void Type8Message::MergeFrom(const Type8Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type8Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type8Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type8Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type8Message::CopyFrom(const Type8Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type8Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type8Message::IsInitialized() const {

  return true;
}

void Type8Message::Swap(Type8Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type8Message::InternalSwap(Type8Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type8Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type8Message_descriptor_;
  metadata.reflection = Type8Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type8Message

// optional string data = 1;
bool Type8Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type8Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type8Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type8Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type8Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type8Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type8Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type8Message.data)
}
 void Type8Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type8Message.data)
}
 void Type8Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type8Message.data)
}
 ::std::string* Type8Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type8Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type8Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type8Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type8Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type8Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type9Message::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type9Message::Type9Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.Type9Message)
}

void Type9Message::InitAsDefaultInstance() {
}

Type9Message::Type9Message(const Type9Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.Type9Message)
}

void Type9Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type9Message::~Type9Message() {
  // @@protoc_insertion_point(destructor:tests.Type9Message)
  SharedDtor();
}

void Type9Message::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Type9Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type9Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type9Message_descriptor_;
}

const Type9Message& Type9Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

Type9Message* Type9Message::default_instance_ = NULL;

Type9Message* Type9Message::New(::google::protobuf::Arena* arena) const {
  Type9Message* n = new Type9Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Type9Message::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.Type9Message)
  if (has_data()) {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Type9Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.Type9Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string data = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.Type9Message.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.Type9Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.Type9Message)
  return false;
#undef DO_
}

void Type9Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.Type9Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type9Message.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.Type9Message)
}

::google::protobuf::uint8* Type9Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.Type9Message)
  // optional string data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.Type9Message.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.Type9Message)
  return target;
}

int Type9Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.Type9Message)
  int total_size = 0;

  // optional string data = 1;
  if (has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type9Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.Type9Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Type9Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Type9Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.Type9Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.Type9Message)
    MergeFrom(*source);
  }
}

void Type9Message::MergeFrom(const Type9Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.Type9Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Type9Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.Type9Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type9Message::CopyFrom(const Type9Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.Type9Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type9Message::IsInitialized() const {

  return true;
}

void Type9Message::Swap(Type9Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Type9Message::InternalSwap(Type9Message* other) {
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Type9Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type9Message_descriptor_;
  metadata.reflection = Type9Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Type9Message

// optional string data = 1;
bool Type9Message::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Type9Message::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void Type9Message::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void Type9Message::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
 const ::std::string& Type9Message::data() const {
  // @@protoc_insertion_point(field_get:tests.Type9Message.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type9Message::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.Type9Message.data)
}
 void Type9Message::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.Type9Message.data)
}
 void Type9Message::set_data(const char* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.Type9Message.data)
}
 ::std::string* Type9Message::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:tests.Type9Message.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Type9Message::release_data() {
  // @@protoc_insertion_point(field_release:tests.Type9Message.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Type9Message::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:tests.Type9Message.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimpleClientMessage::kTimestampFieldNumber;
const int SimpleClientMessage::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimpleClientMessage::SimpleClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tests.SimpleClientMessage)
}

void SimpleClientMessage::InitAsDefaultInstance() {
}

SimpleClientMessage::SimpleClientMessage(const SimpleClientMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tests.SimpleClientMessage)
}

void SimpleClientMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  timestamp_ = 0;
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SimpleClientMessage::~SimpleClientMessage() {
  // @@protoc_insertion_point(destructor:tests.SimpleClientMessage)
  SharedDtor();
}

void SimpleClientMessage::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SimpleClientMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SimpleClientMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SimpleClientMessage_descriptor_;
}

const SimpleClientMessage& SimpleClientMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
  return *default_instance_;
}

SimpleClientMessage* SimpleClientMessage::default_instance_ = NULL;

SimpleClientMessage* SimpleClientMessage::New(::google::protobuf::Arena* arena) const {
  SimpleClientMessage* n = new SimpleClientMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SimpleClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tests.SimpleClientMessage)
  if (_has_bits_[0 / 32] & 3u) {
    timestamp_ = 0;
    if (has_payload()) {
      payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SimpleClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tests.SimpleClientMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 timestamp = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_payload;
        break;
      }

      // optional string payload = 2;
      case 2: {
        if (tag == 18) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payload()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->payload().data(), this->payload().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tests.SimpleClientMessage.payload");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tests.SimpleClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tests.SimpleClientMessage)
  return false;
#undef DO_
}

void SimpleClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tests.SimpleClientMessage)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->timestamp(), output);
  }

  // optional string payload = 2;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.SimpleClientMessage.payload");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->payload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tests.SimpleClientMessage)
}

::google::protobuf::uint8* SimpleClientMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tests.SimpleClientMessage)
  // required int32 timestamp = 1;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->timestamp(), target);
  }

  // optional string payload = 2;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tests.SimpleClientMessage.payload");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->payload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tests.SimpleClientMessage)
  return target;
}

int SimpleClientMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tests.SimpleClientMessage)
  int total_size = 0;

  // required int32 timestamp = 1;
  if (has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timestamp());
  }
  // optional string payload = 2;
  if (has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payload());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SimpleClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tests.SimpleClientMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SimpleClientMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SimpleClientMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tests.SimpleClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tests.SimpleClientMessage)
    MergeFrom(*source);
  }
}

void SimpleClientMessage::MergeFrom(const SimpleClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tests.SimpleClientMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_payload()) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SimpleClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tests.SimpleClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimpleClientMessage::CopyFrom(const SimpleClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tests.SimpleClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimpleClientMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SimpleClientMessage::Swap(SimpleClientMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimpleClientMessage::InternalSwap(SimpleClientMessage* other) {
  std::swap(timestamp_, other->timestamp_);
  payload_.Swap(&other->payload_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SimpleClientMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SimpleClientMessage_descriptor_;
  metadata.reflection = SimpleClientMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SimpleClientMessage

// required int32 timestamp = 1;
bool SimpleClientMessage::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SimpleClientMessage::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
void SimpleClientMessage::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
void SimpleClientMessage::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
 ::google::protobuf::int32 SimpleClientMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:tests.SimpleClientMessage.timestamp)
  return timestamp_;
}
 void SimpleClientMessage::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:tests.SimpleClientMessage.timestamp)
}

// optional string payload = 2;
bool SimpleClientMessage::has_payload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SimpleClientMessage::set_has_payload() {
  _has_bits_[0] |= 0x00000002u;
}
void SimpleClientMessage::clear_has_payload() {
  _has_bits_[0] &= ~0x00000002u;
}
void SimpleClientMessage::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
 const ::std::string& SimpleClientMessage::payload() const {
  // @@protoc_insertion_point(field_get:tests.SimpleClientMessage.payload)
  return payload_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SimpleClientMessage::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tests.SimpleClientMessage.payload)
}
 void SimpleClientMessage::set_payload(const char* value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tests.SimpleClientMessage.payload)
}
 void SimpleClientMessage::set_payload(const char* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tests.SimpleClientMessage.payload)
}
 ::std::string* SimpleClientMessage::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:tests.SimpleClientMessage.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SimpleClientMessage::release_payload() {
  // @@protoc_insertion_point(field_release:tests.SimpleClientMessage.payload)
  clear_has_payload();
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SimpleClientMessage::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:tests.SimpleClientMessage.payload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tests

// @@protoc_insertion_point(global_scope)
